[
    "Question Text:\nWhich city has the highest total count when considering population, area and parks?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Cities and their related data\ncities = ['City1', 'City2', 'City3', 'City4', 'City5', 'City6', 'City7', 'City8', 'City9']\npopulation = [10, 15, 20, 25, 35, 40, 45, 50, 55]\narea = [5, 10, 15, 20, 30, 35, 45, 40, 45]\nparks = [2, 3, 4, 5, 6, 5, 4, 3, 2]\n\nbarWidth = 0.5\n\n# Create the plot\nfig, ax = plt.subplots()\n\n# Layer the bars\nbar1 = plt.bar(cities, population, color='#217604', edgecolor='grey', width=barWidth)\nbar2 = plt.bar(cities, area, bottom=population, color='#63c664', edgecolor='grey', width=barWidth)\nbar3 = plt.bar(cities, parks, bottom=[i+j for i,j in zip(population, area)], color='#f10e6d', edgecolor='grey', width=barWidth)\n\n# Adding labels, title and legend\nplt.xlabel(\"Cities\")\nplt.ylabel(\"Count\")\nplt.title(\"Population, Area and Parks in different Cities\")\nplt.legend([bar1, bar2, bar3], ['Population (in thousands)', 'Area (in square miles)', 'Parks'])\n\n# Display the plot\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/1.png')\nplt.show()\n```\nChoices:['City1', 'City2', 'City3', 'City4', 'City5', 'City6', 'City7', 'City8', 'City9']\nStudent's Response:'City9'\n",
    "Question Text:\nWhich category has second highest number of animals?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Cats', 'Dogs', 'Rats', 'Bats']\nvalues = [20, 15, 25, 10] \nhatches = ['xx', '//', '', 'xx']\n\nplt.barh(categories, values, color='skyblue', edgecolor='black', hatch=hatches[0])\nfor i in range(1, len(values)):\n    plt.barh(categories[i], values[i], color='skyblue', edgecolor='black', hatch=hatches[i])\nplt.xlabel('Number of animals')\nplt.ylabel('Categories')\nplt.title('Distribution of animals')\nplt.grid(axis='x')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/2.png')\nplt.show()\n```\nChoices:['Cats', 'Dogs', 'Rats', 'Bats']\nStudent's Response:Cats\n",
    "Question Text:\nIn which sector is the employment rate the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# creating dataset\ncategories = ['Manufacturing', 'IT', 'Health & Care']\nemployments = [50, 65, 55]\n\nplt.barh(categories, employments, color='#870ddc')\n\n# Customization\nplt.title('Employment rate in different sectors')\nplt.xlabel('Number of employees (in thousands)')\nplt.ylabel('Sectors')\nplt.grid()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/4.png')\nplt.show()\n```\nChoices:['Manufacturing', 'IT', 'Health & Care']\nStudent's Response:'IT'\n",
    "Question Text:\nDoes the Fiction category have more books than the Educational category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Fiction', 'Non-fiction', 'Educational']\nvalues = [20, 25, 15]\ncolors = ['#5f1f2d', '#afae23', '#7723db']\n\nplt.barh(categories, values, color=colors)\nplt.xlabel('Number of Books')\nplt.ylabel('Category')\nplt.title('Books by Category')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/6.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes France get more tourists than the USA?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Bar chart data\ncountries = ['France', 'USA', 'Spain', 'China', 'Italy', 'Mexico', 'UK', 'Turkey']\ntourists = [90, 80, 70, 60, 55, 50, 45, 40]\n\n# Bar chart colors\ncolors = ['#dd22d2', '#21c901', '#dd22d2', '#21c901', '#dd22d2', '#21c901', '#dd22d2', '#21c901']\n\n# Create bar chart\nplt.figure(figsize=(12,7))\nplt.bar(countries, tourists, color = colors)\n\n# Add labels\nplt.xlabel('Countries')\nplt.ylabel('Number of Tourists (in millions)')\nplt.title('Tourist visits by country')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/7.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes Spain have more modernist buildings than Italy?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Renaissance', 'Baroque', 'Neoclassicism', 'Modernism', 'Deconstructivism']\n\n# Values in hundred thousands\nvalues_italy = [25, 20, 30, 35, 10]\nvalues_spain = [15, 10, 35, 40, 5]\n\nbarWidth = 0.25\n\nr1 = np.arange(len(values_italy))\nr2 = [x + barWidth for x in r1]\n\nplt.bar(r1, values_italy, color='b', width=barWidth, edgecolor='grey', label='Italy')\nplt.bar(r2, values_spain, color='r', width=barWidth, edgecolor='grey', label='Spain')\n\nplt.xlabel('Architectural Style', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(values_italy))], categories)\n\nplt.ylabel('Number of Buildings')\nplt.title('Number of Buildings by Architectural Style in Italy and Spain')\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/8.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich historical event has a fictional value of 225 in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncategories = ['Bastille Stormed', 'U.S. Independence', 'Fall of Berlin Wall', 'Moon Landing', 'World War II Ends']\nvalues = [200,255,225,300,275]  # all are rounded numbers\ncolors = ['#cd3e34', '#6027db', '#3f8dbe', 'orange', 'green']\nhatches = ['O|', '+o', 'x', 'o', '//']\n\n# Create bar chart\nplt.bar(categories, values, color = colors, hatch = hatches[0])\n\n# Define colors and hatches for each bar\nfor bar, hatch, color in zip(plt.bar(categories, values), hatches, colors):\n    bar.set_hatch(hatch)\n    bar.set_color(color)\n\n# Add labels and title\nplt.title('Historical Events')\nplt.xlabel('Events')\nplt.ylabel('Fictional Value')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/9.png')\n\n# Show the chart\nplt.show()\n```\nChoices:['Bastille Stormed', 'U.S. Independence', 'Fall of Berlin Wall', 'Moon Landing', 'World War II Ends']\nStudent's Response:'Fall of Berlin Wall'\n",
    "Question Text:\nWhat is the total number of birds observed for Group B?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Eagles', 'Sparrows', 'Crows', 'Pigeons', 'Owls', \n              'Hummingbirds', 'Peacocks', 'Penguins', 'Flamingos', 'Parrots']\ngroup_a = [20, 40, 60, 80, 55, 35, 50, 75, 45, 70]\ngroup_b = [45, 60, 80, 25, 40, 50, 75, 35, 65, 55]\n\ncolors = ['#b10feb', '#3fc2b1', '#9fe235', '#85fb56', \n          '#a9d342', '#a9e8bd', '#658c0a', '#aca56a']\nhatches = ['O.', 'OO', '//']\n\nx = range(len(categories))\nbar_width = 0.35\n\nplt.figure(figsize=[10,6])\n\nfor i in x:\n    plt.bar(i-bar_width/2, group_a[i], color=colors[i%len(colors)], width=bar_width, edgecolor='black', hatch=hatches[0])\n    plt.bar(i+bar_width/2, group_b[i], color=colors[(i+1)%len(colors)], width=bar_width, edgecolor='black', hatch=hatches[1])\n\nplt.title('Bird Observation')\nplt.xlabel('Bird Types')\nplt.ylabel('Number of Birds')\nplt.xticks(x, categories)\nplt.legend(['Group A', 'Group B'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/10.png')\nplt.show()\n```\nChoices:['540', '420', '490', '560']\nStudent's Response:530\n",
    "Question Text:\nDid the 'Dolls' category get more preference from Men than Women?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Teddy Bears', 'Action Figures', 'Board Games', 'Puzzles', 'Dolls', 'Video Games']\nmen_means = [15, 30, 45, 20, 35, 50]\nwomen_means = [25, 35, 20, 40, 30, 45]\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width/2, men_means, width, label='Men', color='#cf3dbb')\nrects2 = ax.bar(x + width/2, women_means, width, label='Women')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Toy Preferences')\nax.set_title('Toy Preferences by Gender')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/11.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nBased on the bar chart, which natural disaster occurred more frequently?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Disaster categories and their frequencies\ncategories = ['Earthquakes', 'Floods']\nvalues = [20, 25]\n\n# Create bar chart\nplt.figure(figsize=[10,5])\nplt.barh(categories, values, color='#522c4b')\nplt.xlabel('Frequency')\nplt.ylabel('Type of Disaster')\nplt.title('Frequency of Natural Disasters')\nplt.grid(which='major', axis='x')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/13.png')\nplt.show()\n```\nChoices:['A. Earthquakes', 'B. Floods', 'C. Both occurred equally', 'D. The chart does not provide sufficient information to answer the question']\nStudent's Response:B. Floods\n",
    "Question Text:\nAre there more pigeons than eagles in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\nbirds = ['Pigeons', 'Eagles']\nnumbers = [20, 15]\n\nplt.barh(birds, numbers, color=['blue', 'green'], hatch='xx+o')\n\n# Adding labels\nplt.xlabel('Number')\nplt.ylabel('Birds')\nplt.title('Number of Birds')\nplt.grid(visible=True)\n\n# Save your figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/14.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhat is the total number of patients across all categories?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# categories\ncategories = ['Cardiology', 'Dermatology', 'Endocrinology', 'Gastroenterology', 'Immunology', 'Neurology', 'Oncology', 'Urology']\n\n# values for the bars\nmale_patients = [40, 35, 30, 45, 50, 40, 60, 55]\nfemale_patients = [55, 45, 40, 30, 25, 35, 50, 45]\nunknown_patients = [5, 20, 30, 25, 25, 25, -10, 0]\n\n# locations for the groups\nx = np.arange(len(categories))\n\n# bar width\nwidth = 0.3  \n\nfig, ax = plt.subplots()\n\n# bars\nrects1 = ax.bar(x - width, male_patients, width, label='Male', color='#c70a21')\nrects2 = ax.bar(x, female_patients, width, label='Female', color='#0dc5fe')\nrects3 = ax.bar(x + width, unknown_patients, width, label='Unknown', color='#b14d68')\n\n# labels, title, legend\nax.set_xlabel('Medicine Category')\nax.set_ylabel('Patient Count')\nax.set_title('Number of Patients by Medicine Category and Gender')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\n# function to attach labels to bars\ndef autolabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(rects1)\nautolabel(rects2)\nautolabel(rects3)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/15.png')\nplt.show()\n```\nChoices:[400, 450, 500, 550, 600]\nStudent's Response:550.\n",
    "Question Text:\nDoes New York have a higher population than London?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncities = ['New York', 'London']\npopulation = [85, 90]  # in millions\n\nplt.barh(cities, population, color=['red', 'blue'])\nplt.title('Population of Cities')\nplt.xlabel('Population (in millions)')\nplt.ylabel('Cities')\nplt.grid(True, which='both', axis='x', linestyle='--')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/16.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the Dog Food Consumption more than Dog Toy Usage in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Dog Food Consumption', 'Dog Toy Usage']\nvalues = [30, 20]\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nax.bar(categories, values)\nax.set_ylabel('Values (rounded to nearest 5)')\nax.set_xlabel('Categories')\nax.set_title('Comparison Between Dog Food Consumption and Dog Toy Usage Every Week')\n\nplt.xticks(rotation=90)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/20.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich greenhouse has more Flowers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Trees', 'Flowers']\nvalues = [[10, 30], [20, 15]]\nlabels = ['Greenhouse 1', 'Greenhouse 2']\n\nfig, ax = plt.subplots(figsize=(10, 8))\n\nplt.bar(labels, values[0], color='g', align='center', hatch='x')\nplt.bar(labels, values[1], color='b', align='center', hatch='*', bottom=values[0])\n\nax.set_xlabel('Greenhouses', fontsize=15)\nax.set_ylabel('Number of Plants', fontsize=15)\nax.set_title('Number of Different Plant Types in Greenhouses', fontsize=15)\nax.legend(categories)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/21.png')\nplt.show()\n```\nChoices:['Greenhouse 1', 'Greenhouse 2']\nStudent's Response:Greenhouse 1\n",
    "Question Text:\nIs the 'Automobile' category with less sales in 2019 than in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib \n\ncategories = ['Apparel', 'Automobile', 'Electronics', 'Food & Drink', 'Health & Beauty', 'Home & Kitchen', 'Sports & Outdoors', 'Toys & Games', 'Watches & Jewelry']\nretail_values_2019 = [45, 25, 70, 35, 50, 60, 30, 55, 40]\nretail_values_2020 = [40, 30, 85, 40, 45, 65, 35, 60, 60]\n\nx = list(range(len(categories)))\n\nplt.figure(figsize=[14,8])\n\nbar1=plt.bar([i-0.2 for i in x], retail_values_2019, color='#66278c', width=0.4)\nbar2=plt.bar([i+0.2 for i in x], retail_values_2020, color='#40caa7', width=0.4)\n\nplt.xlabel('Categories')\nplt.ylabel('Retail Sales (in billions)')\nplt.title('Retail Sales by Category')\nplt.xticks(x, categories, rotation=45)\nplt.legend([bar1, bar2], ['2019', '2020'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/22.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich breed category has the largest number of dogs according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Bulldog', 'Poodle', 'Beagle', 'Rottweiler', 'Chihuahua', 'Labrador', 'Husky', 'Dachshund']\nvalues = [30, 35, 65, 45, 55, 70, 50, 40]\ncolors = ['#9da20c', '#b651aa', 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow']\nhatches = ['O', '//', '/o', '|', '\\\\|', '.', '+', '--']\n\nplt.figure(figsize=[10,8])\nplt.barh(categories, values, color=colors, hatch=hatches[0])\n\nfor i in range(1, len(categories)):\n    plt.barh(categories[i], values[i], color=colors[i], hatch=hatches[i])\n\nplt.title('Number of Dogs by Breed')\nplt.xlabel('Number of Dogs')\nplt.ylabel('Breed')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/23.png')\nplt.show()\n```\nChoices:['Bulldog', 'Poodle', 'Beagle', 'Rottweiler', 'Chihuahua', 'Labrador', 'Husky', 'Dachshund']\nStudent's Response:Labrador\n",
    "Question Text:\nIs Python more popular than JavaScript according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Java', 'Python', 'C', 'C++', 'JavaScript', 'Swift', 'Ruby', 'Go', 'PHP', 'Kotlin']\nlanguage_popularity = [80, 75, 90, 85, 95, 50, 70, 60, 75, 45]\n\ncolors = ['#88a54d', '#19b916', '#132e17', '#c67414', '#61226b', '#5cc9b6', '#0d3786', '#497843']\n\nfig, ax = plt.subplots(figsize=(10, 8))\nbars = plt.barh(languages, language_popularity, color=colors)\n\nax.set_xlabel('Popularity')\nax.set_ylabel('Languages')\nax.set_title('Popularity of Languages')\n\nfor b in bars:\n    width = b.get_width()\n    ax.text(width-5,\n            b.get_y() + b.get_height()/2,\n            '%d' % int(width),\n            ha='center', va='bottom', color='white')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/15.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the Bar Chart, do the wildfires affect more people than the earthquakes?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Earthquakes', 'Floods', 'Wildfires', 'Hurricanes']\npeople_affected = [65, 75, 120, 85]\nproperty_loss = [50, 80, 110, 75]\n\nbarWidth = 0.25\n\nr1 = range(len(people_affected))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10,7))\n\nplt.bar(r1, people_affected, color='#b81630', width=barWidth, edgecolor='grey', label='People Affected (in thousands)')\nplt.bar(r2, property_loss, color='#1fd1af', width=barWidth, edgecolor='grey', label='Property Loss (in million $)')\n\nplt.xlabel('Natural Disasters', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(people_affected))], categories)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/25.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich plant type has the second highest number in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the plant categories and their frequency\nplants = ['Roses', 'Sunflowers', 'Daisies', 'Lilies', 'Tulips', 'Orchids', 'Hydrangeas', 'Irises', 'Violets']\nvalues = [30, 35, 40, 35, 30, 25, 40, 35, 45]\n\n# Define the colors for each category\ncolors = ['#e1aeff', '#cf6360', '#cf6360', '#e1aeff', '#cf6360', '#e1aeff', '#cf6360', '#e1aeff', '#cf6360']\n\n# Define the hatches for each category\nhatches = ['\\\\', '-', '.', 'O', '*-', '|', '\\\\|', '-', '.']\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nbars = plt.bar(plants, values, color=colors)\n\n# Apply hatches to each bar\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Types of Plants')\nplt.ylabel('Number of Plants')\nplt.title('Plants Distribution')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/27.png')\nplt.show()\n```\nChoices:['Violets', 'Sunflowers', 'Daisies', 'Hydrangeas']\nStudent's Response:'Daisies'\n",
    "Question Text:\n: Is the plant type with the highest number of species 'Red Maple'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare data\nplants = ['Red Maple', 'Narrow leafed Campion', 'Ladies Slipper', 'Black Elderberry', 'Common Ivy']\nnumber_of_species = [65, 35, 45, 50, 40]  # Numbers rounded off to the nearest 5\n\n# Create figure and plot a bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nax.barh(plants, number_of_species, color='green')\n\nax.set_xlabel('Number of Species')\nax.set_title('Number of Species by Plant Type')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/29.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich type of Festival has the second highest attendance?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfestival_categories = ['Music', 'Film', 'Art', 'Food', 'Cultural']\nattendance_number = [35, 45, 40, 55, 50]\n\nx = range(len(festival_categories))\n\nfig=plt.figure(figsize=(10, 5))\nax = fig.add_subplot(111)\n\nax.bar(x, attendance_number, color=['#526f11', '#525aed', '#526f11', '#525aed', '#526f11'], width=0.6)\n\nax.set_xlabel('Festivals', fontsize=15)\nax.set_ylabel('Attendance (in thousands)', fontsize=15)\nax.set_title('Attendance at Different Types of Festivals', fontsize=20)\nax.set_xticks(x)\nax.set_xticklabels(festival_categories)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/31.png')\nplt.show()\n```\nChoices:['Music', 'Film', 'Art', 'Food', 'Cultural']\nStudent's Response:Food\n",
    "Question Text:\nWho has the highest grade in 'Math' subject?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the category names\ncategories = ['Math', 'English', 'Physics', 'Chemistry', 'Computer Science']\n\n# Define the subject grades for two students\nstudent_A_grades = [80, 65, 75, 70, 85]\nstudent_B_grades = [75, 70, 80, 75, 80]\n\n# define a function to round number to nearest 5\ndef round_to_nearest_five(n):\n    return round(n / 5) * 5\n\n# Round grades to the nearest five\nstudent_A_grades = [round_to_nearest_five(grade) for grade in student_A_grades]\nstudent_B_grades = [round_to_nearest_five(grade) for grade in student_B_grades]\n\n# Set the bar width\nbar_width = 0.35\n\n# Set the figure size\nplt.figure(figsize=(12, 7))\n\n# Generate the positions of the groups\nindices = np.arange(len(categories))\n\n# Create the bars for the first student\nplt.bar(indices, student_A_grades, bar_width, color='#ec0f25', edgecolor='black', label='Student A')\n\n# Create the bars for the second student\nplt.bar(indices + bar_width, student_B_grades, bar_width, color='#3810ce', edgecolor='black', label='Student B')\n\n# Set the category labels and rotate if long\nplt.xticks(indices + bar_width / 2, categories, rotation='horizontal')\n\n# Set the chart title\nplt.title('Grade comparison between Student A and Student B')\n\n# Show a legend\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/32.png')\nplt.show()\n```\nChoices:['Student A', 'Student B']\nStudent's Response:'Student A'\n",
    "Question Text:\nHow many Fiction books are there in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nliterature_categories = ['Fiction', 'Romance', 'Thriller', 'Biographies', 'Science Fiction']\nvalues = [15, 20, 25, 30, 35]\n\nfig = plt.figure(figsize = (10, 5))\n\n# creating the bar plot\nplt.bar(literature_categories, values, color ='maroon', width = 0.4)\n\nplt.xlabel(\"Types of Literature\")\nplt.ylabel(\"Number of Books\")\nplt.title(\"Classification of Books in the Literature category\")\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/33.png')\nplt.show()\n```\nChoices:[10, 15, 20, 25, 30]\nStudent's Response:15\n",
    "Question Text:\nWhat type of house is the least popular according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Small Apartments', 'Medium Apartments', 'Large Apartments', 'Small Houses', 'Medium Houses','Large Houses', 'Villas', 'Mansions']\nvalues = [25, 40, 35, 60, 70, 65, 30, 15]\n\nplt.figure(figsize=(10, 5))\nplt.bar(categories, values, color='#1fce8c')\n\nplt.title('Different Types of Housing and Their Popularity', fontsize=15)\nplt.xlabel('Housing Category')\nplt.ylabel('Popularity %')\nplt.xticks(rotation=45)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/34.png')\nplt.show()\n```\nChoices:['Small Apartments', 'Medium Apartments', 'Large Apartments', 'Small Houses', 'Medium Houses', 'Large Houses', 'Villas', 'Mansions']\nStudent's Response:'Mansions'\n",
    "Question Text:\nWhich mode of travel is preferred by the least number of travelers according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ntravel_modes = [\"By Air\", \"By Train\", \"By Bus\", \"By Car\", \"By Bike\"]\nnumber_of_travelers = [45, 60, 35, 50, 15]\n\n# Colors for the bars\ncolors = [\"#07d77d\", \"#f58e24\", \"#007FBB\", \"#650021\", \"#FF9500\"]\n\n# Create bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(travel_modes, number_of_travelers, color=colors)\n\n# Axes labels and title\nplt.xlabel(\"Mode of Travel\", fontsize=14)\nplt.ylabel(\"Number of Travelers (in millions)\", fontsize=14)\nplt.title(\"Preferred Modes of Travel\", fontsize=16)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/35.png')\nplt.show()\n```\nChoices:['By Air', 'By Train', 'By Bus', 'By Car', 'By Bike']\nStudent's Response:By Bike\n",
    "Question Text:\nWhich type of dog is more popular in the neighborhood according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\ndogs = ['Labrador', 'Beagle']\nnum_of_dogs = [20, 15]\n\n# Create Bar Chart\nplt.figure(figsize=[10,5])\nbarlist = plt.bar(dogs, num_of_dogs, hatch = '||')\n\n# Titles and Labels\nplt.title('Number of Dogs in a Neighborhood')\nplt.ylabel('Number of Dogs')\nplt.xlabel('Type of Dog')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/36.png')\nplt.show()\n```\nChoices:['Labrador', 'Beagle']\nStudent's Response:Labrador\n",
    "Question Text:\nIs the highest income for Category 8 comes from Salaries?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for each category\nsalaries_in_1000s = [40, 35, 65, 48, 55, 70, 68, 75, 76]\ninvestments_in_1000s = [15, 18, 25, 22, 30, 27, 22, 24, 26]\n\n# Creating the stacked bar chart\nbar_width = 0.35\nopacity = 0.8\nindex = [i for i in range(9)]\n\nplt.figure(figsize=(8, 6))\n\nplt.bar(index, salaries_in_1000s, bar_width, alpha=opacity, color='b', label='Salaries')\nplt.bar(index, investments_in_1000s, bar_width, alpha=opacity, color='r', bottom=salaries_in_1000s, label='Investments')\n\nplt.xlabel('Income Categories')\nplt.ylabel('Income in Thousands')\nplt.title('Income composition from Salaries and Investments')\nplt.xticks(index, ('Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5',\n                   'Category 6', 'Category 7', 'Category 8', 'Category 9'), rotation=45)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/37.png', bbox_inches='tight')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich breed of cat has the highest total number?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their corresponding values\ncategories = ['Persian', 'Maine Coon', 'Siamese', 'Ragdoll', 'Sphynx']\nvalues = [50, 65, 40, 85, 45]\n\n# Create bar chart\nplt.figure(figsize=(10,5))\nplt.barh(categories, values, hatch='+o')\n\n# Customise axes\nplt.xlabel('Number of Cats')\nplt.ylabel('Breeds of Cat')\nplt.title('Number of Different Breeds of Cats')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/38.png')\n\nplt.show()\n```\nChoices:['Persian', 'Maine Coon', 'Siamese', 'Ragdoll', 'Sphynx']\nStudent's Response:Ragdoll\n",
    "Question Text:\nWhich toy category had the least combined revenue in 2019 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Toy categories and Colors and hatches\ntoys = [\"Action Figures\", \"Cars & Trucks\", \"Building Blocks\", \"Dolls\", \"Board Games\", \"Educational\", \"Musical\", \"Puzzles\", \"Sports\", \"Stuffed Animals\"]\ncolors = ['#535be8', '#9d3359', '#00cf73', '#4cac96', '#e4a04e', '#563d27', '#beef11', '#93e710']\nhatches= ['+', 'x', '.', '\\\\', 'xx', '-\\\\', '..', 'o']\n\n# Toy data\nneg_revenue = np.round(np.array([15, 20, 16, 25, 17, 10, 15, 18, 12, 14]) * 5, -1)  \npos_revenue = np.round(np.array([20, 15, 30, 20, 25, 20, 24, 23, 19, 22]) * 5, -1)\n\n\nfig, ax = plt.subplots(figsize=(12, 7))\n\nbar1 = ax.bar(toys, neg_revenue, color=colors[0: len(toys)], hatch=hatches[0])\nbar2 = ax.bar(toys, pos_revenue, bottom=neg_revenue, color=colors[0: len(toys)], hatch=hatches[1])\n\nax.set_xlabel('Toy Categories', fontsize=14)\nax.set_ylabel('Revenue (in thousands $)', fontsize=14)\nax.set_title('Revenue comparison of various toy categories', fontsize=16)\nax.legend([bar1, bar2], ['2019', '2020'])\n\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\n\n# Save it in a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/39.png')\nplt.show()\n```\nChoices:['Action Figures', 'Cars & Trucks', 'Building Blocks', 'Dolls', 'Board Games', 'Educational', 'Musical', 'Puzzles', 'Sports', 'Stuffed Animals']\nStudent's Response:\"Educational\"\n",
    "Question Text:\nIs 'Hanukkah' festival the most popular according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# defining the y-coordinates i.e., heights of the bars\nvalues = [20, 25, 15, 10, 30, 20, 35]\n\n# defining the x-coordinates i.e., names of the bars\nlabels = ['Diwali', 'Christmas', 'Eid', 'Holi', 'Thanksgiving', 'Easter', 'Hanukkah']\n\n# defining the colors of the bars\ncolors = ['#fef477', '#fef477', '#a7b5c3', '#a7b5c3', '#fef477', '#a7b5c3', '#fef477']\n\n#increasing size of figure to accommodate labels\nplt.figure(figsize=(10, 5))\n\n# creating the bar chart \nplt.bar(labels, values, color=colors)\n\n# setting labels for x and y axis\nplt.xlabel('Festivals')\nplt.ylabel('Popularity')\n\n# setting title for the graph\nplt.title('Popularity of Various Festivals')\n\n# Save the graph to a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/40.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total return value for the 'Meat' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Fruits', 'Vegetables', 'Grains', 'Meat', 'Dairy', 'Fish', 'Other']\nnum_categories = len(categories)\n\nfruits = [20, 30, 45, 35, 50, 60, 55]\nvegetables = [15, 25, 20, 30, 40, 25, 20]\ngrains = [30, 35, 35, 40, 45, 60, 65]\nmeat = [40, 45, 55, 50, 60, 70, 80]\ndairy = [15, 20, 25, 20, 15, 25, 30]\nfish = [20, 20, 30, 35, 25, 15, 20]\nother = [20, 25, 25, 30, 35, 40, 45]\n\nbar_width = 0.35\n\nidx = list(range(num_categories))\n\nplt.figure(figsize=(10,7))\n\nplt.bar(idx, fruits, bar_width, color='#90d41d', edgecolor='black', hatch='/o', label='Fruits')\nplt.bar(idx, vegetables, bar_width, bottom=fruits, color='#3fb964', edgecolor='black', hatch='O', label='Vegetables')\nplt.bar(idx, grains, bar_width, bottom=[i+j for i,j in zip(fruits, vegetables)], color='#a4c08b', edgecolor='black', hatch='**', label='Grains')\nplt.bar(idx, meat, bar_width, bottom=[i+j+k for i,j,k in zip(fruits, vegetables, grains)], color='#a6fce8', edgecolor='black', hatch='/o', label='Meat')\n\nplt.xlabel('Categories')\nplt.ylabel('Values')\nplt.title('Agriculture Product Returns')\nplt.xticks(idx, categories)\nplt.legend()\n\nplt.grid(True)\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/41.png')\nplt.show()\n```\nChoices:['340', '350', '360', '370', '380']\nStudent's Response:400\n",
    "Question Text:\nIs the sum of ratings and usage of YouTube higher than that of Facebook?\nFigure Code:\n```\n# Required Libraries\nimport matplotlib.pyplot as plt\n\n# Data\nsocial_media = ['Facebook', 'Twitter', 'Instagram', 'Snapchat', 'Pinterest', 'LinkedIn', 'Tumbler', 'Reddit', 'YouTube']\nratings = [70, 50, 65, 35, 40, 45, 35, 30, 75]\nusage = [60, 40, 70, 50, 35, 40, 30, 35, 80]\ncolors = ['#8455b7', '#f7025b', '#54ea1e', '#54ea1e','#8455b7','#8455b7','#f7025b', '#f7025b', '#8455b7']\nhatches = ['O', '|', '*', '*', 'O', 'O', '|', '|', '*']\n\n# Bar Chart\nfig, ax = plt.subplots(figsize=(15,10))\nax.bar(social_media, ratings, color=colors, hatch=hatches[0])\nax.bar(social_media, usage, bottom=ratings, color=colors, hatch=hatches[1])\nax.set_ylabel('Counts')\nax.set_xlabel('Social Media Platforms')\nax.set_title('Ratings and Usages of Social Media Platforms')\n\nplt.xticks(rotation=45)\nplt.grid(visible=True)\n\n# Save Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/42.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the bar chart, which technology sector has the least number of available jobs?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Artificial Intelligence', 'Machine Learning', 'Data Science', 'Web Development', 'Mobile App Development']\nvalues = [45, 80, 60, 50, 70]\n\nfig, ax = plt.subplots(figsize=(10,6))\n\nbars = ax.barh(categories, values, color='#781f8b')\nax.set_xlabel('Number of Jobs (in thousands)')\nax.set_title('Number of Available Jobs in different Technology Sectors')\n\nfor bar in bars:\n    width = bar.get_width()\n    ax.text(width-5,\n            bar.get_y() + bar.get_height() / 2,\n            str(int(width)),\n            ha = 'center', \n            va = 'center',\n            color = 'white')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/43.png')\nplt.show()\n```\nChoices:['Artificial Intelligence', 'Machine Learning', 'Data Science', 'Web Development', 'Mobile App Development']\nStudent's Response:Artificial Intelligence\n",
    "Question Text:\nWhich conservation effort has the highest importance on a scale out of 100 in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define categories and their values\nconservation_efforts = ['Recycling', 'Less Meat', 'Tree Planting', 'Public Awareness', 'Govt. Policy', 'NGO Work', 'Research']\nvalues = [60, 75, 70, 65, 80, 85, 90]\n\n# Define colors \ncolors = ['#58dc7f', '#788b66', '#58dc7f', '#788b66', '#58dc7f', '#788b66', '#58dc7f']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(12, 6))\nax.bar(conservation_efforts, values, color=colors)\n\nax.set_title('Wildlife Conservation Efforts')\nax.set_ylabel('Importance Scale (out of 100)')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/44.png')\n\nplt.show()\n```\nChoices:['Recycling', 'Less Meat', 'Tree Planting', 'Public Awareness', 'Govt. Policy', 'NGO Work', 'Research']\nStudent's Response:Research\n",
    "Question Text:\nIs the 'Pizza' category having the lowest value in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories\ncategories = ['Pizza', 'Burger', 'Pasta', 'Ice cream', 'Noodles', 'Burritos']\n\n# Values for each category. Required round numbers for each value.\nvalues = [40, 30, 25, 35, 45, 50]\n\n# Creating colors and hatches for bars\ncolors = ['#b9f047', '#9ade64', '#9b24c7', '#b9f047', '#9ade64', '#9b24c7']\nhatches = ['-*', '\\\\', '\\\\\\\\', '-*', '\\\\', '\\\\\\\\']\n\n# Creating a horizontal bar chart\nplt.figure(figsize=(10,10))\nbars = plt.barh(categories, values, color=colors)\n\n# Adding hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Adding labels and title\nplt.xlabel('Quantity')\nplt.ylabel('Food Items')\nplt.title('Food Quantity')\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/45.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the sales of Residential real estate increase from 2018 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating the dataset\nreal_estate_categories = ['Residential', 'Commercial', 'Industrial']\nvalues_2018 = [155, 160, 145]\nvalues_2019 = [165, 170, 160]\nvalues_2020 = [170, 185, 155]\n\nbarWidth = 0.25\n\nr1 = range(len(values_2018))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\nplt.figure(figsize=(10, 7))\n\n# Creating the bar plot\nplt.bar(r1, values_2018, color='#d9cb1a', width=barWidth, label ='2018', hatch='//')\nplt.bar(r2, values_2019, color='#189ad3', width=barWidth, label ='2019', hatch='\\\\')\nplt.bar(r3, values_2020, color='#76a5af', width=barWidth, label ='2020', hatch='OO')\n\nplt.xticks([r + barWidth for r in range(len(values_2018))], real_estate_categories)\nplt.ylabel(\"Sales in Units\")\nplt.title(\"Real Estate Sales by Category and Year\")\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/46.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Is the quantity of Bass fish caught by the Kaishu Fishing method greater than that caught by the Muroto Fishing method?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nfish_types = ['Salmon', 'Tuna', 'Bass']\nkaishu_fishing = [10, 15, 25]\nmuroto_fishing = [20, 5, 15]\n\n# Figure Size\nfig, ax = plt.subplots(figsize =(10, 7))\n\n# Horizontal Bar Plot\nax.barh(fish_types, kaishu_fishing, color ='yellow', hatch = '\\\\')\nax.barh(fish_types, muroto_fishing, color ='red', left = kaishu_fishing, hatch = '+')\n\n# Labels and Title\nplt.xlabel('Quantity Caught')\nplt.ylabel('Types of Fish')\nplt.title('Fishing Methods Used to Catch Different Fish Types')\nplt.legend(['Kaishu Fishing Method', 'Muroto Fishing Method'])\n\n# Save Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/47.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the total gross for Thriller movies more than for Drama movies?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Action', 'Comedy', 'Drama', 'Horror', 'Sci-Fi', 'Romance', 'Thriller', 'Documentary']\nvalues = [20, 35, 30, 15, 25, 40, 50, 30]\ncolors = ['#1a2086', '#f73624', '#9f2641', '#2de790', '#bb9847', '#df02c1', '#d240c6', '#ff3589']\n\n# Create figure and axes\nplt.figure(figsize=(10,6))\nax = plt.gca()\nax.set_xlabel('Movies')\nax.set_ylabel('Total Gross')\n\nfor i in range(len(categories)):\n    ax.bar(categories[i], values[i], color=colors[i])\n\nplt.title('Total Gross per Movie Genre ')\nplt.xticks(rotation=90)\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/48.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich type of medicine is most common according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Category names\ncategories = ['Antivirals', 'Analgesics', 'Antimalarials', 'Antibiotics', 'Vaccines']\n\n# Corresponding round values\nvalues = [45, 70, 55, 65, 80]\n\n# colors\ncolors = ['#e48018', '#779d04', '#3f3493', '#7c7778', '#68e419']\n\n# Create horizontal bar chart\nplt.figure(figsize=(8, 6)) # Make figure sufficiently large to avoid word overlap\nbar_plot = plt.barh(categories, values, color=colors)\n\nplt.xlabel('Number of Medicines')\nplt.title('Number of Different Types of Medicines')\n\n# Save the plot as a png image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/49.png')\n\nplt.show()\n```\nChoices:['Antivirals', 'Analgesics', 'Antimalarials', 'Antibiotics', 'Vaccines']\nStudent's Response:'Vaccines'\n",
    "Question Text:\nBased on the chart, what is the sum of the Hardware and Software value for the category \"Computer Software\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Computer Hardware', 'Computer Software']\nvalues1 = [50, 45]\nvalues2 = [40, 60]\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10,7))\n\nbar1 = ax.bar(x, values1, width=0.4, align='center', color='#50d932', hatch='*-')\nbar2 = ax.bar(x, values2, width=0.4, align='edge', color='#7bb0e7', hatch='*-')\n\nax.set_xlabel('Categories')\nax.set_ylabel('Values')\nax.set_title('Computer Related Chart')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend((bar1[0], bar2[0]), ('Hardware', 'Software'))\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/50.png')\nplt.show()\n```\nChoices:['100', '110', '105', '120']\nStudent's Response:105\n",
    "Question Text:\nDoes the Labrador count more than the Poodle in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndogs = [\"Poodle\", \"Bulldog\", \"Labrador\"]\ndog_counts = [15, 20, 25]\n\nplt.figure(figsize=[10,5])\nplt.bar(dogs, dog_counts, color=\"green\")\n\nplt.title('Dog Count')\nplt.xlabel('Dogs')\nplt.ylabel('Count')\n\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/52.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid more tourists visit Europe than Asia in the year 2021?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Europe', 'Asia']\ntourist_numbers_2020 = [20, 30]\ntourist_numbers_2021 = [25, 35]\n\nx = np.arange(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 7))\nrects1 = ax.bar(x - 0.2, tourist_numbers_2020, 0.4, label='2020', color='#2a7a09')\nrects2 = ax.bar(x + 0.2, tourist_numbers_2021, 0.4, label='2021', color='blue')\n\nax.set_xlabel('Continents')\nax.set_ylabel('Tourists (in millions)')\nax.set_title('Tourism in Europe and Asia')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/54.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich bird appears the most frequently according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nbirds = ['Sparrow', 'Hawk', 'Hummingbird', 'Penguin', 'Stork', 'Dove', 'Parrot', 'Eagle', 'Ostrich']\ncounts = [85, 60, 100, 40, 105, 80, 70, 50, 65]\n\n# Figure size\nplt.figure(figsize=(10, 7))\n\n# Horizontal Bar Chart\nplt.barh(birds, counts, color='skyblue')\n\n# Labels\nplt.xlabel('Counts')\nplt.ylabel('Birds')\nplt.title('Counts of Different Types of Birds')\n\n# Save Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/56.png')\n\nplt.show()\n```\nChoices:['Sparrow', 'Hawk', 'Hummingbird', 'Penguin', 'Stork', 'Dove', 'Parrot', 'Eagle', 'Ostrich']\nStudent's Response:Stork\n",
    "Question Text:\nWhich category of Real Estate properties has the maximum inventory?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the data\ncategories = ['Condos', 'Townhouses', 'Detached Houses', 'Semi-Detached Houses', 'Lofts', 'Bungalows']\nvalues = [20, 35, 75, 40, 15, 60]\ncolors = ['#e6e71d', '#79dc1b', '#726351', '#e6e71d', '#79dc1b', '#726351']\nhatches = ['||', 'OO', 'x', 'O|', '-', '.']\n\n# Creating the bar chart\nplt.figure(figsize=(10, 6))\nbars = plt.bar(categories, values, color=colors)\n\n# Adding hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Types of Properties')\nplt.ylabel('Number of Properties (in hundreds)')\nplt.title('Real Estate Inventory')\n\n# Save the plot as a PNG image file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/58.png')\n\nplt.show()\n```\nChoices:['Condos', 'Townhouses', 'Semi-Detached Houses', 'Lofts', 'Bungalows', 'Detached Houses']\nStudent's Response:'Detached Houses'\n",
    "Question Text:\nWhat environmental issue has the highest level of concern according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nissues = ['Air Pollution', 'Deforestation', 'Waste Disposal']\nvalues = [60, 80, 70]\n\nplt.figure(figsize=[10,6])\n\nbar_colors = ['#421d5c', '#3f4d5e', '#177915']\n\nplt.barh(issues, values, color=bar_colors)\nplt.xlabel('Concern Level')\nplt.ylabel('Environmental Issues')\nplt.title('Level of Concern for Different Environmental Issues')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/59.png')\nplt.show()\n```\nChoices:['Air Pollution', 'Deforestation', 'Waste Disposal']\nStudent's Response:Deforestation\n",
    "Question Text:\nAccording to the bar chart, what was the percentage increase in hours spent by users on Online Shopping from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Categories & values\ncategories = ['Gaming', 'E-Learning', 'Social Media', 'Online Shopping', 'Streaming', 'Email', 'Online Work', 'Others']\nvalues_2019 = [10, 25, 30, 15, 40, 20, 35, 10]\nvalues_2020 = [15, 30, 35, 20, 45, 25, 40, 15]\n\nx = np.arange(len(categories)) \nwidth = 0.35 \n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Bar chart creation\nrects1 = ax.bar(x - width/2, values_2019, width, color='#1a9be5', hatch='x')\nrects2 = ax.bar(x + width/2, values_2020, width, color='#10798c', hatch='o')\n\n# Add some text for labels, title and custom x-axis tick labels\nax.set_ylabel('Hours per Week')\nax.set_title('Average Internet Usage per User')\nax.set_xticks(x)\nax.set_xticklabels(categories, fontsize=8)\nax.legend((rects1[0], rects2[0]), ('2019', '2020'))\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/60.png')\nplt.show()\n```\nChoices:['20%', '25%', '33.33%', '50%', '66.67%']\nStudent's Response:33.33%\n",
    "Question Text:\nIs the energy production of Solar in 2025 less than that of Nuclear in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nenergy_sources = ['Solar', 'Wind', 'Hydro', 'Nuclear']\nvalues_2020 = [20, 45, 35, 50]  # Values for year 2020\nvalues_2025 = [25, 50, 40, 55]  # Forecasted values for year 2025\n\nx = np.arange(len(energy_sources))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 7))\nrects1 = ax.bar(x - width/2, values_2020, width, label='2020', color='#64b8e6', hatch='|')\nrects2 = ax.bar(x + width/2, values_2025, width, label='2025', color='green', hatch='o-')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Energy Production (in TWh)')\nax.set_title('Energy Source Production')\nax.set_xticks(x)\nax.set_xticklabels(energy_sources)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/61.png') \nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Are there more Dresses than Shirts for Women?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and rounded datapoints\ncategories = ['Shirts', 'Trousers', 'Sweatshirts', 'Jackets', 'Skirts', 'Blouses', 'Shorts', 'Blazers', 'Dresses', 'Overcoats']\nvalues_men = [50, 45, 30, 40, 10, 15, 25, 35, 20, 30]\nvalues_women = [30, 35, 20, 25, 40, 45, 15, 20, 60, 35]\n\n# Color-set\ncolors = ['#e471e8', '#fb274a', '#c32fd4', '#c89ac2', '#7e3231', '#05eb61']\n\n# Plotting\nfig, ax = plt.subplots(figsize=(15,7))\nax.bar(categories, values_men, color=colors[0], label='Men')\nax.bar(categories, values_women, color=colors[1], bottom=values_men, label='Women')\n\n# Formatting\nax.set_xlabel('Fashion Categories')\nax.set_ylabel('Number of Items')\nax.set_title('Fashion Category Item Breakdown for Men and Women')\nax.legend()\nplt.xticks(rotation=45)\nplt.tight_layout()\n\n# Saving the file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/62.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAccording to the bar chart, what is the quantity of the Chicken consumed?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define foods and their count\nfoods = ['Broccoli', 'Chicken']\ncount = [15, 20]\n\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# create bar chart\nbars = plt.barh(foods, count,  color='#c7b2e1', hatch='x')\n\n# set title and labels\nplt.title('Food Consumption')\nplt.xlabel('Quantity')\nplt.ylabel('Food Items')\n\n# Save your figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/63.png')\n\nplt.show()\n```\nChoices:[10, 15, 20, 25]\nStudent's Response:20\n",
    "Question Text:\nWhat is the sum of the users of the two least used languages on the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Java', 'Python', 'C',  'C++', 'JavaScript', 'PHP', 'R', 'Swift']\nnumber_of_users = [65, 85, 50, 55, 75, 60, 35, 30]\n\ncolors = ['#cbeec7', '#6593da', '#272b40', '#a7c940', '#d9b38c', '#ebccd1', '#9fbfdf', '#75a3a3']\n\nplt.figure(figsize=(10, 6))\n\nbars = plt.bar(languages, number_of_users, color=colors)\nplt.ylabel('Number of Users (in thousands)')\nplt.title('Number of Users by Programming Language')\nplt.ylim(0, 100)\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2,\n             yval + 2, int(yval), ha='center', va='bottom')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/65.png')\nplt.show()\n```\nChoices:[30, 50, 55, 65, 85]\nStudent's Response:65\n",
    "Question Text:\nWhat is the total energy production for all the categories combined?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport math\n\n# Define the data\ncategories = ['Solar', 'Wind', 'Hydro', 'Nuclear', 'Fossil Fuels']\nvalues = [[45, 80, 65, 96, 70], [50, 55, 75, 83, 85], [95, 60, 120, 102, 90], [60, 70, 85, 92, 78]]\ncolors = ['#ddf37c', '#139530', '#0d2716', '#1a1eda', '#0d4354']\nhatches = ['+o', '//', 'O|', '*', '\\\\\\\\']\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nbottom = [0, 0, 0, 0, 0]\nfor value, color, hatch in zip(values, colors, hatches):\n    ax.bar(categories, value, bottom=bottom, color=color, hatch=hatch)\n    bottom = [i + j for i, j in zip(bottom, value)]\n\nax.set_xlabel('Energy Source')\nax.set_ylabel('Energy Production (in GWh)')\nax.set_title('Energy Production by Source')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/66.png')\n\nplt.show()\n```\nChoices:[345, 365, 545, 425]\nStudent's Response:None of the above options match the correct answer. It seems there's a mistake since none of the options are close to the calculated total energy production. Please check again.\n",
    "Question Text:\n\"What is the number of albums in the Pop genre?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Pop', 'Rock', 'Jazz']\nvalues = [20, 60, 35]\ncolors = ['#63d9c9', '#5f724b', '#ead546']\nhatches = ['O.','-', 'o']\n\n# Creating the bar chart\nfig, ax = plt.subplots(figsize=(10,6))\nfor i in range(len(categories)):\n    ax.barh(categories[i], values[i], color=colors[i], hatch=hatches[i])\n\n# Customization\nax.set_xlabel('Number of Albums')\nax.set_title('Number of Albums in different Music Genres')\nplt.tight_layout()\n\n# Saving the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/67.png')\nplt.show()\n```\nChoices:[15, 30, 20, 60]\nStudent's Response:20\n",
    "Question Text:\nIs the total number of Long Hair cats in the age range of 1-10 years equal to 85?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Dataset\ncategories = ['Long Hair', 'Short Hair', 'Interactive', 'Lazy']\nvalues1 = [40, 35, 25, 45]\nvalues2 = [20, 15, 30, 25]\nvalues3 = [25, 35, 30, 15]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Stacked bar chart creation\nax.bar(categories, values1, color='#0b9618', label='Age 1-3')\nax.bar(categories, values2, bottom=values1, color='#d059fb', label='Age 4-7')\nax.bar(categories, values3, bottom=[i+j for i,j in zip(values1, values2)], color='#c7ccf1', label='Age 8-10')\n\n# Add legends and labels\nax.set_xlabel('Cat Types')\nax.set_ylabel('Number of Cats')\nplt.legend(loc='upper right')\nplt.title('Distribution of Cat Characteristics by Age')\n\n# Save the image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/68.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the sum of values for 'Dogs', 'Parrots' and 'Elephants'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# bar chart data\nanimals = ['Cats', 'Dogs', 'Rabbits', 'Parrots', 'Horses', 'Elephants']\nvalues = [35, 40, 30, 45, 40, 25]\n\n# hatches list\nhatches = ['|', '/', 'o-', 'O', '|*', 'x']\n\n# creating bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nbars = plt.bar(animals, values, color ='maroon', width = 0.4)\n\n# add hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel(\"Animals\")\nplt.ylabel(\"Values\")\nplt.title(\"Animals Bar Chart\")\nplt.grid(True)\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/69.png')\n\nplt.show()\n```\nChoices:[80, 90, 100, 110, 120]\nStudent's Response:110\n",
    "Question Text:\nWhich Social Network has received the 4th largest investment in Advertising in 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define Data\ncategories = ['Facebook', 'Instagram', 'Twitter', 'Snapchat', 'YouTube', 'LinkedIn', 'Pinterest', 'Reddit']\nvalues = [200, 175, 140, 120, 165, 130, 115, 95]\n\n# Create bar chart\nplt.figure(figsize=(10,6))\nplt.barh(categories, values, color='skyblue')\nplt.xlabel('Investment in Advertising (Millions of Dollars)', fontsize=12)\nplt.ylabel('Social Network', fontsize=12)\nplt.title('Investment in Advertising by Different Social Networks in 2021', pad=20, fontsize=14)\nplt.xticks(range(0, 225, 25))\nplt.grid(axis='x', linestyle='--', color='gray')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/70.png')\nplt.show()\n```\nChoices:['Facebook', 'Instagram', 'Twitter', 'Snapchat', 'YouTube', 'LinkedIn', 'Pinterest', 'Reddit']\nStudent's Response:YouTube\n",
    "Question Text:\nWhich category has seen a decrease in internet usage from the year 2021 to 2022?\nFigure Code:\n```\n# Python code that uses Matplotlib to generate a grouped bar chart\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# define categories and their values\ncategories = ['Chat', 'Email', 'News', 'Social', 'Search', 'Ecommerce', 'Video', 'Banking', 'Coding']\nvalues1 = [35, 50, 20, 45, 30, 40, 55, 25, 35]\nvalues2 = [30, 55, 15, 40, 45, 30, 50, 40, 30]\n\n# Define Colors and Hatches\ncolors = ['#9dcb5f', '#5a8da1', '#cbd23e', '#9ffa0f', '#17de6c']\nhatches = ['xx', '|*', '-', '/', '|']\n\n# define bar width\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(15,15))\n\n# Make bars for first group: 2021\nfor i in range(len(categories)):\n    ax.bar(i - bar_width/2, values1[i], bar_width, color=colors[i%len(colors)], hatch=hatches[i%len(hatches)], label=categories[i] + ' 2021')\n\n# Make bars for second group: 2022\nfor i in range(len(categories)):\n    ax.bar(i + bar_width/2, values2[i], bar_width, color=colors[i%len(colors)], hatch=hatches[i%len(hatches)], label=categories[i] + ' 2022')\n\nax.set_xlabel('Categories')\nax.set_ylabel('Internet Usage (%)')\nax.set_title('Internet Usage by Categories for the years 2021 and 2022')\nax.set_xticks(np.arange(len(categories)))\nax.set_xticklabels(categories)\nax.legend()\n\n# Save the Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/71.png')\n\nplt.show()\n```\nChoices:['Chat', 'Email', 'News', 'Social', 'Search', 'Ecommerce', 'Video', 'Banking', 'Coding']\nStudent's Response:Chat\n",
    "Question Text:\nWhat transportation type has the maximum public transportation and what is its percentage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their values\ncategories = ['Bicycles', 'Motorbikes', 'Cars', 'Buses', 'Vans', 'Trucks', 'Trains', 'Planes', 'Ships', 'Subways']\npublic_transport = [5, 0, 0, 40, 20, 0, 60, 15, 35, 100]\nprivate_transport = [95, 100, 100, 60, 80, 100, 40, 85, 65, 0]\n\n# Size of bars\nbarWidth = 0.5\n\n# Positions of the bars on x-axis\nbr1 = [i for i in range(len(public_transport))]\nbr2 = [x + barWidth for x in br1]\n\n# Creating the bar plot\nplt.figure(figsize=(12, 6)) # Increase figure size to avoid label overlap\nplt.bar(br1, public_transport, color ='#dc2c36', edgecolor ='grey', width = barWidth, label ='Public',\n        hatch ='+')\nplt.bar(br2, private_transport, color ='#5c75a3', edgecolor ='grey', width = barWidth, label ='Private',\n        hatch ='o')\n\n# Adding xticks\nplt.xlabel('Transportation Types', fontweight ='bold', fontsize = 15)\nplt.ylabel('Percentages (%)', fontweight ='bold', fontsize = 15)\nplt.xticks([r + barWidth/2 for r in range(len(public_transport))], categories)\n\nplt.title('Public vs Private Transportation')\nplt.legend(['Public', 'Private'])\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/72.png')\nplt.show()\n```\nChoices:['Bicycles - 5%', 'Motorbikes - 0%', 'Cars - 0%', 'Buses - 40%', 'Vans - 20%', 'Trucks - 0%', 'Trains - 60%', 'Planes - 15%', 'Ships - 35%', 'Subways - 100%']\nStudent's Response:Subways - 100%\n",
    "Question Text:\nIf USSR is represented by the color '#04ab06', did USSR have the most events in the Cold War compared to both USA and China?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['WW1', 'WW2', 'Cold War']\ncountry1 = [10, 15, 20]\ncountry2 = [25, 20, 15]\ncountry3 = [20, 15, 25]\n\nbarWidth = 0.25\nr1 = np.arange(len(country1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\nfig = plt.figure(figsize = (10, 5))\nbar1 = plt.bar(r1, country1, color = '#998e62', width = barWidth, edgecolor = 'grey', label = 'USA')\nbar2 = plt.bar(r2, country2, color = '#04ab06', width = barWidth, edgecolor = 'grey', label = 'USSR')\nbar3 = plt.bar(r3, country3, color = '#75a914', width = barWidth, edgecolor = 'grey', label = 'China')\n\nplt.xlabel('Historical Events', fontweight = 'bold', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(country1))], categories)\nplt.ylabel('No of Events', fontweight = 'bold', fontsize = 15)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/74.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs 'Defense Budget' the topic with the highest percentage in the public opinion polls?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Education Funding', 'Climate Change', 'Healthcare', 'Gun Control', 'Immigration', 'Economy', 'Foreign Policy', 'Defense Budget']\nvalues = [45, 70, 60, 40, 55, 50, 65, 70]\ncolors = ['#ef6e01', '#d867b7', '#4db85c', '#674c4a', '#1c1ed8', '#1c1ed8', '#ef6e01', '#d867b7']\nhatches = ['+', '--', 'x*', 'o', 'xx', '/o', '++', '--']\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Create bar chart\nbars = plt.barh(categories, values, color=colors, edgecolor='black')\n\n# Add hatches to the bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set the labels and title\nplt.xlabel('Percentage (%)')\nplt.title('Public Opinion Polls')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/75.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of doctors depicted in the bar chart 175?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Predefined data\ncategories = ['Number of Doctors']\nvalues = [165]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Create horizontal bar chart\nax.barh(categories, values, align='center')\nax.set_xlabel('Number of Doctors')\nax.set_title('Medicine')\nplt.grid(True)\n\n# Saving the created figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/77.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhich sector has the highest employment?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define employment sectors and corresponding employment numbers (in millions)\nsectors = [\"Finance\", \"Healthcare\", \"Technology\", \"Manufacturing\", \"Education\", \"Retail\"]\nemployment_numbers = [45, 60, 75, 80, 85, 55]\n\n# Define colors for the bars\ncolors = ['#fd4890', '#b4075c', '#9c63c3', '#316e40', '#fd4890', '#9c63c3']\n\n# Define hatches for the bars\nhatches = ['x*', 'o', 'O', '\\\\|', '/']\n\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Create the bars\nbars = plt.bar(sectors, employment_numbers, color=colors)\n\n# Add hatches to the bars\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\n# Title and labels\nplt.title(\"Employment in Different Sectors\")\nplt.xlabel(\"Sectors\")\nplt.ylabel(\"Number of Employees (in millions)\")\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/78.png')\n\nplt.show()\n```\nChoices:['Finance', 'Healthcare', 'Technology', 'Manufacturing', 'Education', 'Retail']\nStudent's Response:'Education'\n",
    "Question Text:\nDoes Facebook spend more on advertising than Linkedin?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# data to plot\nn_advertisers = 5\nadvertisers = ('Facebook', 'Google', 'Instagram', 'Twitter', 'Linkedin')\namount_in_mil = [45, 60, 35, 30, 25]\n\nfig = plt.figure(figsize=(10,8))\n\n# create horizontal bar chart\nplt.barh(advertisers, amount_in_mil, align='center', alpha=0.7)\nplt.xlabel('Amount spent in Advertising ($M)')\nplt.title('Advertising Spending by Different Companies')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/79.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the 'Ocean' category have a larger value than the 'Mountain' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Forest', 'Desert', 'Mountain', 'Plains', 'Swamp', 'Ocean']\nvalues = [10, 25, 30, 35, 15, 50]\ncolors = ['#6d1166', '#235b35', '#6d1166', '#235b35', '#6d1166', '#235b35']\nhatches = ['\\\\\\\\|', '', '\\\\\\\\|', '', '\\\\\\\\|', '']\n\nplt.figure(figsize=[10,5])\nbars = plt.bar(categories, values, color=colors, hatch=hatches[0])\n\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i%len(hatches)])\n\nplt.xlabel('Land type')\nplt.ylabel('Area in thousands of square miles')\nplt.title('Area of different types of land')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/80.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the usage of 'Python' more than 'Java'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Python', 'JavaScript', 'Java', 'Ruby']\nvalues = [50, 45, 40, 35]\ncolors = ['#dbc97b', '#68c4ea', '#ae4a61', '#b5a8d1']\n\nplt.figure(figsize=(10, 5))\nplt.bar(languages, values, color=colors)\nplt.title('Usage of Programming Languages')\nplt.xlabel('Languages')\nplt.ylabel('Usage (%)')\nplt.xticks(fontsize=10)\nplt.yticks(fontsize=10)\nplt.ylim([0,60])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/81.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which Biome are Flowers the least prevalent?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data for the bar chart\ncategories = ['Rainforest', 'Desert', 'Mountain', 'Aquatic', 'Grassland', 'Tundra', 'Coniferous Forest', 'Deciduous Forest']\ntypes_of_plants = ['Trees', 'Flowers', 'Shrubs']\nquantities = [[65, 10, 35, 45, 55, 20, 55, 60], [15, 5, 25, 30, 30, 5, 25, 30], [20, 10, 40, 45, 30, 15, 45, 30]]\n\n# colors for each bar\nbar_colors = ['#0f3185', '#b99e32', '#b555a7']\n\n# creating bar chart\nx = range(len(categories))\nfig, ax = plt.subplots(figsize = (12, 8))\n\nfor i in range(len(types_of_plants)):\n    plt.bar([p+i*0.25 for p in x], quantities[i], \n            color=bar_colors[i], width=0.25, align='edge', label=types_of_plants[i])\n\n# setting labels\nax.set_xlabel('Biomes', fontweight='bold')\nax.set_ylabel('Quantity of plants (in thousands)', fontweight='bold')\nax.set_title('Quantity and Types of Plants in different Biomes', fontweight='bold')\nax.set_xticks([p + 0.25 for p in range(len(categories))])\nax.set_xticklabels(categories)\nplt.legend()\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/82.png')\nplt.show()\n```\nChoices:['Rainforest', 'Desert', 'Mountain', 'Aquatic', 'Grassland', 'Tundra', 'Coniferous Forest', 'Deciduous Forest']\nStudent's Response:'Desert', 'Tundra'\n",
    "Question Text:\nIs the sales of 'Shoes' more than 'Bags'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Fashion categories\ncategories = ['Dresses', 'Shirts', 'Shoes', 'Bags', 'Accessories']\n\n# Corresponding sales values, rounded to the nearest 5\nvalues = [30, 35, 60, 40, 55]\n\n# Colors and hatches\ncolors = ['#01509c', '#f4d2f7', '#01509c', '#f4d2f7', '#01509c']\nhatches = ['/o', '++', '/o', '++', '/o']\n\nplt.figure(figsize=(10,5))\n\n# Create horizontal bar chart\nfor i in range(len(categories)):\n    plt.barh(categories[i], values[i], color=colors[i], hatch=hatches[i])\n\nplt.title(\"Fashion Sales - Categories\")\nplt.xlabel(\"Sales (in thousands)\")\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/83.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich plant has the second highest popularity score?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their values\nplants = ['Roses', 'Tulips', 'Daisies', 'Orchids']\nvalues = [20, 30, 25, 35]\n\n# Colors and hatches\ncolors = ['#2e3a06', '#66cdaa', '#adff2f', '#98fb98']\nhatches = ['//', 'o-', '', 'oo']\n\n# Create figure\nfig, ax = plt.subplots(figsize=(10, 5))\n\nbars = plt.barh(plants, values, color=colors, edgecolor='black')\n\n# Add hatches to bars\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n\n# Set labels\nplt.ylabel('Plants')\nplt.xlabel('Popularity score')\nplt.title('Popularity of different plants')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/84.png')\nplt.show()\n```\nChoices:['Roses', 'Tulips', 'Daisies', 'Orchids']\nStudent's Response:'Tulips'\n",
    "Question Text:\nDid the number of biography books increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Mystery', 'Biography', 'Romance', 'Graphic Novels']\ncolor_dict = {'#7510e2', '#699778', '#c56344', '#a1ab9f'}\nvalues1 = [20, 10, 25, 15]\nvalues2 = [15, 25, 20, 10]\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 5))  # Set figure size large enough to avoid words overlap\nrects1 = ax.bar([i-0.2 for i in x], values1, 0.4, color='#7510e2', label='2019')\nrects2 = ax.bar([i+0.2 for i in x], values2, 0.4, color='#699778', label='2020')\n\nax.set_ylabel('Number of Books')\nax.set_title('Number of Books by Category and Year')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.grid(visible=True) \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/85.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\n\"What art period has the highest number of European paintings?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories\ncategories = ['Renaissance', 'Romanticism', 'Baroque', 'Neoclassicism']\n\n# Define the values for each category\nvalues1 = [25, 40, 55, 70]\nvalues2 = [35, 60, 30, 80]\n\nx = range(len(categories))\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot values1\nplt.bar(x, values1, color='#df3e7a', width=0.4, label='European Paintings')\n\n# Plot values2\nplt.bar(x, values2, color='#9b1893', width=0.4, label='Asian Paintings', align='edge')\n\n# Add some text for labels, title\nax.set_xlabel('Art Periods')\nax.set_ylabel('Number of Paintings')\nax.set_title('Number of European and Asian Paintings in Different Art Periods')\n\n# Add categories to the x-axis\nplt.xticks(x, categories)\n\n# Add a legend\nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/86.png')\n\nplt.show()\n```\nChoices:['Renaissance', 'Romanticism', 'Baroque', 'Neoclassicism']\nStudent's Response:Neoclassicism\n",
    "Question Text:\nWhich category of agricultural production has the highest production of 50 tons?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Grains', 'Fruits', 'Vegetables', 'Dairy', 'Poultry', 'Fishery']\nvalues = [30, 35, 40, 45, 25, 50]\n\nplt.figure(figsize=(10, 6))\n\nbars = plt.bar(categories, values, color='#47b2f1')\n\nplt.xlabel('Categories', fontsize=12)\nplt.ylabel('Agricultural Production (in tons)', fontsize=12)\nplt.title('Agricultural Production by Category', fontsize=16)\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, round(yval), ha='center', va='bottom')\n    \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/87.png')\n\nplt.show()\n```\nChoices:['Grains', 'Fruits', 'Vegetables', 'Dairy', 'Poultry', 'Fishery']\nStudent's Response:Fishery\n",
    "Question Text:\nIs the number of Action movies produced in 2018 less than the number of Drama movies produced in the same year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# set the values of each category\nAction = [20, 30, 25, 20, 15]\nDrama = [15, 20, 10, 30, 25]\nRomance = [10, 5, 15, 10, 10]\nComedy = [5, 15, 15, 20, 20]\nHorror = [10, 20, 15, 10, 10]\n\n# specify bar width\nbarWidth = 0.70\n\n# position of bars on x axis\nr = [0, 1, 2, 3, 4]\n\n# plotting\nplt.figure(figsize=(8, 6))\n\nbar1 = plt.bar(r, Action, color='#6110f8', width=barWidth, label='Action')\nbar2 = plt.bar(r, Drama, bottom=Action, color='#b0056f', width=barWidth, label='Drama')\nbar3 = plt.bar(r, Romance, bottom=[i+j for i,j in zip(Action, Drama)], color='#f87811', width=barWidth, label='Romance')\nbar4 = plt.bar(r, Comedy, bottom=[i+j+k for i,j,k in zip(Action, Drama, Romance)], color='#11f89b', width=barWidth, label='Comedy')\nbar5 = plt.bar(r, Horror, bottom=[i+j+k+l for i,j,k,l in zip(Action, Drama, Romance, Comedy)], color='#f81191', width=barWidth, label='Horror')\n\n\nplt.xticks(r, ['2016', '2017', '2018', '2019', '2020'])\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Movies\")\nplt.title(\"Number of Movies according to Genres\")\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/88.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Knowledge Level in 'Artificial Intelligence' greater than 'Programming'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Programming', 'Hardware', 'Software', 'Networking', 'Database', 'Cybersecurity', 'Artificial Intelligence']\nvalues = [35, 50, 45, 70, 65, 55, 80]\n\nplt.figure(figsize = [10,7])\nplt.barh(categories, values, color ='#9a723b')\nplt.xlabel('Domains')\nplt.ylabel('Knowledge Level')\nplt.title('Knowledge Level in Computer Domains')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/89.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nHas the internet usage in Germany reached 70% of the population?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Values for the categories\ninternet_usage = np.array([70, 80, 95, 85, 70])\n# Rounding the values to nearest 5\ninternet_usage = 5 * np.round(internet_usage/5)\n\nlabels = ['USA', 'Canada', 'UK', 'Australia', 'Germany']\n\nx = np.arange(len(labels))\n\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 6)\nrects1 = ax.bar(x, internet_usage, 0.35, hatch='\\\\\\\\', color='#9ca020')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Internet Usage (% of Population)')\nax.set_title('Internet Usage in Different Countries')\nax.set_xticks(x)\nax.set_xticklabels(labels)\n\ndef autolabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate(f'{height}', xy=(rect.get_x() + rect.get_width() / 2, height), \n                    xytext=(0, 3), textcoords=\"offset points\", ha='center', va='bottom')\n\nautolabel(rects1)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/90.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIs the CO2 emissions from Asia in the year 2000 less than in Europe?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncategories = ['Asia', 'Europe', 'America']\nyears = [1990, 2000, 2010]\nvalues = [[10, 20, 30], [15, 25, 35], [20, 30, 40]]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Colors and Hatches\ncolors = ['#f236e5', '#ea37cc', '#fff500']\nhatches = ['/', '**', '*']\n\nbarnumber = np.arange(len(years))  # the x locations for the bars\nbarwidth = 0.25  # the width of the bars\n\n# create bars\nfor i in range(len(categories)):\n    ax.bar(barnumber - barwidth/2 + i*barwidth, values[i],\n           barwidth, label=categories[i],\n           color=colors[i % len(colors)], hatch=hatches[i % len(hatches)])\n\n# labels, title, legend\nax.set_title('CO2 Emissions over Time')\nax.set_xlabel('Year')\nax.set_ylabel('CO2 Emissions (Billion Metric Tons)')\nax.set_xticks(barnumber)\nax.set_xticklabels(years)\nax.legend()\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/91.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the population of Germany in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncountries = ['Russia', 'Germany', 'United Kingdom', 'France', 'Italy','Spain', 'Greece']\npopulation_in_millions = [145, 83, 67, 65, 60, 47, 10] \n\ncolors = ['#dd2648', '#b85d30', '#0bcee8', '#c6dd42', '#d2d123', '#ccb59d', '#6ffb29']\n\n# Create a figure to make sure labels can display properly\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Create a bar chart.\nbar_chart = plt.barh(countries, population_in_millions, color=colors)\n\n# Add axes labels.\nplt.xlabel('Population in millions')\nplt.ylabel('Countries')\nplt.title('Population of some countries in millions')\n\n# Save to specific location and name\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/93.png')\n\nplt.show()\n```\nChoices:['145 Million', '83 Million', '67 Million', '65 Million', '60 Million', '47 Million', '10 Million']\nStudent's Response:'83 Million'\n",
    "Question Text:\nAre 'Cats' represented by the smallest total bar in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n\n# Data\ncategories = ['Cats', 'Dogs', 'Birds', 'Horses', 'Fish', 'Rats']\ngroup_A = [25, 40, 20, 30, 45, 15]\ngroup_B = [35, 20, 40, 35, 15, 25]\ngroup_C = [15, 20, 25, 10, 15, 20]\n\n# hatches\nhatches = ['..', '||', '//']\n\nnum_vars = len(categories)\n\n# Create figure and subplots\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Plot bars for each group\nax.bar(categories, group_A, color='skyblue', edgecolor='black', hatch=hatches[0])\nax.bar(categories, group_B, color='sandybrown', bottom=group_A, edgecolor='black', hatch=hatches[1])\nax.bar(categories, group_C, color='mediumseagreen', bottom=[i+j for i,j in zip(group_A, group_B)], edgecolor='black', hatch=hatches[2])\n\n# Label and Title\nax.set_xlabel('Animals')\nax.set_ylabel('Population Count')\nax.set_title('Population of Different Types of Animals')\n\n# Save Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/94.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the bar chart show that over 50% of people in a country have completed high school?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncategories = ['Number of High School Graduates']\nvalues = [85]\n\nplt.figure(figsize=(10, 3))\nplt.barh(categories, values, color='#c6bbb7')\nplt.xlabel('Percentage (%)')\nplt.title('Percentage of High School Graduates in a Country')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/95.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich cat breed has a popularity of 70?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncategories = ['Persian', 'Bengal', 'Siamese', 'Maine Coon', 'Ragdoll', 'Sphynx', 'British Shorthair', 'Scottish Fold', 'Abyssinian']\nvalues = [75, 55, 85, 65, 90, 60, 70, 80, 50]\ncolors = ['#ca77a7', '#dbedb8', '#948419', '#ca77a7', '#dbedb8', '#948419', '#ca77a7', '#dbedb8', '#948419']\n\n# Create horizontal bar chart\nplt.figure(figsize=[10,8])\nbars = plt.barh(categories, values, color=colors, hatch='||')\n\n# Add value labels on bars\nfor bar, value in zip(bars, values):\n    plt.text(bar.get_width(), bar.get_y() + bar.get_height() / 2,\n             '%d' % int(value),\n             ha='left', va='center')\n\nplt.xlabel('Popularity')\nplt.ylabel('Cat Breed')\nplt.title('Popularity of Cat Breeds')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/96.png')\nplt.show()\n```\nChoices:['Persian', 'Bengal', 'British Shorthair', 'Maine Coon', 'Ragdoll']\nStudent's Response:British Shorthair\n",
    "Question Text:\nWhich year experienced the highest population growth in Country B?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['2000', '2005', '2010', '2015', '2020']\n\n# Rounded population data in millions\npopulation_1 = [100, 105, 105, 110, 115]\npopulation_2 = [90, 100, 105, 115, 125]\n\nbar_width = 0.35\nfig, ax = plt.subplots()\n\nbar1 = ax.bar(np.arange(len(categories)), population_1, bar_width, label='Country A', color='#68ac00')\nbar2 = ax.bar(np.arange(len(categories)) + bar_width, population_2, bar_width, label='Country B', color='#93c47d')\n\nax.set_xlabel('Years')\nax.set_ylabel('Population (Millions)')\nax.set_title('Population Growth')\nax.set_xticks(np.arange(len(categories)) + bar_width / 2)\nax.set_xticklabels(categories)\nax.legend()\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/98.png')\nplt.show()\n```\nChoices:['2000', '2005', '2010', '2015', '2020']\nStudent's Response:2020\n",
    "Question Text:\nDoes the sector 'Manufacturing' employ more men than women?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\n# Sample data\ncategories = ['Agriculture', 'Construction', 'Education', 'Finance', 'Healthcare', 'Manufacturing', 'Retail', 'Transportation']\ncolors = ['#904da8', '#532be2', '#b0533d', '#7f8ec7', '#becf34', '#371ea9']\nhatches = ['/o', 'o-', '--', '\\\\|', '/', '-\\\\']\n\nmen = [20, 25, 30, 35, 30, 25, 20, 15]\nwomen = [15, 20, 25, 30, 35, 30, 25, 20]\n\n# Function to round to nearest 5\ndef round_to_five(n):\n    return round(n / 5) * 5\n\nmen = [round_to_five(x) for x in men]\nwomen = [round_to_five(x) for x in women]\n\n# Create Figure and Axes instances\nfig,ax = plt.subplots(1, figsize=(10, 7))\n\n# Create stacked bar chart\nax.bar(categories, men, color=colors[0], hatch = hatches[0])\nax.bar(categories, women, color=colors[1], hatch = hatches[1], bottom=men)\n\n# Set title and labels\nplt.xticks(rotation='vertical')\nplt.title('Employment by Gender and Sector')\nplt.xlabel('Sectors')\nplt.ylabel('Number of Employees (in thousands)')\n\n# Create legend\nmen_patch = mpatches.Patch(color=colors[0], hatch=hatches[0], label='Men')\nwomen_patch = mpatches.Patch(color=colors[1], hatch=hatches[1], label='Women')\nplt.legend(handles=[men_patch, women_patch])\n\n# Save plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/99.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich environmental issue has seen the biggest percentage increase in concern from 1970 to 2020 based on the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib\n\n# Data\nissues = ['Deforestation', 'Pollution', 'Global Warming', 'Overpopulation', 'Natural Resource Depletion',\n          'Waste Disposal', 'Climate Change', 'Loss of Biodiversity', 'Genetic Modification']\nvalues1 = [45, 50, 35, 60, 40, 55, 50, 45, 35]\nvalues2 = [30, 45, 50, 35, 60, 40, 55, 50, 45]\n\ncolors = ['#ff6ca8', '#d03425', '#cd4d47', '#316ef8', '#608510', '#8541b8', '#99b77e', '#7b436f', '#fcdc5c']\nlabels = ['1970', '2020']\n\n# Create bars\nmatplotlib.rcParams.update({'font.size': 10})\nplt.figure(figsize=(10, 6))\nx = range(len(issues))\nplt.bar(x, values1, width=0.4, label=labels[0], color=colors, align='center')\nplt.bar(x, values2, width=0.4, label=labels[1], color=colors, align='edge')\n\n# Axes and labels\nplt.xlabel('Environmental Issues')\nplt.ylabel('Concern (in %)')\nplt.title('Concern for Environmental Issues in 1970 vs 2020')\nplt.xticks(x, issues, rotation=30, horizontalalignment='right')\nplt.legend()\n\n# Save and display\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/100.png')\nplt.show()\n```\nChoices:['Deforestation', 'Pollution', 'Global Warming', 'Overpopulation', 'Natural Resource Depletion', 'Waste Disposal', 'Climate Change', 'Loss of Biodiversity', 'Genetic Modification']\nStudent's Response:Overpopulation\n",
    "Question Text:\nWhich mode of transportation has the third highest usage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Transportation modes and their usage in thousands\ntransport_modes = ['Bicycles', 'Motorbikes', 'Private Cars', 'Buses', 'Subways', 'Trains']\nusage = [10, 15, 40, 30, 25, 20]\n\n# Define colors and hatch\ncolors = ['#e95df7', '#ac0218', '#e56f1f', '#4b8839', '#60a1bb', '#49137d']\nhatches = ['-', '\\\\', '-', '\\\\', '-', '\\\\']\n\n# Create a new figure with a specific size\nplt.figure(figsize=(10, 6))\n\n# Create a bar chart\nbars = plt.bar(transport_modes, usage, color=colors, hatch=hatches[0])\n\n# Add hatch patterns to the bars\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n\n# Add labels and title\nplt.xlabel('Modes of Transportation')\nplt.ylabel('Usage (In Thousands)')\nplt.title('Transportation Usage')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/101.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Bicycles', 'Buses', 'Subways', 'Trains', 'Private Cars', 'Motorbikes']\nStudent's Response:Buses\n",
    "Question Text:\nDid the production of wheat increase from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Corn', 'Wheat', 'Rice', 'Soja']\ny1 = [35, 70, 50, 75]\ny2 = [30, 60, 55, 80]\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.35  \n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width/2, y1, width, label='Year-2020')\nrects2 = ax.bar(x + width/2, y2, width, label='Year-2021')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Crop Types')\nax.set_ylabel('Production in Tons (Millions)')\nax.set_title('Comparitive Agriculture Production')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.grid(axis='y')\n\nfig.tight_layout()\n\nplt.show()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/102.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Rock' music the category with the maximum amount of hours spent weekly according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nmusic_types = ['Rock', 'Pop', 'Electronic', 'Jazz', 'Blues', 'Country', 'Hip Hop']\nweekly_hours = [25, 30, 20, 15, 10, 25, 25]\n\nfig, ax = plt.subplots(figsize=(12,7))\n\nax.barh(music_types, weekly_hours, color= '#a0e53d')\n\nax.set_xlabel('Hours Spent Weekly')\nax.set_title('Weekly Time Spent Listening to Different Types of Music')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/103.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the food category \"Burger\" more popular among adults than kids?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories\ncategories = ['Pizza', 'Burger', 'Cake', 'Pasta', 'Fries', 'Salad', 'Steak', 'Sushi', 'Sandwich']\n\n# Values for nine different categories - rounded to nearest 5\nvalues1 = [10, 15, 20, 25, 30, 35, 40, 45, 50]\nvalues2 = [35, 25, 30, 15, 40, 20, 45, 10, 35]\n\n# Width of the bars\nbarWidth = 0.6\n\n# Position of bar on X axis\nr1 = [i for i, _ in enumerate(categories)]\n\nplt.figure(figsize=(15,10))\n\n# Stacked bar chart\nplt.bar(r1, values1, color='#049c64', width=barWidth, edgecolor='grey', label='Liked by Adults')\nplt.bar(r1, values2, bottom=values1, color='#f3d5d8', width=barWidth, edgecolor='grey', label='Liked by Kids')\n\n# Enhancing the plot\nplt.xlabel('Food Categories', fontweight='bold', fontsize=15)\nplt.ylabel('Popularity Level', fontweight='bold')\nplt.xticks([r for r in range(len(categories))], categories)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/104.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich income category has the highest income?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10,7))\n\n# data\nincome_categories = ['Salary', 'Rent income', 'Dividends', 'Interest', 'Capital gains', 'Royalties', 'Pensions', 'Business income']\nvalues = [30, 20, 35, 25, 40, 30, 35, 25]\ncolors = ['#934c33', '#0af6a3', '#cb35a0', '#c509cd', '#4693b2', '#934c33', '#0af6a3', '#cb35a0']\nhatches = ['x', '\\\\', '+o', '/o', '-', 'x', '\\\\', '+o']\n\n# stack bars\nfor i in range(len(income_categories)):\n    ax.barh(income_categories[i], values[i], color=colors[i], hatch=hatches[i])\n\n# Set the title and labels\nplt.xlabel('Income in Thousands')\nplt.ylabel('Income Categories')\nplt.title('Stacked Bar Chart of Income Categories')\n\n# save the figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/105.png')\n\nplt.show()\n```\nChoices:['Salary', 'Rent income', 'Dividends', 'Interest', 'Capital gains', 'Royalties', 'Pensions', 'Business income']\nStudent's Response:Capital gains\n",
    "Question Text:\nDoes the bar chart show that the number of nurses is more than the number of doctors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\ncategories = ['Medicine']\nvalues1 = [50]\nvalues2 = [40]\nbars1 = plt.bar(categories, values1, color='#7ec800', hatch='//', label = 'Number of Doctors')\nbars2 = plt.bar(categories, values2, bottom=values1, color='blue', hatch='//', label = 'Number of Nurses')\n\nax.set_ylabel('Number of Professionals')\nax.set_title('Number of Professionals in the field of Medicine')\nax.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/106.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich cat breed has the highest population according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncolors = ['#5ea8cf', '#090a34']\ncategories = ['Calico', 'Maine Coon', 'Siamese', 'Tabby', 'Ragdoll', 'Bengal']\nvalues = [30, 45, 20, 35, 40, 30]\nfig, ax = plt.subplots(figsize=(10, 6))\n\nbars = plt.bar(categories, values, color=colors*3)\n\nax.set_title('Population of Cat Breeds')\nax.set_xlabel('Cat Breeds')\nax.set_ylabel('Populations')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/107.png')\n\nplt.show()\n\n\n'''\n<<<QUESTION>>>\nWhich cat breed has the highest population according to the bar chart?\n\n<<<CHOICES>>>\n['Calico', 'Maine Coon', 'Siamese', 'Tabby', 'Ragdoll', 'Bengal']\n<<<CHOICES>>>\n'''\n```\nChoices:['Calico', 'Maine Coon', 'Siamese', 'Tabby', 'Ragdoll', 'Bengal']\nStudent's Response:Maine Coon\n",
    "Question Text:\nIn which genre did the casual readers read more books than the avid readers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ngenres = ['Romance', 'Mystery', 'Fantasy']\ncasual_readers = [10, 20, 15]\navid_readers = [15, 25, 20]\n\nind = [x for x, _ in enumerate(genres)]\n\n\nplt.bar(ind, casual_readers, width=0.8, label='Casual Readers', color='#e06899', bottom=avid_readers)\nplt.bar(ind, avid_readers, width=0.8, label='Avid Readers', color='#6fc2a1', hatch='//')\n\nplt.xticks(ind, genres)\nplt.ylabel(\"Number of Books Read\")\nplt.xlabel(\"Genres\")\nplt.legend(loc=\"upper right\")\nplt.title(\"Literature Genres Read by Casual and Avid Readers\")\n\n# To save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/108.png')\n\nplt.show()\n```\nChoices:['Romance', 'Mystery', 'Fantasy', 'None']\nStudent's Response:None\n",
    "Question Text:\nIs the value of Rental real estate in Australia higher than the value of Commercial real estate in Australia?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncountry = ['USA', 'Canada', 'Germany', 'UK', 'France', 'Australia', 'Japan', 'India']\nresidential = [320, 225, 265, 210, 180, 235, 180, 155]\ncommercial = [210, 140, 110, 95, 100, 125, 125, 80]\nrental = [230, 190, 155, 220, 130, 145, 200, 75]\n\n# stack bars\nplt.figure(figsize=(10,7))\nbar1 = plt.bar(country, residential, color='#15884d', edgecolor='grey', width=0.6)\nbar2 = plt.bar(country, commercial, bottom=residential, color='#f5c25f', edgecolor='grey', width=0.6)\nbar3 = plt.bar(country, rental, bottom=[i+j for i,j in zip(residential, commercial)], color='#cc424f', edgecolor='grey', width=0.6)\n\nplt.xlabel('Countries', fontsize=15)\nplt.ylabel('Real Estate Value (in billions)', fontsize=15)\nplt.title('Real Estate Value by Country and Type', fontsize=18, y=1.05)\nplt.legend([bar1, bar2, bar3], ['Residential', 'Commercial', 'Rental'], bbox_to_anchor=(1,1), loc=2)\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/109.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nOut of all presented cities, which one had the highest number of visits?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The places that people visited and number of visits (rounded to nearest 5)\nplaces = ['London', 'Paris', 'Sydney', 'Tokyo', 'Cairo', 'New York', 'Los Angeles', 'Moscow', 'Rome', 'Berlin']\nvisits = [35, 40, 50, 45, 55, 50, 50, 40, 65, 60]\n\n# Creating bar chart\nfig, ax = plt.subplots(figsize=(12, 8))\nbars = plt.bar(places, visits, color='#27f02c')\n\nhatches = ['*-', '+', '\\\\\\\\', '\\\\', 'O', '||'] \n\n# Set the hatches patterns\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i%len(hatches)])\n    \nplt.title('Number of Visits to Different Cities')\nplt.xlabel('Cities')\nplt.ylabel('Number of visits (in thousands)')\nplt.xticks(rotation=45)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/111.png')\n\nplt.show()\n```\nChoices:['London', 'Paris', 'Rome', 'Sydney', 'Tokyo']\nStudent's Response:'Rome'\n",
    "Question Text:\nIs the highest score in the Aerobics category achieved by Women?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n\n# Sample data\ncategories = ['Running', 'Swimming', 'Cycling', 'Yoga', 'Gymnastics', 'Aerobics', 'Kickboxing']\nmen_scores = [50, 40, 55, 50, 65, 75, 60]\nwomen_scores = [55, 45, 50, 45, 50, 70, 75]\n\n# Setting up style\nstyle.use('ggplot')\nfigure, ax = plt.subplots(figsize=(10, 8))\n\n# Plotting bar chart\nbar_width = 0.35\nopacity = 0.8\nindex = np.arange(len(categories))\n\nbar1 = plt.bar(index, men_scores, bar_width,\n               alpha=opacity, color='#029312', hatch='x*', label='Men')\n\nbar2 = plt.bar(index + bar_width, women_scores, bar_width,\n               alpha=opacity, color='#92483c', hatch='++', label='Women')\n\nplt.xlabel('Fitness Categories')\nplt.ylabel('Scores')\nplt.title('Scores by Men and Women across Various Fitness Categories')\nplt.xticks(index + bar_width, categories)\nplt.legend()\n\n# Saving the plot\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/113.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Regeneration' a more recognized category in Forestry than 'Deforestation'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Input data\ncategories = ['Deforestation', 'Conservation', 'Regeneration', 'Afforestation', 'Biodiversity', 'Sustainable Use', 'Wood Industry']\nvalues = [30, 15, 45, 40, 20, 25, 50]\ncolors = ['#c2417e', '#10c96a', '#9a39b6', '#aa1af3', '#2291a2', '#9e3b25', '#c2417e']\n\n# Chart Size\nplt.figure(figsize=[10,8])\n\n# Create horizontal bars\nplt.barh(categories, values, color=colors)\n\n# Create names on the x-axis\nplt.xlabel('Recognitions')\nplt.ylabel('Categories')\nplt.title('Forestry Management')\n\n# Save chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/114.png')\n\n# Show graphic\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the 'Tech' field the one with highest employment among all the given sectors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define some data\ncategories = ['Agriculture', 'Tech', 'Healthcare', 'Construction', 'Education', 'Retail', 'Finance', 'Hospitality']\nvalues = [20, 45, 40, 30, 35, 25, 35, 25]\ncolors = ['#819144', '#f48e15', '#a26988', '#d7855c', '#3a0433', '#ec7618', '#b72a6f', '#bd205a']\nhatches = ['/o', 'O', '*', '/o', 'O', '*', '/o', 'O']\n\n# Create a new figure\nplt.figure(figsize=(12, 7))\n\n# Create bar chart\nbars = plt.bar(categories, values, color=colors)\n\n# Add hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set a title\nplt.title('Employment Across Different Sectors')\n\n# Show the chart\nplt.show()\n\n# Save the chart to a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/115.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the number of missions by SpaceX in 2021 according to the grouped bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# values\ncategories = ['NASA', 'SpaceX', 'Blue Origin']\nmissions_2020 = [15, 20, 10]\nmissions_2021 = [20, 25, 15]\nmissions_2022 = [25, 30, 20]\n\nbarWidth = 0.25\n\n# Positioning bars\nbar1 = [i for i in range(len(missions_2020))]\nbar2 = [i + barWidth for i in range(len(missions_2021))]\nbar3 = [i + 2 * barWidth for i in range(len(missions_2022))]\n\n# Make the plot\nplt.figure(figsize=(8, 5))\nplt.bar(bar1, missions_2020, color='#13bb99', width=barWidth, label='2020')\nplt.bar(bar2, missions_2021, color='#3d656f', width=barWidth, label='2021')\nplt.bar(bar3, missions_2022, color='#50474a', width=barWidth, label='2022')\n\n# Adding labels\nplt.xlabel('Space Exploration Companies')\nplt.ylabel('Number of Missions')\nplt.title('Number of Missions by Major Space Exploration Companies')\n\n# Adding xticks\nplt.xticks([r + barWidth for r in range(len(missions_2020))], categories)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/116.png')\nplt.show()\n```\nChoices:['10', '15', '20', '25', '30']\nStudent's Response:25\n",
    "Question Text:\nHow many companies are categorized under Artificial Intelligence according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntech_category = ['Artificial Intelligence']\nvalues = [25]\n\n# Create bar chart\nplt.figure(figsize=(10, 5))\nplt.barh(tech_category, values, color=['blue'])\nplt.xlabel('Number of Companies')\nplt.ylabel('Technology Category')\nplt.title('Number of Companies vs Technology Category')\nplt.grid()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/117.png')\nplt.show()\n```\nChoices:[10, 20, 25, 30]\nStudent's Response:25\n",
    "Question Text:\nWhich student has a higher grade in Music subject?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ngrades_categories = ['English', 'Math', 'Science', 'History', 'Geography', 'Music']\nstudent1 = [65, 75, 80, 70, 85, 90]\nstudent2 = [75, 80, 85, 70, 75, 95]\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nbar_width = 0.35\nindex = np.arange(len(grades_categories))\n\nbar1 = plt.bar(index, student1, bar_width, color='#082ee5', label='Student1')\nbar2 = plt.bar(index + bar_width, student2, bar_width, color='#1f36a7', label='Student2')\n\nplt.xlabel('Subjects')\nplt.ylabel('Grades')\nplt.title('Grades by Students')\nplt.xticks(index + bar_width / 2, grades_categories)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/118.png')\nplt.show()\n```\nChoices:['Student1', 'Student2', 'Both have same grade', 'None of them']\nStudent's Response:'Student2'\n",
    "Question Text:\nDoes the 'Public Transport' category have the lowest usage percentage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Cars', 'Bicycles', 'Public Transport']\nvalues = [15, 25, 60]\ncolors = ['#727f12', '#72a2f1', '#f1cc72']\nhatches = ['o-', '.', 'x']\n\n# Create bar chart\nplt.figure(figsize=(10,6))\nbars = plt.bar(categories, values, color=colors, hatch=hatches[0])\n\n# Applying hatch for each bar\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Setting title and labels\nplt.title('Modes of Transportation')\nplt.xlabel('Categories')\nplt.ylabel('Usage Percentage (%)')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/119.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich category of literature has the highest number of works?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\ncategories = ['Novels', 'Poems', 'Plays', 'Short Stories', 'Essays']\nvalues = [45, 30, 15, 50, 40]\n\n# Create bar chart\nplt.figure(figsize=[15,8])\nplt.bar(categories, values, color=['#ee1867', 'b', 'g', 'c', 'm'])\n\n# Set labels and title\nplt.xlabel('Literary Types', fontsize=12)\nplt.ylabel('Number of works', fontsize=12)\nplt.title('Literature types and the number of works', fontsize=15)\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/120.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Novels', 'Poems', 'Plays', 'Short Stories', 'Essays']\nStudent's Response:Answer: 'Short Stories'\n",
    "Question Text:\nIs the number of students that received grade 'A' more than the students that received 'B'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set the values\ngrades = ['A', 'B', 'C', 'D', 'E', 'F']\nnum_students = [15, 25, 20, 10, 5, 5]\n\nfig = plt.figure(figsize=(10, 5))\n\n# Create a bar chart\nbarlist = plt.bar(grades, num_students, color='#4bc254')\n\n# Add title and labels\nplt.title('Grades Distribution')\nplt.xlabel('Grades')\nplt.ylabel('Number of students')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/121.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the Rhino the animal with the least funded conservation projects?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Data\ncategories = ['Elephants', 'Tigers', 'Rhinos', 'Pandas', 'Giraffes', 'Polar Bears']\nvalues = [20, 45, 15, 40, 35, 25]\ncolors = ['#8f1984', '#3226fc', '#f8e722', '#7facff', '#a88e93']\n\n# Figure size to avoid overlap\nplt.figure(figsize=(10, 6))\n\n#Bar chart\nplt.bar(categories, values, color = colors)\n\n# Chart Title\nplt.title('Efforts in Wildlife Conservation')\n\n#Labels for X and Y axis\nplt.xlabel('Animals')\nplt.ylabel('Funded Projects')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/122.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich category of books are most in number?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# defining data\nbooks = ['Novels', 'Self-Help Books', 'School Textbooks']\nnumbers = [20, 35, 40]\n\n# define colors\ncolors = ['#5af310', '#f20bee', '#163f9e']\n\n# visualize data\nplt.figure(figsize=(10, 6))\nplt.barh(books, numbers, color=colors, edgecolor='black')\nplt.xlabel('Number of Books')\nplt.ylabel('Types of Books')\nplt.title('Number of various types of Books')\nplt.xlim(0, 45)\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/123.png')\nplt.show()\n```\nChoices:['Novels', 'Self-Help Books', 'School Textbooks']\nStudent's Response:School Textbooks\n",
    "Question Text:\nIs the `Bus` category in the bar chart represented by the color `#0549d2`?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Transportation categories and their corresponding values\ntransportation = ['Bicycle', 'Bus', 'Car', 'Train', 'Airplane', 'Boat']\nvalues = [10, 15, 22, 20, 25, 18]\n\n# Round values to nearest 5\nvalues = [round(value / 5) * 5 for value in values]\n\nplt.figure(figsize=(10, 6))\nplt.yticks(range(len(transportation)), transportation)\n\nbars = plt.barh(range(len(transportation)), values, color=['#cc7ac2', '#0549d2', '#cc7ac2', '#0549d2', '#cc7ac2', '#0549d2'])\nplt.title('Transportation')\nplt.xlabel('Values')\nplt.ylabel('Type')\n\n# save fig\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/124.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDid Nuclear energy production increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlabels = ['Oil', 'Natural Gas', 'Coal', 'Nuclear', 'Hydroelectric', 'Wind', 'Solar']\nvalues1 = [65, 45, 80, 35, 25, 45, 30]\nvalues2 = [70, 55, 75, 40, 30, 55, 35]\n\nx = range(len(labels))\n\nfig, ax = plt.subplots(figsize=(10,7))\nrects1 = ax.bar(x, values1, width=0.4, align='center', color='#8aba37', label='2019')\nrects2 = ax.bar(x, values2, width=0.4, align='edge', color='#e2b03f', label='2020')\n\nax.set_xlabel('Energy Sources')\nax.set_ylabel('Energy Production (in Terawatt hours)')\nax.set_xticks(x)\nax.set_xticklabels(labels, rotation='vertical')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/125.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs San Antonio the city with the highest popularity score?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Dataset\ncities = ['San Francisco', 'Los Angeles', 'New York', 'Houston', 'Chicago', 'Phoenix', 'Philadelphia', 'Dallas', 'San Antonio']\nvalues = [40, 30, 25, 35, 45, 40, 35, 35, 50]\ncolors = ['#9c4bf1', '#f070da', '#5f6a4e', '#03e376', '#a11c7b', '#2be88c', '#a61ae6', '#c5d0c8', '#f070da']\n\nplt.figure(figsize=[10,8])\n\n# Create bar chart\nplt.bar(cities, values, color=colors)\n\n# Add title and labels\nplt.title('City Popularity')\nplt.xlabel('Cities')\nplt.ylabel('Popularity Score')\n\n# Save the chart to the specified location\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/127.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat region has the highest international tourism?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Asia', 'Africa', 'Europe', 'North America', 'South America', 'Oceanic']\nlocal_tourism = [25, 15, 35, 30, 20, 10]\ninternational_tourism = [20, 10, 40, 35, 15, 5]\n\nfig, ax = plt.subplots(figsize=(10,7)) \n\nbar_width = 0.35\nindex = list(range(len(categories)))\n\nax.bar(index, local_tourism, bar_width, color='#1b8867', label='Local')\nax.bar(index, international_tourism, bar_width, color='#295378', label='International', bottom=local_tourism)\n\nax.set_ylabel('Number of Tourists (in millions)')\nax.set_title('Tourism Numbers by Region')\nax.set_xticks(index)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/128.png')\nplt.show()\n```\nChoices:['Asia', 'Africa', 'Europe', 'North America', 'South America', 'Oceanic']\nStudent's Response:Europe\n",
    "Question Text:\nDoes the 'Eid' festival have more than 200 million attendees?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\nfestivals = ['Diwali', 'Christmas', 'Eid', 'Hannukah', 'Kwanzaa', 'Carnival', 'Chinese New Year']\nattendees_in_millions = [250, 500, 200, 15, 5, 100, 250]\n\ncolors = ['#4300de', '#83ac17', '#286794', '#b09285', '#d6b0b7', '#d084d1']\n\n# Create the bar chart\nplt.figure(figsize=(10, 8))  # Making the figure larger to avoid word overlap\nplt.bar(festivals, attendees_in_millions, color=colors)\n\n# Set the title and labels\nplt.title('Number of Attendees at Different Festivals (in millions)')\nplt.xlabel('Festivals')\nplt.ylabel('Attendees (millions)')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/129.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs New York the city with the highest population according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define cities and their respective populations\ncities = ['Los Angeles', 'New York', 'Chicago']\npopulations = [40, 85, 30]  # populations in millions, rounded\n\n# Colors for the bars\ncolors = ['#46e31e', '#4259a8', '#6188a2']\n\n# Hatches for the bars\nhatches = ['.', '||']\n\n# Create the bar plot\nplt.figure(figsize=(10, 6))\nbars = plt.bar(cities, populations, color=colors)\n\n# Add hatch patterns to the bars\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\n# Labels for the axes\nplt.xlabel('Cities')\nplt.ylabel('Population (in millions)')\nplt.title('Population of Cities')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/130.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhat is the total number of natural disasters occurred in 2010 according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\ncategories = ['Earthquakes', 'Floods', 'Wildfires']\nyears = ['2000', '2005', '2010', '2015', '2020']\nvalues = [[15, 30, 25, 20, 10], [5, 10, 20, 35, 40], [40, 30, 25, 20, 20]]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# stacked bar chart\nfor i in range(len(categories)):\n    if i == 0:\n        ax.bar(years, values[i], label=categories[i])\n    else:\n        ax.bar(years, values[i], bottom=values[i-1], label=categories[i])\n\nax.set_ylabel('Number of Disasters')\nax.set_xlabel('Year')\nax.set_title('Total Natural Disasters by Year and Type')\nax.legend()\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/131.png')\n```\nChoices:['70', '55', '80', '60']\nStudent's Response:70\n",
    "Question Text:\nWhat category of animals has the highest number?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Cats', 'Dogs', 'Sheep', 'Cows', 'Horses', 'Birds']\nvalues = [35, 45, 30, 40, 50, 25]\n\nplt.figure(figsize=(10,8))\nbar_colors = ['#9302f4', '#ea7c1d', '#9302f4', '#ea7c1d', '#9302f4', '#ea7c1d']\nplt.barh(categories, values, color=bar_colors)\n\nplt.xlabel('Number of Animals')\nplt.ylabel('Categories')\nplt.title('Number of different animals in a farm')\nplt.grid(True)\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/132.png')\nplt.show()\n```\nChoices:['Cats', 'Dogs', 'Sheep', 'Cows', 'Horses', 'Birds']\nStudent's Response:'Horses'\n",
    "Question Text:\n: Did Pharmacy have higher sales in 2020 than in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n# data\ncategories = ['Electronics', 'Clothing', 'Grocery', 'Furniture', 'Pharmacy', 'Sports', 'Toys']\nvalues_2019 = [50, 85, 70, 65, 80, 60, 75]\nvalues_2020 = [90, 100, 85, 70, 95, 80, 90]\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.35  # the width of the bars\n\n# figure and axes\nfig, ax = plt.subplots(figsize=(12,6))\n\n# bars\nrects1 = ax.bar(x - width/2, values_2019, width, label='2019', color='#0df525')\nrects2 = ax.bar(x + width/2, values_2020, width, label='2020', color='#46b349')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Sales (in millions)')\nax.set_title('Retail Sales by Category (in 2019 and 2020)')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/135.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the 'Finance' sector contributing the most to the economy according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The categories according to relevance to the economy\ncategories = ['Agriculture', 'Manufacturing', 'Mining', 'Construction', 'Wholesale', 'Retail', 'Transports', 'Information', 'Finance', 'Real Estate']\n\n# Rounded values for each category\nvalues = [15, 25, 10, 20, 35, 40, 30, 45, 50, 55]\n\n# Colors and hatches for the bars\ncolors = ['#09cc36'] * 10\nhatches = ['O', 'xx', '||', '|', '\\\\\\\\', 'o-', '|*', 'o', '\\\\|', 'x*']\n\nplt.rcParams[\"figure.figsize\"] = [10, 8] # setting figure size to avoid word overlap\nplt.barh(categories, values, color=colors, hatch=hatches[0]) # initial bar chart\n\nfor i in range(1, 10):\n    plt.barh(categories[i], values[i], color=colors[i], hatch=hatches[i]) # remaining bar charts\n\nplt.xlabel('Contribution to Economy (%)') \nplt.title('Contribution of Different Sectors to Economy')\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/136.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the total number of Desktops and Laptops distributed by Dell?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Apple', 'Microsoft', 'Dell', 'HP', 'Lenovo', 'Acer', 'ASUS']\nvalues1 = [20, 25, 30, 35, 40, 45, 35]\nvalues2 = [10, 15, 10, 25, 30, 15, 25]\n\n# Colors and hatches\ncolors = ['#1b2f5a', 'grey']\nhatches = ['/o', '/']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize = (12,8))\nax.bar(categories, values1, color=colors[0], hatch=hatches[0], label='Desktops')\nax.bar(categories, values2, color=colors[1], hatch=hatches[1], label='Laptops', bottom=values1)\n\n# Labeling\nax.set_xlabel('Company', fontsize=13)\nax.set_ylabel('Number of Units (in Millions)', fontsize=13)\nax.set_title('Distribution of Desktops and Laptops between Computer Companies', fontsize = 15)\nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/137.png')\n\nplt.show()\n```\nChoices:[20, 25, 35, 40]\nStudent's Response:40\n",
    "Question Text:\nWhich country had the largest increase in CO2 emissions from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['USA', 'China', 'India', 'Russia', 'Brazil', 'Australia', 'Canada', 'Indonesia', 'Mexico', 'South Africa']\nco2_emission_2000 = [6000, 3300, 1050, 1650, 300, 425, 600, 375, 450, 325]\nco2_emissions_2020 = [5250, 10500, 2550, 1750, 875, 525, 675, 2050, 775, 500]\n\nx = np.arange(len(categories))\nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(12, 6))\n\nrects1 = ax.bar(x - width/2, co2_emission_2000, width, label='2000', color = '#cebe45')\nrects2 = ax.bar(x + width/2, co2_emissions_2020, width, label='2020', color = '#b1c78f')\n\nax.set_ylabel('Emissions (MtCO2)')\nax.set_title('CO2 Emissions from Fossil Fuels (2000 vs 2020)')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/138.png')\nplt.show()\n```\nChoices:['USA', 'China', 'India', 'Russia']\nStudent's Response:China\n",
    "Question Text:\nHow many users, in units of thousand, prefer cars as their means of transportation as per the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Cars']\n\ndef create_bar_chart(values, categories, color, hatches):\n    fig, ax = plt.subplots(figsize=(8, len(values) // 2 + 2))\n    bars = ax.barh(categories, values, color=color)\n    for i, bar in enumerate(bars):\n        bar.set_hatch(hatches[i % len(hatches)])\n\n    ax.set_xlabel('Number of Users (in thousands)')\n    ax.set_title('Transportation')\n    \n    plt.savefig('bar_charts/bar_charts_visual_linguistic/train/139.png')\n    plt.show()\n\nvalues = [100]\ncolor = ['#3cca27']\nhatches = ['o-']\ncreate_bar_chart(values, categories, color, hatches)\n```\nChoices:['50', '75', '100', '125']\nStudent's Response:`Answer: 100`\n",
    "Question Text:\nDoes 'CO2 emissions' have a significance level of 85?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['CO2 emissions', 'Ocean temp.', 'Ice melting rate', 'Sea level', 'Deforestation rate', 'Animal extinct.rate', 'Global temp.','Humidity']\nvalues = [80, 35, 50, 70, 60, 45, 75, 65]\n\n# Colors for the bars\ncolors = ['#d01cb3', '#4b0ce3', '#cdf5c1', '#af08df', '#add624', '#7e5e4a', '#11ca08', '#fbf558']\n\n# Making the plot\nplt.figure(figsize=(16, 8))\nplt.barh(categories, values, color=colors)\nplt.title('Global Warming Affects Factors')\nplt.xlabel('Significance level')\nplt.ylabel('Factors')\nplt.xticks(range(0, 101, 5))  # x-axis ticks every 5 numbers\n\n# saving the plot \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/142.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the number of occurred Earthquakes exceed 20?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories and their values\ncategories = ['Earthquakes']\nvalues = [25]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 2))  # Adjust the size as needed\n\n# Draw the bar chart\nbars = ax.barh(categories, values, color='#cf0667', hatch='oo')\n\n# Set a title\nax.set_title('Natural Disasters: Number of Earthquakes')\n\n# Call to save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/143.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nAccording to the chart, what is the combined total of the population (in millions) and GDP (in trillions) of Germany?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncountries = ['United States', 'Germany', 'Japan', 'Australia']\npopulation_in_millions = [330, 83, 126, 25]\ngdp_in_trillions = [21, 4, 5, 1.4]\n\nx = range(len(countries))\n\nplt.figure(figsize=(10,6))\nplt.bar(x, population_in_millions, color='#233fee', hatch='*', label='Population (millions)')\nplt.bar(x, gdp_in_trillions, color='#afbe50', hatch='/', bottom=population_in_millions, label='GDP (trillions)')\n\nplt.xticks(x, countries)\nplt.xlabel('Countries')\nplt.ylabel('Values in Millions/Trillions')\nplt.title('Population and GDP of Different Countries')\nplt.legend(loc='upper right')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/144.png')\nplt.show()\n```\nChoices:['80', '83', '87', '90']\nStudent's Response:87\n",
    "Question Text:\nIs the number of participants for Weight Training greater than those for Kickboxing?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Yoga', 'Pilates', 'Weight Training', 'Cardio', 'Kickboxing', 'Swimming', 'Cycling', 'CrossFit']\nvalues = [25, 40, 55, 70, 35, 65, 45, 50]\ncolors = ['#75cf88', '#c703d5', '#8a8139', '#8775e6', '#e3bf31', '#07b399', '#a38114', '#da8466']\n\nplt.figure(figsize=(10, 8))\n\nplt.barh(categories, values, color=colors)\n\nplt.xlabel('Number of Participants')\nplt.title('Fitness Activity Participation')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/145.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the bar chart show that \"Video Games\" is a more popular hobby than \"Cooking\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for the bars\nhobbies = [\"Traveling\", \"Video Games\", \"Cooking\"]\nvalues = [45, 80, 70]\n\n# Create a new figure with a custom size (width, height)\nplt.figure(figsize=(10, 5))\n\n# Create a horizontal bar chart\nplt.barh(hobbies, values, color=['#21943a', '#7e90ef', '#dc92e2'])\n\n# Add titles and labels\nplt.title(\"Popular Hobbies\")\nplt.xlabel(\"Number of Participants\")\nplt.ylabel(\"Hobbies\")\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/146.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs France the country with the highest number of tourists according to the bar chart?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\n\ncountries = ['USA', 'France', 'China', 'Spain', 'UK']\ntourist_numbers = [80, 90, 60, 85, 75]\n\nfigure, ax = plt.subplots(figsize=(10, 6))\n\ncmap = plt.get_cmap(\"tab20c\")\ncolors = cmap(np.arange(3) * 4)\n\nbar = ax.bar(countries, tourist_numbers, color=colors)\n\nax.set_title(\"Number of Tourists (in million)\")\nax.set_xlabel(\"Countries\")\nax.set_ylabel(\"Number of Tourists\")\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/147.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n,\nAccording to the stacked bar chart, which political party has the least number of followers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define categories and values\ncategories = ['Democrat', 'Republican', 'Independent', 'Green', 'Libertarian', 'Democratic socialist', 'Constitution', 'Socialist', 'Communist', 'Others']\nvalues = [[20, 25, 30, 35, 40, 35, 30, 25, 20, 15],\n          [15, 20, 25, 30, 35, 30, 25, 20, 15, 10],\n          [10, 15, 20, 25, 30, 25, 20, 15, 10, 5],\n          [5, 10, 15, 20, 25, 20, 15, 10, 5, 0]]\n\ncolors = ['#cdea09', '#27f096', '#48818f', '#b717dc', '#d4cbbc', '#e0c8c4', '#eee1e9']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10, 8))\nfor i in range(len(values)):\n    ax.bar(categories, values[i], bottom=[sum(values[j][k] for j in range(i)) for k in range(len(categories))], color=colors[i%len(colors)])\n\n# Set labels and title\nax.set_xlabel('Categories', fontsize=14)\nax.set_ylabel('Number of People (in thousands)', fontsize=14)\nax.set_title('Political Affiliation in US', fontsize=16)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/148.png')\n\nplt.show()\n```\nChoices:['Democrat', 'Republican', 'Green', 'Libertarian', 'Independent', 'Democratic socialist', 'Constitution', 'Socialist', 'Communist', 'Others']\nStudent's Response:'Others'\n",
    "Question Text:\nWhat is the crime rate of Robbery as represented in the bar graph?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for each crime category\ncrime_rates = [45, 55, 25, 50, 75]\n\n# Hatches list\nhatches = ['o-']\n\n# Categories list\ncategories = ['Theft', 'Assault', 'Burglary', 'Robbery', 'Homicide']\n\n# Creating a new figure and setting its size\nplt.figure(figsize=(15,7))\n\n# Creating the horizontal bar chart\nbars = plt.barh(categories, crime_rates, color='skyblue', edgecolor='k')\n\n# Apply the hatches\nfor bar in bars:\n    bar.set_hatch(hatches[0])\n\n# Setting the title and labels\nplt.title('Crime Rates in a Certain Region')\nplt.xlabel('Crime Rate')\nplt.ylabel('Type of Crime')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/150.png')\n\n# Displaying the plot\nplt.show()\n```\nChoices:[20, 30, 50, 60, 80]\nStudent's Response:50\n",
    "Question Text:\nDo Republicans prioritize Healthcare more than Democrats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the categories\ncategories = ['Funding', 'Foreign Policy', 'Healthcare', 'Education', 'Environment', 'Immigration']\n\n# Set the colors\ncolors = ['#3c57fe', '#e80505', '#70407b', '#171180', '#d64a95']\n\n# Choose the values. Make sure to keep it significant to the questions and responses later.\nDemocrats = [70, 65, 80, 75, 85, 70]\nRepublicans = [75, 70, 65, 50, 45, 65]\n\n# The position of the bars on the x-axis\nr = range(len(categories))\n \n# Create Democrats bar\nbar1 = plt.bar(r, Democrats, color=colors[0], edgecolor='white')\n\n# Create Republicans bar\nbar2 = plt.bar(r, Republicans, bottom=Democrats, color=colors[1], edgecolor='white')\n\n# Set the bar width\nbarWidth = 1\n\nplt.ylabel(\"Political Priorities (in %)\")\nplt.xlabel(\"Political Issues\")\nplt.legend([bar1, bar2], ['Democrats', 'Republicans'], loc=2)\nplt.xticks(r, categories, rotation=45)\nplt.subplots_adjust(bottom=0.15) # Creates space for the x-axis labels\n\nplt.title(\"Political Priorities among Democrats and Republicans\")\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/151.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhich festival has the highest number of attendees (rounded to the nearest 5k)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\nfestivals = ['Diwali', 'Christmas', 'Halloween', 'Easter', 'Hanukkah']\nattendees = [20, 45, 30, 40, 25]\n\n# Creating the bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(festivals, attendees, color='#6ef3ca')\n\n# Labels and title\nplt.xlabel('Festivals')\nplt.ylabel('Number of Attendees (in thousands)')\nplt.title('Number of Attendees in Different Festivals')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/152.png')\n\nplt.show()\n```\nChoices:['Diwali', 'Christmas', 'Halloween', 'Easter', 'Hanukkah']\nStudent's Response:'Christmas'\n",
    "Question Text:\nHow many more unmanned missions were there than manned missions according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib\nmatplotlib.use('Agg')\n\ncategories = ['Unmanned Missions', 'Manned Missions', 'Satellites Launched', 'Space Stations']\nvalues = [75, 50, 80, 45]\ncolors = ['#767b23', '#f9bbfe', '#d722ff', '#9b97c0']\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.bar(categories, values, color=colors)\nax.set_xlabel('Categories of Space Exploration')\nax.set_ylabel('Number (in 100s)')\nax.set_title('Space Exploration Statistics')\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/153.png')\nplt.close(fig)\n```\nChoices:[5, 10, 15, 20, 25]\nStudent's Response:25\n",
    "Question Text:\nBy how much did the number of aeroplane users increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Cars', 'Motorcycles', 'Bicycles', 'Buses', 'Trains', 'Aeroplanes']\n\nvalues_2019 = [600, 200, 500, 300, 250, 700]\nvalues_2020 = [650, 180, 530, 320, 260, 750]\n\nindex = np.arange(len(categories))\n\nplt.figure(figsize=(12, 6))\nbar_width = 0.35\n\nbar_2019 = plt.bar(index, values_2019, bar_width, color='#c71617', label='2019')\nbar_2020 = plt.bar(index, values_2020, bar_width, bottom=values_2019, color='#020b73', label='2020')\n\nplt.xlabel('Transportation Methods')\nplt.ylabel('Number of Users (in Thousands)')\nplt.title('Comparison of Transportation Methods in 2019 and 2020')\nplt.xticks(index, categories)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/154.png')\nplt.show()\n```\nChoices:['No increase', 'By 10000', 'By 50', 'By 50000']\nStudent's Response:50\n",
    "Question Text:\nIs the mode of travel with highest frequency 'Train'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import MaxNLocator\n\n# Data\ntransport_modes = ['Bus', 'Train', 'Car', 'Bike']\nfrequency = [20, 25, 15, 10]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create bar chart\nax.bar(transport_modes, frequency, align='center', alpha=0.5)\n\n# Setting title and labels\nax.set_title('Preferred Modes of Travel')\nax.set_ylabel('People Count')\nax.set_xlabel('Mode of Transportation')\n\n# Ensuring the ticks are whole numbers\nax.yaxis.set_major_locator(MaxNLocator(integer=True))\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/155.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhich fitness exercise category has the highest total repetitions combined in the stacked bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Push-ups', 'Sit-ups', 'Squats', \n              'Running', 'Swimming', 'Cycling',\n              'Yoga', 'Mountain climber', 'Planking', \n              'Burpees']\n\nvalues1 = [45, 60, 55, 80, 70, 85, 35, 40, 20, 15]\nvalues2 = [55, 50, 75, 85, 70, 65, 50, 50, 35, 60]\n\ncolors = ['#cd1fe5', '#be06a6']\nhatches = ['\\\\', 'O.', '++', '**', '\\\\|', '*-', '//', 'O|', '-\\\\', 'oo']\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nax.bar(categories, values1, color=colors[0], hatch=hatches[0])\nax.bar(categories, values2, bottom=values1, color=colors[1], hatch=hatches[1])\n\nax.set_yticks(range(0, 200, 20))\nax.set_ylabel('Number of repetitions')\nax.set_xlabel('Fitness Exercises')\nax.set_title('Comparison of number of repetitions in different fitness exercises')\n\nplt.xticks(rotation = 45)\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/156.png')\nplt.show()\n```\nChoices:['Push-ups', 'Sit-ups', 'Squats', 'Running', 'Swimming', 'Cycling', 'Yoga', 'Mountain climber', 'Planking', 'Burpees']\nStudent's Response:'Running'\n",
    "Question Text:\nWhich festival had the highest number of attendees according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define a function to create grouped bar chart\ndef draw_multicolored_barchart():\n    festivals = ['Holi', 'Easter', 'Diwali', 'Christmas', 'Halloween', 'Thanksgiving', 'Hanukkah', 'Raksha Bandhan', 'Pongal', 'Navratri']\n    attendees = np.array([20, 45, 30, 50, 35, 45, 25, 40, 30, 35])\n    hatches = ['*', '+', 'O', 'o', '*', '+', 'O', 'o', '*', '+']\n    colors = ['#d3b4d3', '#912ee5']*5\n    pos = list(range(len(festivals)))\n    \n    fig, ax = plt.subplots(figsize=[12,10])\n    for tick in ax.get_xticklabels():\n        tick.set_rotation(45)\n\n    bars = plt.bar(pos, attendees, color=colors, edgecolor='black')\n    for bar, hatch in zip(bars, hatches):\n        bar.set_hatch(hatch)\n\n    # Set the labels and title\n    ax.set_ylabel('Number of Attendees (thousands)')\n    ax.set_title('Number of Attendees at Different Festivals')\n    ax.set_xticks(pos)\n    ax.set_xticklabels(festivals)\n\n    # Save the figure\n    plt.savefig('bar_charts/bar_charts_visual_linguistic/train/157.png')\n    plt.show()\n\n# Call the function\ndraw_multicolored_barchart()\n```\nChoices:['Holi', 'Easter', 'Diwali', 'Christmas', 'Halloween', 'Thanksgiving', 'Hanukkah', 'Raksha Bandhan', 'Pongal', 'Navratri']\nStudent's Response:Christmas\n",
    "Question Text:\nIs the highest usage of Internet for social media at 11AM?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for categories\nsocial_media = [5, 10, 5, 10, 5, 10, 5, 10, 5, 10]\nyoutube_netflix = [10, 20, 10, 20, 10, 20, 10, 20, 10, 20]\nsearch_engines = [15, 30, 15, 30, 15, 30, 15, 30, 15, 30]\ne_learning = [20, 40, 20, 40, 20, 40, 20, 40, 20, 40]\ntotal = [social_media[i] + youtube_netflix[i] + search_engines[i] + e_learning[i] for i in range(10)]\n\nactivities = [\"9AM\", \"10AM\", \"11AM\", \"Noon\", \"1PM\", \"2PM\", \"3PM\", \"4PM\", \"5PM\", \"6PM\"]\n\n# Plotting the chart\nplt.figure(figsize=(12, 8))\nplt.bar(activities, social_media, color='#4d53e6')\nplt.bar(activities, youtube_netflix, bottom=social_media, color='r')\nplt.bar(activities, search_engines, bottom=[social_media[i] + youtube_netflix[i] for i in range(10)], color='g')\nplt.bar(activities, e_learning, bottom=total, color='y')\n\nplt.xlabel(\"Hours\")\nplt.ylabel(\"Internet Usage (in GB)\")\nplt.title(\"Internet Usage per Hour for Different Activities\")\nplt.legend([\"Social Media\", \"YouTube/Netflix\", \"Search Engines\", \"E-Learning\"])\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/158.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn the age group of '41-50', do the average hours of physical activity exceed the average hours of sleep?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The five categories presented as age groups\nage_groups = ['20-30', '31-40', '41-50', '51-60', '61-70']\n\n# Average hours of physical activity and sleep for each age group\nhours_of_activity = [2, 1, 1, 1, 0]\nhours_of_sleep = [8, 7, 6, 5, 5]\n\n# Bar widths, positions, etc.\nbar_width = 0.35\nindex = [0, 1, 2, 3, 4]\nopacity = 0.8\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\n\nbar1 = plt.bar(index, hours_of_activity, bar_width, alpha=opacity, color='#4ca108', label='Physical Activity')\n\nbar2 = plt.bar([p + bar_width for p in index], hours_of_sleep, bar_width, alpha=opacity, color='#21290d', label='Sleep')\n\nplt.xlabel('Age Groups', fontsize=12)\nplt.ylabel('Hours per Day', fontsize=12)\nplt.title('Average Hours of Physical Activity and Sleep by Age Group', fontsize=15)\nplt.xticks([p + bar_width / 2 for p in index], age_groups)\n\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/159.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the event with the least impact score?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Historical Events and their estimated impact on history (score out of 100)\nevents = ['Invention of Wheel', 'Discovery of Fire', 'Invention of the Internet', 'WWII']\nimpact_score = [80, 90, 95, 85]\n\n# Colors and hatch for the bars\ncolors = ['#11a07b', '#80e20c', '#fea3e1', '#11a07b']\nhatch = 'oo'\n\n# Creating the bar chart\nplt.figure(figsize=(10,6))\nbars = plt.bar(events, impact_score, color=colors, hatch=hatch)\n\n# Adding labels\nplt.xlabel('Historical Events')\nplt.ylabel('Impact Score')\nplt.title('Impact Score of Different Historical Events')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/160.png')\n\nplt.show()\n```\nChoices:['Invention of Wheel', 'Discovery of Fire', 'Invention of the Internet', 'WWII']\nStudent's Response:Invention of Wheel\n",
    "Question Text:\nWhat field has the smallest number of employees?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The seven categories of employment \njobs = ['Healthcare', 'Technology', 'Sales', 'Education', 'Finance', 'Retail', 'Tourism']\n\n# Number of employees rounded to the nearest 5\nemployees = [200, 165, 150, 155, 170, 180, 145]\n\n# Color for each bar\ncolors = ['#437838','#1c9034','#38d0da', '#ff9986', '#1829ed', '#548483', '#c34852']\n\n# Creating the bar chart\nplt.figure(figsize=(10,5))\nplt.bar(jobs, employees, color=colors)\n\nplt.title('Number of Employees in Different Fields')\nplt.xlabel('Fields')\nplt.ylabel('Number of Employees')\n\n#Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/161.png')\nplt.show()\n```\nChoices:['Healthcare', 'Technology', 'Sales', 'Education', 'Finance', 'Retail', 'Tourism']\nStudent's Response:Tourism\n",
    "Question Text:\nDid the student score more than 70 in English?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define categorical variables\ncategories = ['English', 'Maths', 'Physics', 'Chemistry', 'Biology', 'Geography', 'History', 'Art', 'PE', 'Music']\nvalues = [85, 70, 60, 80, 75, 65, 55, 90, 70, 60]\n\n# Define colors and hatches\ncolors=['#dabb8a', '#f11e71', '#71a131', '#873853', '#7f1ed2'] * 2\nhatches=['xx', 'o', '+o', 'x*', '..'] * 2\n\n# Define the figure size\nplt.figure(figsize=(10,6))\n\n# Create a bar chart\nfor idx, (category, value, color, hatch) in enumerate(zip(categories, values, colors, hatches)):\n    plt.barh(category, value, color=color, hatch=hatch)\n\n# Add labels and title\nplt.xlabel('Grades')\nplt.ylabel('Subjects')\nplt.title('Grades in Different Subjects')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/164.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas the crime rate for burglary in 2019 higher than that in 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Homicide', 'Assault', 'Theft', 'Burglary', 'Fraud']\nyears = ['2015', '2016', '2017', '2018', '2019']\n\n# Values need to be round numbers\nvalues = np.array([\n    [15, 20, 10, 30, 25],  # 2015\n    [20, 25, 15, 35, 30],  # 2016\n    [25, 30, 20, 40, 35],  # 2017\n    [30, 35, 25, 45, 40],  # 2018\n    [35, 40, 30, 50, 45]   # 2019\n])\n\ncolors = ['#071890', '#5380bd', '#c4b77b', '#3d1c2c', '#b8efbd']\nhatches = ['O|', '\\\\\\\\']\n\nbar_width = 0.15\nr = np.arange(len(categories))\n\nplt.figure(figsize=(12,8))\n\nfor i in range(len(years)):\n    plt.bar(r + bar_width*i, values[i], color=colors[i], width=bar_width, label=years[i], hatch=hatches[i%len(hatches)])\n\nplt.xlabel('Crime Categories', labelpad=14)\nplt.ylabel('Crime Rates', labelpad=14)\nplt.xticks(r + bar_width, categories)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/162.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nLooking at the bar chart, does the sales of Smartphones is around twice as much as the sales of Landline phones?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\ncategories = ['Smartphones', 'Landline phones']\nvalues = [100, 60]\n\n# Defining bar colors and hatches\nbar_colors = ['#0c83e6', '#96d38c']\nbar_hatches = ['O', '/']\n\n# Creating the bar chart\nplt.figure(figsize=(10,6))\nbars = plt.bar(categories, values, color=bar_colors)\n\n# Adding hatches to bars\nfor bar, hatch in zip(bars, bar_hatches):\n    bar.set_hatch(hatch)\n\n# Adding labels and title\nplt.ylabel('Units Sold (in Thousands)')\nplt.title('Sales of Different Phone Types')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/163.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the 'Renaissance' era have more paintings in the 21st Century than in the 20th Century?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories\ncategories = ['Renaissance', 'Impressionist', 'Surrealist', 'Contemporary']\n\n# Values\nvalues_20th = [25, 65, 40, 35]\nvalues_21st = [20, 40, 20, 45]\n\n# Bar width\nbarWidth = 0.35\n\n# Position of bars on x-axis\nr1 = range(len(values_20th))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10, 7)) \n\n# Make the plot\nplt.bar(r1, values_20th, color='#ae9421', width=barWidth, edgecolor='grey', label='20th Century')\nplt.bar(r2, values_21st, color='#5b5e58', width=barWidth, edgecolor='grey', label='21st Century')\n\n# Adding xticks\nplt.xlabel('Art Era', fontweight='bold', fontsize=15)\nplt.ylabel('Number of Paintings', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(values_20th))], categories)\n\nplt.title(\"Paintings in Different Art Eras\", fontsize=20)\nplt.legend()\nplt.autoscale()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/164.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the `Services` sector contributing 35% to the economy based on the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set up the figure size\nplt.figure(figsize=(10,6))\n\n# Define the categories and values\ncategories = ['Agriculture', 'Industry', 'Services']\nvalues = [35, 40, 25]\n\n# Define the color and hatches\ncolor = '#22ed3c'\nhatches = ['*', '|*']\n\n# Create the bar chart\nbars = plt.barh(categories, values, color=color)\n\n# Applying hatches to bars\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\n# Add labels to the chart\nplt.xlabel('Percent of Economy')\nplt.ylabel('Sector')\nplt.title('Distribution of Economic Sectors')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/165.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich political party had the least number of votes in the 2019 election?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define categories\ntopics = ['Party A', 'Party B', 'Party C', 'Party D', 'Party E', 'Party F', 'Party G']\n\n# Define data\nvotes_2018 = [85, 60, 75, 45, 55, 50, 60]\nvotes_2019 = [70, 65, 80, 40, 60, 55, 70]\n\nbarWidth = 0.25\n\n# Set position of bar on X axis\nr1 = np.arange(len(votes_2018))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(15,8))\n\n# Make the plot\nplt.bar(r1, votes_2018, color='#565a97', width=barWidth, edgecolor='grey', label='2018')\nplt.bar(r2, votes_2019, color='#228637', width=barWidth, edgecolor='grey', label='2019')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Political Parties', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(votes_2018))], topics)\n\nplt.ylabel('Votes (in thousands)', fontweight='bold')\nplt.title('Votes in the General Elections', fontweight='bold')\n\n# Create legend & Show graphic\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/166.png')\nplt.show()\n```\nChoices:['Party A', 'Party B', 'Party C', 'Party D', 'Party E', 'Party F', 'Party G']\nStudent's Response:Party D\n",
    "Question Text:\nWhich type of property has the same number of real estate listings as Vacant Land and Co-ops combined?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\ncategories = ['Houses', 'Apartments', 'Condos', 'Townhouses', 'Mobile Homes', \\\n              'Multi-Family Homes', 'Vacant Land', 'Co-ops', 'Commercial']\nvalues = [50, 35, 30, 45, 25, 40, 15, 20, 50]\ncolors = ['#7fe10d', '#12e80a', '#d4bdab', '#3a1b49', \\\n          '#39ee9e', '#a3a942', '#020993', '#d4bdab', '#12e80a']\n\n# Create a figure\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Add bars to the figure\nfor i in range(len(categories)):\n    ax.barh(categories[i], values[i], color=colors[i])\n\n# Set labels and title\nax.set_xlabel('Real Estate Listings')\nax.set_title('Number of Real Estate Listings by Property Type')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/167.png')\nplt.show()\n```\nChoices:['Houses', 'Apartments', 'Condos', 'Townhouses', 'Mobile Homes', 'Multi-Family Homes', 'Commercial']\nStudent's Response:Apartments\n",
    "Question Text:\n\"Is the number of Violent Crimes less than the number of Property Crimes?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Violent Crime', 'Property Crime']\nvalues = [20, 35]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\ncolors = ['#4fc63e', '#33edb6']\nax.barh(categories, values, color=colors, edgecolor='black')\n\nax.set_xlabel('Number of crimes (in thousands)')\nax.set_ylabel('Type of crime')\nax.set_title('Crime Rates')\n\nfor i, v in enumerate(values):\n    ax.text(v, i, str(v), color='black', fontweight='bold')\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/168.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich country received the majority of adventure tourists from the given chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\ncountries = ['USA', 'UK', 'France', 'Spain', 'Italy', 'Australia', 'Japan']\nvalues1 = [20, 30, 40, 35, 25, 15, 50]\nvalues2 = [30, 20, 25, 15, 40, 35, 20]\nvalues3 = [50, 40, 35, 50, 35, 50, 30]\nvalues = [values1, values2, values3]\nlabels = ['Leisure Tourism', 'Adventure Tourism', 'Cultural Tourism']\n\n# Fig size\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# plotting the bar chart\ncolors = ['#8560c4', '#c05b41', '#b75885']\nfor i in range(3):\n    if i == 0:\n        ax.bar(countries, values[i], color=colors[i], label=labels[i])\n    else:\n        ax.bar(countries, values[i], bottom=values[i-1], color=colors[i], label=labels[i])\n\n# Setting labels\nax.set_xlabel(\"Countries\")\nax.set_ylabel(\"Tourism (in Millions)\")\nax.set_title(\"Tourism statistics per Country\")\nax.legend()\n\n# Saving the graph\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/169.png')\n\nplt.show()\n```\nChoices:['USA', 'UK', 'France', 'Spain', 'Italy', 'Australia', 'Japan']\nStudent's Response:Italy\n",
    "Question Text:\nWhat is the total number of Labrador dogs according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create the data\ncategories = ['Labrador', 'Rottweiler', 'Poodle', 'Bulldog', 'Beagle']\ncolors = ['#9c35bb', '#0eee87', '#87af48', '#450d96']\n\nvalues_1 = [20, 25, 40, 45, 30]\nvalues_2 = [15, 20, 30, 25, 20]\nvalues_3 = [20, 15, 25, 20, 25]\nvalues_4 = [15, 20, 35, 10, 25]\n\n# Increase the figure size\nplt.figure(figsize=(10,6))\n\n# Create the bar chart\nplt.bar(categories, values_1, color=colors[0], label='Color 1')\nplt.bar(categories, values_2, bottom=values_1, color=colors[1], label='Color 2')\nplt.bar(categories, values_3, bottom=[i+j for i,j in zip(values_1, values_2)], color=colors[2], label='Color 3')\nplt.bar(categories, values_4, bottom=[i+j+k for i,j,k in zip(values_1, values_2, values_3)], color=colors[3], label='Color 4')\n\n# Add labels and a legend\nplt.xlabel('Dog Breed')\nplt.ylabel('Number of Dogs')\nplt.legend(title='Classification')\n\n# Save the image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/170.png')\nplt.close()\n```\nChoices:['70', '90', '80', '60']\nStudent's Response:70\n",
    "Question Text:\nWhich fashion item has a popularity value of 45?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The categories and their corresponding values\ncategories = ['Jeans', 'T-Shirts', 'Sneakers', 'Hats', 'Bags']\nvalues = [30, 45, 40, 25, 50]\n\n# Create the bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(categories, values, color='skyblue')\n\n# Add title and labels\nplt.title('Fashion Item Popularity')\nplt.xlabel('Fashion Item')\nplt.ylabel('Popularity Value')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/171.png')\nplt.show()\n```\nChoices:['Jeans', 'T-Shirts', 'Sneakers', 'Hats', 'Bags']\nStudent's Response:T-Shirts\n",
    "Question Text:\nIs the participation of girls in Soccer is less than the participation in Hockey?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsports = ['Cricket', 'Soccer', 'Tennis', 'Basketball', 'Baseball', 'Hockey']\nboys = [30, 35, 50, 45, 40, 35]\ngirls = [25, 30, 35, 50, 40, 45]\n\nbarWidth = 0.3\nplt.figure(figsize=(10,5))\n\nbar1 = range(len(sports))\nbar2 = [x + barWidth for x in bar1]\n\nplt.bar(bar1, boys, color = 'b', width = barWidth)\nplt.bar(bar2, girls, color = 'r', width = barWidth)\n\nplt.xlabel('Sports', fontsize=12)\nplt.ylabel('Number of Players', fontsize=12)\nplt.title('Number of Players in Different Sports', fontsize=15)\n\nplt.xticks([x + barWidth/2 for x in bar1], sports)\nplt.legend(['Boys', 'Girls'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/172.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the animal type with the second highest number according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(12, 8))\n\nanimals = ['Dogs', 'Cats', 'Rabbits', 'Horses', 'Fishes', 'Birds', 'Cows']\nvalues = [20, 35, 25, 30, 45, 50, 40]\ncolors = ['#717e0f', '#de36b3', '#229bb4', '#A71820', '#AE7A6A', '#19871E', '#543FAE']\n\nplt.barh(animals, values, color=colors)\nplt.xlabel(\"Number of Animals\")\nplt.ylabel(\"Animal Type\")\nplt.title(\"Distribution of Animals\")\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/173.png')\nplt.show()\n```\nChoices:['Dogs', 'Cats', 'Rabbits', 'Horses', 'Fishes', 'Birds', 'Cows']\nStudent's Response:Cows\n",
    "Question Text:\nWhich architectural style has around 25 structures according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Renaissance', 'Gothic', 'Modern', 'Postmodern']\nvalues = [20, 25, 35, 45]\n\nfig, ax = plt.subplots(figsize = (10,5))\n\nbars = ax.barh(categories, values, color = ['#efc248', '#808595', '#efc248', '#808595'])\n\nhatches = ['**', 'O', '\\\\', '+o']\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Number of Structures')\nplt.ylabel('Architecture Style')\nplt.title('Number of Structures per Architecture Style')\n\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/174.png')\nplt.show()\n```\nChoices:['Renaissance', 'Gothic', 'Modern', 'Postmodern']\nStudent's Response:'Gothic'\n",
    "Question Text:\nWhich sport has the least number of players according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# items under 'Sports' category\ncategories = ['Baseball', 'Football', 'Basketball']\n\n# values corresponding to the items (rounded to nearest 5)\nvalues = [45, 85, 70]\n\n# hatching patterns to use\nhatches = ['xx', '\\\\', '|*']\n\n# setting fig size to avoid category titles overlap\nfig, ax = plt.subplots(figsize=(8, 4))\n\n# creating bar chart\nbars = ax.barh(categories, values, color='lightgrey')\n\n# Adding hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Setting labels\nax.set_xlabel('Number of Players')\nax.set_title('Number of Players in Various Sports')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/175.png')\nplt.show()\n```\nChoices:['Baseball', 'Football', 'Basketball']\nStudent's Response:Baseball\n",
    "Question Text:\nWhat was the percentage of global forest area lost due to deforestation in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample environmental issues data\nissues = ['Deforestation']\nvalues = [45, 50, 35]\nyears = ['2015', '2020', '2025']\n\n# Create a bar width\nbar_width = 0.25\n\n# Create bars\nplt.figure(figsize=(10,6))\nfor i in range(len(issues)):\n    plt.bar(years, values, width=bar_width, label=issues[i])\n\n# Adding details\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('Percentage(%))', fontsize=12)\nplt.title('Percentage of global forest area lost from 2015 to 2025 due to Deforestation')\nplt.legend()\n\n# Save plot as .png\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/176.png')\n\nplt.show()\n```\nChoices:['45%', '50%', '35%']\nStudent's Response:50%.\n",
    "Question Text:\nDoes the Industry sector employ less people in 2019 than in 2018?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Job sector categories and respective values\ncategories = ['Agriculture', 'Industry', 'Services', 'Education', 'Health']\nvaluesA = [15, 40, 75, 30, 25]\nvaluesB = [10, 35, 55, 20, 15]\nvaluesC = [5, 15, 10, 5, 5]\n\n# Create a stacked bar using matplotlib\nplt.figure(figsize=(10,7))\nplt.bar(categories, valuesA, color=\"#947edc\", label=\"2018\")\nplt.bar(categories, valuesB, bottom=valuesA, color=\"#0d615b\", label=\"2019\")\nplt.bar(categories, valuesC, bottom=[i+j for i,j in zip(valuesA, valuesB)], color=\"#8eb1d2\", label=\"2020\")\n\nplt.ylabel('# of employees (in thousands)')\nplt.title('Employment by job sector')\nplt.legend()\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/178.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the user base of Facebook increase from the year 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Instagram', 'Facebook']\nusers_2015 = [400, 1500]\nusers_2020 = [1000, 2100]\n\nbarWidth = 0.35\nbr1 = range(len(users_2015))\nbr2 = [x + barWidth for x in br1]\n\nfig = plt.subplots(figsize =(12, 8))\n\nplt.bar(br1, users_2015, color ='b', width = barWidth, edgecolor ='grey', label ='2015')\nplt.bar(br2, users_2020, color ='r', width = barWidth, edgecolor ='grey', label ='2020')\n\nplt.xlabel('Social Media Platforms', fontweight ='bold', fontsize = 15)\nplt.ylabel('Number of Users (in millions)', fontweight ='bold', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(users_2015))], categories)\n\nplt.legend(title=\"Year\")\nplt.title(\"Number of users on Instagram and Facebook in 2015 and 2020.\")\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/179.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich energy domain from the provided options has 40 arbitrary units of energy?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncategories = ['Hydropower', 'Wind', 'Solar', 'Coal', 'Natural Gas', 'Nuclear', 'Biomass', 'Geothermal', 'Oil']\nvalues = [10, 20, 25, 30, 35, 40, 45, 50, 55]  # rounding to nearest 5\ncolors = ['#94d09f', '#098e1a', '#532a06', '#2d3cf5', '#0e4c8f', '#0b09d0', '#67d0f8']\n\n# Plot data\nplt.figure(figsize=(10,6))  # larger figure size for long category names\nbars = plt.bar(categories, values, color=colors)\n\n# Axis labels\nplt.xlabel('Energy Source')\nplt.ylabel('Amount (arbitrary units)')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/180.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Hydropower', 'Wind', 'Solar', 'Coal', 'Natural Gas', 'Nuclear', 'Biomass', 'Geothermal', 'Oil']\nStudent's Response:Nuclear\n",
    "Question Text:\nAre Floods causing more total deaths than Fires?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories\ndisasters = ['Floods', 'Earthquakes', 'Fires', 'Storms']\n\n# Some fictional data rounded to the nearest 5\ntotal_affected = [325, 200, 100, 280]\ntotal_deaths = [125, 100, 30, 100]\n\n# Set figure size (12,7) for large labels\nplt.figure(figsize=(12,7))\n\n# Range for x-axis\nx = range(len(disasters))\n\n# Plotting total affected\nbar1 = plt.bar(x, total_affected, width=0.4, color='#eaba20', align='center')\n\n# Plotting total deaths\nbar2 = plt.bar(x, total_deaths, width=0.4, color='#007acc', align='edge')\n\n# Adding labels\nplt.xlabel('Types of Natural Disasters')\nplt.ylabel('Number of People')\nplt.title('People Affected by Different Types of Natural Disasters')\n\n# Adding ticks on x-axis\nplt.xticks(x, disasters)\n\n# Adding legend\nplt.legend([bar1, bar2], ['Total Affected', 'Total Deaths'])\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/181.png')\n\n# Display the chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Facebook the social media platform with the most number of users (in billions) depicted in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define Your Dataset\nsocial_media = [\"Facebook\", \"YouTube\", \"WhatsApp\", \"Instagram\"]\nuser_number_in_billions = [2.8, 2, 2, 1.5]\ncolors = ['#a4c425', \n          '#465336', \n          '#28c330',\n          '#cde425']\n\n# Define Figure size\nplt.figure(figsize=(10,5))\n\n# Create a Bar Chart\nplt.bar(social_media, user_number_in_billions, color=colors)\n\n# Add Title and Axis Names\nplt.title('Number of Users on Social Media (in billions)')\nplt.xlabel('Social Media Platforms')\nplt.ylabel('Number of Users (in billions)')\n\n# Save the plot to a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/182.png')\n\n# Show the Bar Chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHas Europe received the highest number of visitations among all continents?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Asia', 'Europe', 'North America', 'South America', 'Africa', 'Australia']\nvalues = [20, 45, 25, 35, 15, 30]\ncolors = ['#432b2f', '#753fda', '#8b08ef', '#9fa2cd', '#7b3ce1', '#a9d941']\nhatches = ['**', '-\\\\', '--', '++', '', '']\n\nplt.figure(figsize=[10, 6])\n\nbars = plt.bar(categories, values, color=colors)\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title(\"Number of Visitations to Different Continents\")\nplt.xlabel(\"Continents\")\nplt.ylabel(\"Number of Visitations (in thousands)\")\nplt.grid(True, which='both', axis='y', linestyle='--', linewidth=0.5)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/184.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich music genre has 60 million listeners?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Pop', 'Rock', 'Jazz', 'Blues', 'Country', 'Rap', 'Reggae', 'Classical', 'Folk', 'Electronic']\nvalues = [55, 60, 45, 40, 35, 50, 30, 70, 35, 55]\ncolors = ['#7661eb', '#8a2f81', '#e9d9d8', '#ea8886', '#ee7d19', '#d66893', '#e48da6', '#d72058', '#e48da6', '#7661eb']\nhatches = ['/', '.', '||', '+', '*-', 'o-', '\\\\|', '-', '*', '\\\\']\n\n# Plot\nplt.figure(figsize=(10, 6))\nbars = plt.barh(categories, values, color=colors)\n\n# Add hatch patterns\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Listeners (in millions)')\nplt.title('Music Genre Popularity')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/185.png')\n\nplt.show()\n```\nChoices:['Pop', 'Rock', 'Jazz', 'Blues', 'Country', 'Rap', 'Reggae', 'Classical', 'Folk', 'Electronic']\nStudent's Response:Rock\n",
    "Question Text:\nIs the Trout count greater than the Salmon count in the Fishing category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define and calculate the data\ncategories = ['Fishing']\ntrout = [10]\nsalmon = [15]\nherring = [30]\n\n# the positions of the bars on the x-axis\nbarWidth = 0.9\nr = range(len(categories))\n\n# plot bars\nplt.figure(figsize=(10,6))\nax1 = plt.bar(r, trout, color='#7f6d5f', edgecolor='white', width=barWidth, label='Trout')\nax2 = plt.bar(r, salmon, bottom=trout, color='#557f2d', edgecolor='white', width=barWidth, label='Salmon')\nax3 = plt.bar(r, herring, bottom=[i+j for i,j in zip(trout, salmon)], color='#2d7f5e', edgecolor='white', width=barWidth, label='Herring')\n\nplt.xlabel('Types of fish')\nplt.xticks(r, categories, fontweight='bold')\nplt.ylabel('Count')\nplt.legend()\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/186.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich region has the least percentage of internet usage as per the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Americas', 'Europe', 'Asia', 'Africa', 'Australia/Oceania', 'Middle East', 'Antarctica']\nvalues = [80, 75, 50, 35, 70, 65, 5]\ncolors = ['#bb8b52', '#b49a9d', '#7b698a', '#c52ff2', '#bb8b89', '#bb8b99', '#b49a9f']\nhatches = ['\\\\', '\\\\|', 'o', 'xx', '|', '|*', 'o-']\n\nplt.figure(figsize=(10, 6))\nbars = plt.bar(categories, values, color=colors)\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Regions')\nplt.ylabel('Internet Usage (%)')\nplt.title('Internet Usage by Region')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/187.png')\nplt.show()\n```\nChoices:['Americas', 'Europe', 'Asia', 'Africa', 'Australia/Oceania', 'Middle East', 'Antarctica']\nStudent's Response:Antarctica\n",
    "Question Text:\nDid energy production from solar sources increase from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# create a bar chart with 6 categories\ncategory_names = ['Hydropower', 'Wind', 'Solar', 'Nuclear', 'biomass', 'Natural Gas']\ncolors = ['#0759fd', '#3ab536', '#c8705b', '#65c315', '#d63e62', '#e5d022']\nvalues1 = [30, 40, 20, 45, 35, 55] # Energy production in 2010\nvalues2 = [35, 50, 30, 60, 40, 60] # Energy production in 2020\n\nx = np.arange(len(category_names))\n\nfig, ax = plt.subplots(figsize=(10, 6))\nrects1 = ax.bar(x-0.2, values1, 0.4, color=colors)\nrects2 = ax.bar(x+0.2, values2, 0.4, color=colors)\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Energy Production (in GW)')\nax.set_title('Energy production by source and year')\nax.set_xticks(x)\nax.set_xticklabels(category_names)\nax.legend(['2010', '2020'])\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/189.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich category received more charitable contributions than the 'Environment' category, but less than the 'Human Services' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Education', 'Health', 'Animals', 'Arts', 'Environment', 'Human Services', 'International', 'Public Benefit', 'Religion', 'Human Rights']\nvalues = [35, 50, 45, 40, 55, 60, 40, 30, 55, 65]\ncolors = ['#65b06e', '#added1', '#4eded2', '#22ce7f', '#6d3639', '#ac031f', '#e689bf']\n\nplt.figure(figsize=(10,8))\n\nbar_plot = plt.barh(categories, values, color=colors)\n\nplt.title('Charitable Contributions by Category')\nplt.xlabel('Amount in Millions')\nplt.grid(axis='x')\n\nfor idx,rect in enumerate(bar_plot):\n    plt.text(rect.get_width()-2, \n             idx, \n             str(values[idx]), \n             color='white', \n             ha='right', \n             va='center')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/190.png')\n```\nChoices:['Education', 'Health', 'Animals', 'Arts', 'International', 'Public Benefit', 'Religion', 'Human Rights']\nStudent's Response:Health\n",
    "Question Text:\nIn 2020, did the cumulative units sold of 'Smartphone', 'Feature Phone', and 'Tablet' exceed that of 'Laptop' and 'Desktop'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Phone categories (types of phones) and the units sold in the past 5 years\ncategories = ['Smartphone', 'Feature Phone', 'Tablet', 'Laptop', 'Desktop']\nyears = ['2016', '2017', '2018', '2019', '2020']\nsales = [\n    [30000, 32500, 27500, 25000, 24500],  # Sales for Smartphone\n    [5000, 4500, 3500, 2500, 2000],  # Sales for Feature Phone\n    [15000, 16000, 16000, 15500, 14500],  # Sales for Tablet\n    [25000, 26000, 27000, 25000, 24000],  # Sales for Laptop\n    [20000, 23000, 20000, 17500, 20000],  # Sales for Desktop\n]\n\nfig, ax = plt.subplots()\n\n# We'll accumulate the bottom values as we go\nbottom = [0, 0, 0, 0, 0]\nfor cat, values in zip(categories, sales):\n    ax.bar(years, values, label=cat, bottom=bottom)\n    bottom = [i+j for i, j in zip(bottom, values)]\n\nplt.xlabel('Year')\nplt.ylabel('Units sold (thousands)')\nplt.title('Units sold by type of phone in the past 5 years')\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/191.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs \"Blocks\" the category that has the highest quantity of toys?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ntoys_categories = ['Bikes', 'Dolls', 'Balls', 'Games', 'Puzzles', 'Blocks', 'Crafts', 'Action Figures', 'Robots', 'Vehicle Sets']\ntoys_quantity = [45, 70, 50, 60, 35, 85, 65, 45, 55, 70]\n\ncolors = ['#39f09a', '#1038aa', '#8ffc32', '#39f09a', '#1038aa', '#8ffc32', '#39f09a', '#1038aa', '#8ffc32', '#39f09a']\nhatches = ['*', '++', '-', 'x*', '*', '++', '-', 'x*', '*']\n\nplt.figure(figsize=(12, 7))\nbars = plt.bar(toys_categories, toys_quantity, color=colors)\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n    \nplt.xlabel('Toys Category')\nplt.ylabel('Quantity')\nplt.title('Toy Categories and their Quantities')\nplt.xticks(rotation=45)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/192.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the PC platform has more games than the Xbox platform?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Labels and values\nlabels = ['PC', 'PS4', 'Xbox', 'Nintendo Switch', 'Mobile']\nvalues = [345, 430, 215, 140, 565]\n\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# Creating horizontal bar chart\nax.barh(labels, values, color=['purple', 'blue', 'green', 'orange', 'red'])\nax.set_xlabel('Number of Games (in Millions)')\nax.set_title('Number of Games in Different Platforms')\n\nplt.grid(axis='x')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/193.png')\n\n# Display the figure\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich event happened in a year that starts with digit 1?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Historical Events and their corresponding years\nevents = ['Event 1 (1600)', 'Event 2 (1700)', 'Event 3 (1800)', 'Event 4 (1900)']\nyears = [1600, 1700, 1800, 1900]\n\n# Colors for each event\ncolors = ['#7d8f98', '#a16107', '#05bbd6', '#04f45c']\n\n# Hatches for each event\nhatches = ['x*', '--', '*-', '\\\\\\\\']\n\n# Create Bar Chart\nplt.figure(figsize=[10,8])\nbars = plt.barh(range(len(events)), years, color=colors, hatch=hatches[0])\n\n# Adding hatch patterns to each bar\nfor i, b in enumerate(bars):\n    b.set_hatch(hatches[i])\n\nplt.yticks(range(len(events)), events)\n\nplt.title('Historical Events')\nplt.xlabel('Year')\nplt.ylabel('Event')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/194.png')\n\nplt.show()\n```\nChoices:['Event 1 (1600)', 'Event 2 (1700)', 'Event 3 (1800)', 'Event 4 (1900)']\nStudent's Response:'Event 1 (1600)', 'Event 2 (1700)', 'Event 3 (1800)', 'Event 4 (1900)'\n",
    "Question Text:\nDid Brand B sell more 'Hats' than Brand A?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Shirts', 'Pants', 'Jackets', 'Shoes', 'Hats', 'Socks']\nfashion_brands = ['Brand A', 'Brand B']\nvalues_A = [35, 45, 25, 30, 40, 50]\nvalues_B = [50, 40, 30, 35, 25, 45]\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.bar(x, values_A, width=0.4, color='#d62adf', align='center')\nax.bar(x, values_B, width=0.4, color='#83685c', align='edge')\n\nax.set_xlabel('Fashion Categories')\nax.set_ylabel('Sales (in hundreds)')\nax.set_title('Fashion Category Sales by Brand')\nax.set_xticks(x)\nax.set_xticklabels(categories)\n\nplt.legend(fashion_brands)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/195.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the storage of Computer 1 greater than that of Computer 2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their values\ncategories = ['Storage (GB)', 'RAM (GB)', 'Processor Speed (GHz)', 'Screen Size (In)', 'Battery (Hours)']\nvalues_one = [500, 16, 4, 15, 10]\nvalues_two = [1000, 24, 4.5, 17, 15]\n\nbarWidth = 0.25\n\nr1 = [i for i, _ in enumerate(categories)]\nr2 = [i + barWidth for i in r1]\n\nfig = plt.subplots(figsize =(12, 8))\n\nplt.bar(r1, values_one, color ='#dc0ecb', width = barWidth, edgecolor ='grey')\nplt.bar(r2, values_two, color ='#0ecbdb', width = barWidth, edgecolor ='grey')\n\nplt.xlabel('Computer Specifications', fontweight ='bold', fontsize = 15)\nplt.ylabel('Value', fontweight ='bold', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(categories))], categories)\nplt.legend((\"Computer 1\", \"Computer 2\"))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/196.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes 'Desert' category have the same value in both bars?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Forests', 'Grasslands', 'Drylands', 'Wetlands', 'Mountains', 'Cropland', 'Urban', 'Tundra', 'Desert', 'Glacier']\nvalues_1 = [30, 20, 40, 50, 35, 45, 20, 30, 45, 15]  # Rounded values\nvalues_2 = [35, 25, 50, 55, 45, 40, 30, 35, 40, 20]  # Rounded values\n\nbarWidth = 0.35\ncolors = ['#2d1250', '#deeb15', '#c7354c']\nhatches = ['-', '+o', 'OO', '++', 'x*', '//', '*-', '/', '-\\\\', '\\\\|']\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nrects1 = ax.bar(np.arange(len(categories)), values_1, barWidth, color=colors[0], hatch=hatches[0])\nrects2 = ax.bar(np.arange(len(categories)) + barWidth, values_2, barWidth, color=colors[1], hatch=hatches[1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Land Categories')\nax.set_title('Statistics by land category')\nax.set_xticks(np.arange(len(categories)) + barWidth / 2)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/197.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich sport has the most total participants?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsports = ['Basketball', 'Soccer', 'Baseball']\nmen = [20, 25, 15]\nwomen = [15, 30, 10]\n\nbarWidth = 0.35\n\nfig, ax = plt.subplots(figsize=(12,8))\n\nbar1 = ax.bar(sports, men, color='#f43094', width=barWidth, edgecolor='grey', hatch='O', label='Men')\nbar2 = ax.bar(sports, women, bottom=men, color='#94f430', width=barWidth, edgecolor='grey', label='Women')\n\nax.set_xlabel('Sports')\nax.set_ylabel('Participants')\nax.set_title('Participants in Different Sports')\nax.legend()\n\ndef autolabel(bars):\n    for bar in bars:\n        height = bar.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(bar.get_x() + bar.get_width() / 2, height),\n                    xytext=(0, 3), \n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(bar1)\nautolabel(bar2)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/198.png')\n\nplt.show()\n```\nChoices:['Basketball', 'Soccer', 'Baseball']\nStudent's Response:Soccer\n",
    "Question Text:\nApproximately which mark does the 'Push-ups' category reach in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify the data\ncategories = ['Push-ups']\nvalues = [35]\n\n# Defining the bar colors\nbar_colors = ['#15fbab']\n\n# Creating the horizontal bar chart\nplt.figure(figsize=(10, 5))  # setting the figure size\nplt.barh(categories, values, color=bar_colors)\n\n# Adding titles and labels\nplt.title('Number of Push-ups in Fitness Session')\nplt.xlabel('Number of Push-ups')\nplt.ylabel('Exercise Category')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/199.png')\n\nplt.show()\n```\nChoices:['25', '30', '35', '40', '45']\nStudent's Response:35\n",
    "Question Text:\nWhich crime has seen an increase from 2018 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Murder', 'Rape', 'Robbery', 'Assault', 'Burglary', 'Theft', 'Vehicle Theft', 'Arson']\nvalues = [[20, 25, 40, 35, 30, 60, 50, 15], [30, 35, 20, 25, 50, 75, 60, 20]]\n\nfig, ax = plt.subplots(figsize = (15, 6))\n\nax.bar(categories, values[0], label='2018')\nax.bar(categories, values[1], bottom=values[0], label='2019')\n\nax.set_xlabel('Crime Categories')\nax.set_ylabel('Crime Rate')\nax.set_title('Crime Rates in 2018 and 2019')\nax.legend()\n\nplt.savefig(\"bar_charts/bar_charts_visual_linguistic/train/200.png\")\nplt.show()\n```\nChoices:['Murder', 'Rape', 'Robbery', 'Assault', 'Burglary', 'Theft', 'Vehicle Theft', 'Arson']\nStudent's Response:'Rape', 'Assault', 'Theft'\n",
    "Question Text:\nWhich weather type is experienced in equal number of days in a month according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy', 'Hail', 'Thunderstorm', 'Sleet']\nvalues = [20, 15, 25, 30, 20, 10, 15, 25, 20] \ncolors = ['#3c0e36', '#63fda8', '#647d03', '#f0f1ee', '#b9a171', '#f0f1ee', '#63fda8', '#647d03', '#3c0e36']\nhatches = ['/o', '||', 'o', 'O.', 'oo', 'o', '||', 'oo', '-']\n\nplt.figure(figsize=(10,6))\nbars = plt.bar(categories, values, color=colors)  \nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i])\n\nplt.xlabel('Weather Type')\nplt.ylabel('Days in a month')\nplt.title('Weather in a month')\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/201.png')\n\nplt.show()\n```\nChoices:['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy', 'Hail', 'Thunderstorm', 'Sleet']\nStudent's Response:['Sunny', 'Windy', 'Sleet']\n",
    "Question Text:\nIn which decade was the total global warming indicator (sum of CO2 Levels, Temperature Increase, and Arctic Sea Ice Decline) the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories representing Decades from 190s to 2000s\ncategories = ['1900s', '1910s', '1920s', '1930s', '1940s', '1950s', '1960s', '1970s', '1980s', '1990s', '2000s']\n\n# Random round number values for global warming indicators - in this case, CO2 Levels, Temperature increase, Arctic Sea ice decline\nco2_levels = [250, 255, 260, 270, 275, 290, 310, 325, 350, 370, 385]\ntemp_increase = [0, 0, 0, 5, 10, 15, 20, 25, 30, 35, 40]\nice_decline = [0, 0, 0, 5, 10, 10, 15, 20, 25, 30, 35]\n\n# Colors for the bars\ncolors = ['#6901d6', '#e8cb7e', '#be171d']\n\n# Figure size to accommodate long category titles\nplt.figure(figsize=(10,7))\n\n# Create the bar chart\nplt.bar(categories, co2_levels, color=colors[0])\nplt.bar(categories, temp_increase, bottom=co2_levels, color=colors[1])\nplt.bar(categories, ice_decline, bottom=[co2_levels[j] + temp_increase[j] for j in range(len(co2_levels))], color=colors[2])\n\n# Labels and Titles\nplt.xlabel('Decades')\nplt.ylabel('Global Warming Indicators')\nplt.title('Global Warming Indicators per Decade')\nplt.legend(['CO2 Levels', 'Temperature Increase', 'Arctic Sea Ice Decline'])\n\n# Saving the bar chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/202.png')\nplt.show()\n```\nChoices:['1900s', '1910s', '1920s', '1930s', '1940s', '1950s', '1960s', '1970s', '1980s', '1990s', '2000s']\nStudent's Response:460\n",
    "Question Text:\nIs 'Painkillers' the category with the highest number of prescriptions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Painkillers', 'Antibiotics', 'Antidepressants', 'Vaccines', 'Anesthetics', 'Insulin', 'Antacids']\nvalues = [95, 80, 70, 60, 55, 50, 45]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\ncolors = ['#7045f6', '#32fec8', '#a8f5b0', '#897047', '#876efa', '#12de78', '#e8c5b0']\nhatches = ['/o', 'x']\n\nfor i in range(len(categories)):\n    ax.barh(categories[i], values[i], color=colors[i], hatch=hatches[i % 2])\n\nplt.xlabel('Count of Prescriptions (In thousands)')\nplt.title('Prescription of Different Types of Medicines (Rounded to Nearest Five)')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/203.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the donation amount to Charity Organizations more than $15 million?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Input data\ncategories = ['Charity Organizations']\nvalues = [20]  # Rounded values\nhatches = ['O|']  # Hatches\n\n# Creating a bar chart\nfig, ax = plt.subplots(figsize=(8, 6))\nbars = ax.bar(categories, values, color='lightblue', edgecolor='black', hatch=hatches[0])\n\n# Adding some additional decorations\nplt.title('Donations to Charity Organizations')\nplt.ylabel('Donation Amount (in $ millions)')\n\n# Making sure labels are readable\nfor label in ax.get_xticklabels():\n    label.set_rotation(90)  # Rotating labels 90 degrees to prevent overlap\n\nplt.tight_layout()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/204.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Is the funding for the conservation of Pandas higher than that of Rhinos?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the categories and the data \ncategories = ['Elephants', 'Tigers', 'Rhinos', 'Orangutans', 'Koalas', 'Pandas', 'Leopards']\nfundings = [100, 85, 70, 120, 80, 110, 65] # in millions\nvolunteer_hours = [5000, 4200, 3000, 5900, 4500, 5300, 3200] # in thousands\n\n# Set bar width\nbarWidth = 0.85\n\n# Create Bars\n# Stacked Bars for the Funding: #898273\nplt.bar(categories, fundings, color='#898273', edgecolor='white', width=barWidth)\n\n# Stacked Bars for the Volunteer Hours: #abccff\nplt.bar(categories, volunteer_hours, bottom=fundings, color='#abccff', edgecolor='white', width=barWidth)\n\nplt.xlabel(\"Species\")\nplt.ylabel(\"Resources for Conservation\")\nplt.title(\"Conservation Efforts for Wildlife - Funding (in million $) and Volunteer hours (in thousands)\")\nplt.legend([\"Funding\", \"Volunteer Hours\"])\nplt.xticks(rotation='vertical')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/205.png', bbox_inches=\"tight\")\n\nplt.show()\n\n\nfundings = [100, 85, 70, 120, 80, 110, 65] # in millions\ncategories = ['Elephants', 'Tigers', 'Rhinos', 'Orangutans', 'Koalas', 'Pandas', 'Leopards']\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich game title has the highest sales according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfrom matplotlib import pyplot as plt\n\n# Setting the categories and their values\ngames = ['Mario', 'Zelda', 'Metroid', 'Star Fox']\nsales = [50, 40, 35, 45]\n\n# Adjusting the size of the figure\nplt.figure(figsize=[10,5])\n\n# Creating the bar chart\nplt.bar(games, sales, color='#cbf0af')\n\n# Adding labels\nplt.xlabel('Game Titles')\nplt.ylabel('Millions of Units Sold')\nplt.title('Top Nintendo Games Sales')\n\n# Saving the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/206.png')\nplt.show()\n```\nChoices:['Mario', 'Zelda', 'Metroid', 'Star Fox']\nStudent's Response:Mario\n",
    "Question Text:\nIs the Distance Travelled by Air greater than that Travelled by Bus?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\ntravel_modes = ['air', 'train', 'bus']\ndistance_travelled = [50, 30, 20]\nfigure_size = (10, 5)\nhatches = ['..']\n\nfig, ax = plt.subplots(figsize=figure_size)\n\nax.bar(travel_modes, distance_travelled, tick_label=travel_modes, \n    hatch=hatches[0], align='center', color=['#5cb85c', '#5bc0de', '#d9534f'])\n\nax.set_xlabel('Modes of Travel')\nax.set_ylabel('Distance Travelled (in 1000s of km)')\nax.set_title('Distance Travelled by Different Modes of Travel')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/207.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Information Security' the most popular computer science category among students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# setup x-axis labels and data\ncategories = ['Computer Systems', 'Programming & Analysis', 'Networks', 'Database Management', 'Artificial Intelligence', 'Software Engineering', 'Information Security']\nvalues = [20, 45, 30, 50, 35, 40, 55]\n\n# create bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nax.bar(categories, values, color=['#872455', '#808602', '#0bb367', '#69f244', '#872455', '#808602', '#0bb367'])\n\n# add title and labels\nax.set_title('Popularity of Computer Science Categories')\nax.set_xlabel('Categories')\nax.set_ylabel('Number of Students Interested')\n\n# save the plot\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/208.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAccording to the chart, how many more sparrow birds were sighted in summer than in winter?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define a function to generate a bar chart\ndef create_bar_chart(categories, values1, values2, bar_width, opacity, chart_title, x_label, y_label, legend_labels, file_name):\n\n    # Creating the figure\n    fig = plt.figure(figsize=(10, 5))\n\n    # Creating the bar chart\n    index = np.arange(len(categories))\n    bars1 = plt.bar(index, values1, bar_width, alpha=opacity, color='b', label=legend_labels[0])\n    bars2 = plt.bar(index + bar_width, values2, bar_width, alpha=opacity, color='r', label=legend_labels[1])\n\n    plt.xlabel(x_label)\n    plt.ylabel(y_label)\n    plt.title(chart_title)\n    plt.xticks(index + bar_width / 2, categories)\n\n    # Adding the legend\n    plt.legend()\n\n    # Saving the figure\n    plt.savefig(file_name)\n\n    plt.show()\n\n# Calling the function to generate a graph based on the following data\ncategories = ['Eagle', 'Falcon', 'Dove', 'Sparrow', 'Penguin']\nbird_sightings_summer = [20, 30, 35, 50, 15]\nbird_sightings_winter = [10, 5, 45, 35, 25]\ncreate_bar_chart(categories, bird_sightings_summer, bird_sightings_winter, 0.35, 0.8, 'Bird Sightings', 'Bird Species', 'Number of Sightings', ['Summer', 'Winter'], 'bar_charts/bar_charts_visual_linguistic/train/210.png')\n```\nChoices:['5', '15', '10', '20']\nStudent's Response:15.\n",
    "Question Text:\nWhich language has a total of about 1750 million speakers and learners combined?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nlanguages = ['English', 'French', 'Spanish']\nspeakers = [750, 220, 460]  # in millions\nlearners = [1000, 150, 420]  # in millions\n\n# Create bar plot\nfig, ax = plt.subplots(figsize=(10, 6))\nbar1 = ax.bar(languages, speakers, color='#cd6536', edgecolor='black')\nbar2 = ax.bar(languages, learners, bottom=speakers, color='#50a610', edgecolor='black')\n\n# Add labels, title, and legend\nax.set_ylabel('Number of People (in millions)')\nax.set_xlabel('Languages')\nax.set_title('Number of Speakers and Learners of Different Languages')\nax.legend([bar1, bar2], ['Native Speakers', 'Learners'], loc='upper right')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/211.png')\n\nplt.show()\n```\nChoices:['English', 'French', 'Spanish']\nStudent's Response:English.\n",
    "Question Text:\nDid the Democrats get more votes than the Republicans in the 2020 Election according to this graph?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlabels = ['2020 Election']\ndemocrats_votes = [70]\nrepublicans_votes = [75]\ncolors = ['#b5bc92', '#db7c67']\n\nfig, ax = plt.subplots(figsize=[10, 5])\n\nax.bar(labels, democrats_votes, color=colors[0], label='Democrats')\nax.bar(labels, republicans_votes, color=colors[1], bottom=democrats_votes, label='Republicans')\n\nax.set_ylabel('Votes in Millions')\nax.set_title('Votes by Political Party in the 2020 Election')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/213.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nBased on the grouped bar chart, which architectural style has the least number of monuments in Asia?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Renaissance', 'Baroque', 'Neoclassical', 'Romanticism', 'Modernism', 'Postmodernism', 'Deconstructivism', 'Sustainable', 'Expressionism', 'Brutalism']\nvalues1 = [50, 35, 40, 45, 65, 55, 60, 70, 45, 50]\nvalues2 = [40, 30, 55, 60, 50, 65, 55, 65, 50, 60]\nbarWidth = 0.35\n\nr1 = range(len(categories))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=[15,8])\n\nplt.bar(r1, values1, color='#914268', width=barWidth, edgecolor='grey', hatch='O', label='Asia')\nplt.bar(r2, values2, color='#549f27', width=barWidth, edgecolor='grey', hatch='+', label='Europe')\n\nplt.xlabel('Architectural Styles', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(categories))], categories)\nplt.ylabel('Number of Monuments')\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/214.png')\nplt.show()\n```\nChoices:['Renaissance', 'Baroque', 'Neoclassical', 'Romanticism', 'Modernism', 'Postmodernism', 'Deconstructivism', 'Sustainable', 'Expressionism', 'Brutalism']\nStudent's Response:Baroque\n",
    "Question Text:\nHow many more medium dogs were there in 2020 compared to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Small Dogs', 'Medium Dogs']\nvalues_2019 = [50, 70] # rounded to multiples of 10\nvalues_2020 = [55, 75] # rounded to multiples of 10\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nbar = ax.bar(categories, values_2019, color='#13a8d1', label='2019')\nax.bar(categories, values_2020, color='#847ad1', bottom=values_2019, label='2020')\n\nax.set_xlabel('Dog Sizes')\nax.set_ylabel('Number of Dogs')\nax.set_title('Number of Dogs in 2019 and 2020 by Size')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/215.png')\nplt.show()\n```\nChoices:[0, 5, 10, 15, 20]\nStudent's Response:5\n",
    "Question Text:\nWhich type of forestry program in the 'North Forest' has the least investment?\nFigure Code:\n```\n# required modules\nimport matplotlib.pyplot as plt\n\n# data\ncategories = ['Hardwood Exploration', 'Softwood Exploration', 'Forest Restoration', 'Wildlife Conservation']\nvalues = [[20, 15, 25, 20], [30, 25, 35, 25], [25, 20, 35, 30], [35, 30, 40, 40]]\ncolors = ['#0b76a2', '#c9bce3', '#349101', '#9ddaf7']\nlabels = ['North Forest', 'South Forest', 'East Forest', 'West Forest']\n\n# chart size\nplt.figure(figsize=(10,7))\n\n# create stacked bar chart\nbottom = [0, 0, 0, 0]\nfor i in range(4):\n    plt.bar(labels, values[i], width=0.5, bottom=bottom, color=colors[i], label=categories[i])\n    bottom = [i + j for i,j in zip(bottom,values[i])]\n\nplt.ylabel('Millions of Dollars')\nplt.title('Investment in different types of Forestry programs')\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/217.png')\nplt.show()\n```\nChoices:['Hardwood Exploration', 'Softwood Exploration', 'Forest Restoration', 'Wildlife Conservation']\nStudent's Response:Hardwood Exploration  \n",
    "Question Text:\nAre there more unmanned space missions than manned ones?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for the bars\ny_values = [20, 45]\n\n# Categories for the bars\ncategories = ['Manned missions', 'Unmanned missions']\n\n# Creating the bar chart\nplt.figure(figsize=(10,6))\nbars = plt.bar(categories, y_values, color='#2fa660')\n\n# Annotating the bars\nfor bar in bars:\n    y_val = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2, y_val + 1, y_val, ha='center', va='bottom')\n\n# Setting up labels\nplt.xlabel('Type of Mission')\nplt.ylabel('Number of Missions')\nplt.title('Number of Manned vs Unmanned Space Missions')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/218.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIf the bookstore has 30 more books and the fraction of fiction and non-fiction books remain the same, how many more fiction books would be there compared to the current scenario?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Books']\nfiction = [55]\nnon_fiction = [45]\n\nbarWidth = 0.35\nfig, ax = plt.subplots(figsize=(10,7))\n\n# Create fiction Bars\nax.bar(categories, fiction, color='#b5ffb9', edgecolor='grey', width=barWidth)\n# Stack non fiction Bars\nax.bar(categories, non_fiction, bottom=fiction, color='#f9bc86', edgecolor='grey', width=barWidth)\n\nplt.ylabel(\"Number of Books\")\nplt.title(\"Number of Fiction and Non-Fiction Books\")\nplt.legend([\"Fiction\", \"Non Fiction\"])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/219.png')\nplt.show()\n```\nChoices:[5, 10, 15, 20]\nStudent's Response:2\n",
    "Question Text:\nIs 'Personal Car' the transportation type with the most number of users according to the bar chart?\nFigure Code:\n```\n#Importing required libraries\nimport matplotlib.pyplot as plt\n\n#Assigning categories\ncategories = ['Air Travel', 'Water Travel', 'Rail Travel', 'Bus Travel', 'Personal Car', 'Bicycle']\n\n#Assigning values\nvalues = [30, 35, 40, 45, 50, 55]\n\n#Assigning colors\ncolors = ['#2527d9', '#ca3ba0', '#8d6402', '#301dc4', '#1ec53f', '#86bf3d']\n\n#Creating bar chart\nfig, ax = plt.subplots(figsize=(10,5)) #figsize is set to sufficiently large to avoid word overlap\n\nfor i in range(len(categories)):\n    plt.bar(categories[i], values[i], color=colors[i])\n\n#Setting chart title and labels\nplt.xlabel('Types of Transportation')\nplt.ylabel('Number of Users (in thousands)')\nplt.title('Poll on Transportation Types')\n\n#Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/221.png', bbox_inches='tight')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich sector is contributing the most to the economy?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Banking', 'IT', 'Manufacturing', 'Healthcare']\nvalues = [55, 65, 60, 45]\ncolors = ['#1bc677', '#44b464', '#f88d32', '#1c77c3']\n\nplt.figure(figsize=(10, 5))  # Make the figure large enough\nbars = plt.bar(categories, values, color=colors) # Using the required colors\nplt.ylabel('Contribution to Economy (%)')  # Y-axis label\nplt.title('Sectors Contribution to Economy')  # Title of the chart\n\nfor bar, val in zip(bars, values):\n    plt.text(bar.get_x() + bar.get_width() / 2, bar.get_height() - 5, str(val), ha='center', va='top', color='white')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/222.png')\nplt.show()\n```\nChoices:['Banking', 'IT', 'Manufacturing', 'Healthcare']\nStudent's Response:'IT'\n",
    "Question Text:\nDuring which historical event did men experience the highest number of something according to the chart?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data creation\ncategories = ['World War I', 'Great Depression', 'World War II', 'Cold War', 'Space Race', 'Vietnam War', 'Fall of Berlin Wall', 'Digital Age']\nn_categories = len(categories)\n\nmen_values = np.array([15, 20, 25, 20, 25, 35, 15, 20])\nwomen_values = np.array([20, 25, 20, 15, 25, 20, 20, 25])\n\n# Size adjustment for readability\nfig, ax = plt.subplots(figsize=(10,10))\n\n# Bars creation\np1 = ax.bar(categories, men_values, color='#94b643')\np2 = ax.bar(categories, women_values, bottom=men_values, color='#aefe9a')\n\nax.set_ylabel('No. of Events')\nax.set_title('Historical Events')\nax.legend((p1[0], p2[0]), ('Men', 'Women'))\n\n# Auto-save as requested\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/223.png')\n\nplt.show()\n```\nChoices:['World War I', 'Great Depression', 'World War II', 'Cold War', 'Space Race', 'Vietnam War', 'Fall of Berlin Wall', 'Digital Age']\nStudent's Response:'Vietnam War'\n",
    "Question Text:\nIs Python the most popular language according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nlanguages = ['Python', 'Java', 'HTML/CSS', 'Javascript', 'C']\npopularity = [75, 60, 55, 45, 40]\ncolors = ['#e8a187', '#f1ebea', '#e8a187', '#f1ebea', '#e8a187']\nhatches = ['x*', '--', '\\\\\\\\', '', '']\n\nbar_containers = plt.barh(languages, popularity, color=colors, edgecolor='black')\nfor bars, hatch in zip(bar_containers.patches, hatches):\n    bars.set_hatch(hatch)\n\nax.set_xlabel('Popularity')\nax.set_title('Popularity of Languages')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/224.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich advertising channel has the second highest advertising expenditure?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and corresponding values\ncategories = ['Television', 'Radio', 'Newspaper', 'Online']\nvalues = [80, 45, 25, 70] \n\n# Create the figure with a suitable size\nplt.figure(figsize=(10, 6))\n\n# Create the bar chart\nplt.barh(categories, values, color ='maroon', height = 0.6)\n\n# Label the x-axis and title\nplt.xlabel('Advertising Expenditure (in $1000s)')\nplt.title('Expenditure on Different Advertising Channels')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/225.png')\n\n# Show the plot \nplt.show()\n```\nChoices:['Television', 'Radio', 'Newspaper', 'Online']\nStudent's Response:Online\n",
    "Question Text:\nIs the price of terraced houses higher than the price of detached houses?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n  \ncategories = ['Detached houses', 'Semi-detached houses', 'Terraced houses', 'Flats', \n              'Bungalows', 'Cottages', 'Penthouses']\nvalues = [45, 60, 75, 50, 55, 65, 70]\ncolors = ['#10ab89', '#2e7857', '#dff129', '#ff1234', '#abcd12', '#fabc10', '#123456']\nhatches = ['--', 'O|', 'OO', '\\\\', 'o-', '\\\\\\\\', '-']\n\nplt.figure(figsize=(10, 6))\n\nbars = plt.bar(categories, values, color=colors)\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel(\"Types of Houses\")\nplt.ylabel(\"Price in $K\")\nplt.title(\"Comparison of Real Estate Prices by House Type\")\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/226.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhat is the total advertising spend for Google and Twitter together?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their respective values\nadvertising_channels = ['Facebook', 'Google', 'Twitter', 'Instagram', 'LinkedIn', 'YouTube']\nvalues = [30, 55, 40, 20, 35, 15]\n\n# Bar colors and hatches\ncolors = ['#492bd9', '#5f5cb3', '#202bc6', '#365f72', '#23fc2d', '#e89bea']\nhatches = ['o', '|*', '\\\\\\\\', '\\\\\\\\', 'o', '|*']\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create horizontal bar chart\nbars = plt.barh(advertising_channels, values, color=colors)\nfor i in range(6):\n    bars[i].set_hatch(hatches[i])\n\n# Set labels\nplt.xlabel('Advertising Spend (in $1,000s)')\nplt.ylabel('Advertising Channels')\nplt.title('Different Advertising Channels and their Spend')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/227.png')\n\nplt.show()\n```\nChoices:[70, 75, 95, 100]\nStudent's Response:95\n",
    "Question Text:\nBased on the bar chart, which category has the greatest increase in the number of missions from 2000s to 2010s?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Satellite Deployments', 'Manned missions', 'Unmanned missions', 'Space Stations', 'Space Telescopes', 'Lunar missions', 'Mars missions', 'Research Missions', 'Astrobiology', 'Interstellar']\nvalues1 = [25, 40, 70, 10, 35, 15, 5, 60, 15, 2]\nvalues2 = [30, 50, 65, 15, 40, 20, 10, 55, 20, 2]\ncolors = ['#e4161a', '#cf458c', '#92abc2', '#bd109f', '#da0f37', '#47c9ba', '#eccdf1', '#9ef024', '#a53491', '#f4f057']\n\nbarWidth = 0.35\nr1 = range(len(categories))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(15,7))\n\nplt.bar(r1, values1, color=colors, width=barWidth, edgecolor='grey', label='2000s')\nplt.bar(r2, values2, color=colors, width=barWidth, edgecolor='grey', label='2010s')\n\nplt.xlabel('Space Exploration Categories', fontweight='bold')\nplt.ylabel('No.of Missions', fontweight='bold')\n\nplt.title('Space Exploration Comparison between 2000s and 2010s')\nplt.xticks([r + barWidth for r in range(len(values1))], categories)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/228.png')\nplt.show()\n```\nChoices:['Satellite Deployments', 'Manned missions', 'Unmanned missions', 'Space Stations', 'Space Telescopes', 'Lunar missions', 'Mars missions', 'Research Missions', 'Astrobiology', 'Interstellar']\nStudent's Response:Manned missions\n",
    "Question Text:\nBased on the Bar chart, which type of energy source had a decrease in consumption from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom matplotlib import patches\nimport numpy as np\n\n# Data\ncategories = ['Renewable Energy', 'Non-Renewable Energy']\nvalues1 = [60, 70]\nvalues2 = [80, 60]\n\nind = np.arange(len(categories))  \nwidth = 0.35  \n\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Create bar plots.\nrects1 = ax.bar(ind - width/2, values1, width, \n                color = '#b70c29',\n                hatch ='oo',\n                label='2015')\nrects2 = ax.bar(ind + width/2, values2, width,\n                color = '#f0fa0e',\n                hatch ='+',\n                label='2020')\n\n# Add x and y axis labels.\nax.set_ylabel('Energy Consumption (in Million BTUs)')\nax.set_xlabel('Types of Energy Sources')\nax.set_title('Comparison of energy consumption for different types of Energy sources')\nax.set_xticks(ind)\nax.set_xticklabels(categories)\n\n# Add a legend\nax.legend()\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/229.png') \nplt.show()\n```\nChoices:['Renewable Energy', 'Non-Renewable Energy', 'Both', 'Neither']\nStudent's Response:Non-Renewable Energy\n",
    "Question Text:\nWhich department, according to the bar chart, treats the highest number of patients?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(12,9))\n\n# Categories and their corresponding round values\ncategories = ['Vaccination', 'Oncology', 'Cardiology', 'Orthopaedics', 'Neurology', 'Paediatrics', 'Ophthalmology', 'Gastroenterology', 'Dermatology']\nvalues = [85, 70, 90, 55, 80, 75, 60, 70, 85]\n\n# Colors and hatches\ncolors = ['#0ad437', '#57567b', '#c28636', '#b91c52', '#a6fec8', '#288b41', '#442e56', '#3e4b97']\nhatches = ['..', '+', 'OO', '.', 'x', '..', '/', '\\\\']\n\ny_pos = range(1,len(categories)+1)\n\nbars = ax.barh(y_pos, values, align='center', color=colors, edgecolor='black')\nax.set_yticks(y_pos)\nax.set_yticklabels(categories)\nax.invert_yaxis()\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\nplt.xlabel('Number of Patients')\nplt.title('Number of Patients by Department')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/230.png')\n\nplt.show()\n```\nChoices:['Oncology', 'Cardiology', 'Orthopaedics', 'Vaccination', 'Ophthalmology', 'Gastroenterology', 'Dermatology', 'Paediatrics', 'Neurology']\nStudent's Response:Cardiology.\n",
    "Question Text:\nAre there more male than female employees in the 'Agriculture' sector?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Agriculture', 'Healthcare', 'IT']\nvalues1 = [55, 100, 75]\nvalues2 = [45, 80, 25]\n\n# Create the bar chart\nbarWidth = 0.85\nplt.figure(figsize=(10, 6))\nplt.bar(categories, values1, color='#bd69f3', edgecolor='grey', width=barWidth, label='Male')\nplt.bar(categories, values2, bottom=values1, color='#22d653', edgecolor='grey', width=barWidth, label='Female')\n\n# Adding extra features\nplt.xlabel('Employed Sectors', fontweight='bold', fontsize=15)\nplt.ylabel('Number of Employees', fontweight='bold', fontsize=15)\nplt.xticks(categories, fontweight='bold', fontsize=15, rotation=25)\nplt.legend(loc='upper right')\nplt.title('Number of Employed Persons in Different Sectors by Gender')\n\n# Save figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/232.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Positive' opinion greater than 'Neutral' and 'Negative' opinions combined in the Public Opinion Polls towards Climate Change?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data to plot\ncategories = ['Public Opinion Polls']\npositive = [45]\nneutral = [30]\nnegative = [25]\n\n# figure size\nplt.figure(figsize=(10, 3))\n\n# creating the bar chart\np1 = plt.barh(categories, positive, color='#46c066')\np2 = plt.barh(categories, neutral, left=positive, color='#f9d56e')\np3 = plt.barh(categories, negative, left=[i+j for i,j in zip(positive, neutral)], color='#eb4d4b')\n\n# Adding labels\nplt.xlabel('Percentage')\nplt.title('Public Opinion Polls towards Climate Change')\n\nplt.yticks(categories)\nplt.legend((p1[0], p2[0], p3[0]), ('Positive', 'Neutral', 'Negative'))\n\nplt.tight_layout()\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/233.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the count of the 'GPU' category the highest compared to any other category in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['RAM','HDD','CPU','GPU','Monitor']\nvalues = [60,30,90,120,75]\n\nbar_colors = ['#dccc37', '#29ea35', '#395e09', '#7f6228', '#7f6228']\nhatches = ['x*', '/o', '.', '\\\\\\\\']\n\nplt.figure(figsize=(10, 5))\nbars = plt.barh(categories,values, color=bar_colors, edgecolor='black')\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i%len(hatches)])\n\nplt.xlabel('Counts')\nplt.title('Computer Components')\nplt.grid(axis='x')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/234.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat does the chart indicate as the most severe environmental issue based on the given severity index?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories and their values\ncategories = ['Deforestation', 'Air Pollution', 'Water Pollution', 'Climate Change', 'Endangered Species', 'Waste Management']\nvalues = [85, 70, 75, 80, 65, 90]\ncolors = ['#818d19', '#2a0c75', '#279a05', '#5de82b', '#63bd65', '#a3ac31']\n\n# Create bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(categories, values, color = colors)\n\n# Set Y-Axis limits to show round number\nplt.ylim(0,100)\n\n# Label the chart\nplt.title('Environmental Issues')\nplt.xlabel('Categories')\nplt.ylabel('Severity Index')\nplt.grid(True)\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/235.png')\nplt.show()\n```\nChoices:['Deforestation', 'Air Pollution', 'Water Pollution', 'Climate Change', 'Endangered Species', 'Waste Management']\nStudent's Response:'Waste Management'\n",
    "Question Text:\nIn which year the sales of Laptop was maximum?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Desktop', 'Laptop', 'Tablet', 'Smartphone', 'Server', 'Workstation']\nvalues_2019 = [30, 40, 25, 70, 20, 15]\nvalues_2020 = [35, 50, 30, 75, 22, 18]\nvalues_2021 = [40, 55, 35, 80, 25, 20]\n\nx = range(len(categories))\n\n# Create the bar chart\nplt.figure(figsize=(12, 8))\n\nbar1 = plt.bar(x, values_2019, color='#7c8f39', hatch='*-')\nbar2 = plt.bar(x, values_2020, bottom=values_2019, color='#9c43d6', hatch='*-')\nbar3 = plt.bar(x, values_2021, bottom=[i+j for i,j in zip(values_2019, values_2020)], color='#5d16a8', hatch='*-')\n\n# Labels and title\nplt.ylabel('Sales (in thousand units)')\nplt.title('Computer Sales (2019-2021)')\nplt.xticks(x, categories, rotation='vertical')\nplt.legend((bar1[0], bar2[0], bar3[0]), ('2019', '2020', '2021'), loc='upper left')\n\n# Save the figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/236.png')\nplt.show()\n```\nChoices:['2019', '2020', '2021']\nStudent's Response:'2021'\n",
    "Question Text:\nWhat category has 30 books?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Mystery', 'Romance', 'Thriller', 'Biography', 'Fantasy', 'History', 'Science Fiction', 'Children\\'s Books']\nvalues = [15, 30, 20, 25, 40, 35, 30, 45]\n\ncolors = ['#4700b4', '#4b6806', '#c6d2f6', '#d17762', '#c5a3b7', '#d17762', '#c5a3b7', '#4700b4']\n\nfig, ax = plt.subplots(figsize=[12,8])\n\nax.barh(categories, values, color=colors)\nax.set_xlabel('Number of Books')\nax.set_title('Number of Books by Category')\n\nplt.grid(axis = 'x', linestyle = '--', linewidth = 0.5)\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/237.png')\nplt.show()\n```\nChoices:['Mystery', 'Romance', 'Thriller', 'Biography', 'Fantasy', 'History', 'Science Fiction', \"Children's Books\"]\nStudent's Response:'Romance', 'Science Fiction'\n",
    "Question Text:\nDoes the 'Romantic Novels' category has the minimum number of books?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Books data\ncategories = ['Romantic Novels', 'Thriller Novels', 'Biographies']\nvalues = [20, 25, 15]\ncolors = ['#97c5b4', 'r', 'b']\nhatches = ['xx', 'OO', '']\n\n# Create bar chart\nplt.figure(figsize=(10, 6))\nbars = plt.barh(categories, values, color=colors, edgecolor='black')\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Add data labels\nfor index, value in enumerate(values):\n    plt.text(value, index,\n             str(value))\n\nplt.xlabel('Number of Books')\nplt.ylabel('Categories')\nplt.title('Number of Different Categories of Books')\nplt.grid(axis='x')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/239.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs Agricultural Land more than Residential Land?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Agricultural Land', 'Residential Land']\nvalues = [60, 20]\n\n# Bar chart settings\nbar_width = 0.35\nopacity = 0.8\ncolor = '#c5b4ac'\n\n# Creating subplots\nfig, ax = plt.subplots(figsize=(10,7))\n\n# Creating bar chart\nbar = plt.bar(categories, values, bar_width, alpha=opacity, color=color)\n\n# Adding labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Land Types')\nax.set_ylabel('Percentage (%)')\nax.set_title('Percentage Distribution of Land Types')\nplt.grid(True)\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/241.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of Villas more than number of Flats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = [\"Detached\", \"Semi-Detached\", \"Terraced\", \"Flat\", \"Bungalow\", \"Cottage\", \"Maisonette\", \"Villa\", \"Duplex\"]\nvalues = [65, 70, 60, 40, 75, 70, 55, 85, 50]\ncolors = ['#8be41a', '#19e3b1', '#5ea8e4', '#cd79e3', '#e379c9', '#e37979', '#e3ad79', '#bbe379', '#79e38e'] # included more colors for diversity\n\n# Create bar chart\nplt.figure(figsize=[10, 6])\nplt.barh(categories, values, color=colors)\nplt.xlabel(\"Number of Houses (In thousands)\")\nplt.title(\"Types of Housing\")\nplt.grid(axis='x')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/243.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Interest' the least source of income in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data to be plotted\ncategories = ['Salary', 'Business', 'Dividends', 'Interest', 'Rentals', 'Royalties', 'Pensions', 'Annuities']\nvalues = [45, 115, 50, 25, 30, 75, 35, 50]\n\ncolors = ['#5fc49c', '#5fc49c', '#7a1133', '#3376f6', '#c8a3d4', '#3446aa', '#33aa11', '#930bd1']\nhatches = ['**', '+o', 'o-', 'O.', '\\\\', '*', '--']\n\nplt.figure(figsize=[15,8])\n\nbars = plt.bar(categories, values, color=colors, hatch=hatches[0])\nfor i,thisbar in enumerate(bars.patches):\n    thisbar.set_hatch(hatches[i % len(hatches)])\n\nplt.xlabel('Income Source')\nplt.ylabel('Income ($ in Thousands)')\nplt.title('Income from Different Sources')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/244.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich area has the largest Green Land cover?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Urban Area', 'Military Area', 'Forest Area', 'Water bodies']\nvalues1 = [10, 15, 40, 25]  # Green Land\nvalues2 = [30, 20, 10, 5]  # Developed Land\nvalues3 = [15, 15, 25, 25]  # Undeveloped Land\nvalues4 = [45, 50, 25, 45]  # Agriculture Land\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Stacked Bar Chart\nax.bar(categories, values1, color='#617f30', hatch='||')\nax.bar(categories, values2, bottom=values1, color='#1fa0b6', hatch='||')\nax.bar(categories, values3, bottom=[i+j for i,j in zip(values1, values2)], color='#9188a4', hatch='||')\nax.bar(categories, values4, bottom=[i+j+k for i,j,k in zip(values1, values2, values3)], color='#c8c787', hatch='||')\n\nax.set_ylabel('Square Kilometers (Thousands)')\nax.set_title('Type of Land cover for different areas')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/245.png')\nplt.show()\n```\nChoices:['Urban Area', 'Military Area', 'Forest Area', 'Water bodies']\nStudent's Response:'Forest Area'\n",
    "Question Text:\nWhich space exploration activity saw the largest increase from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# specify the figure size\nplt.figure(figsize=(10,7))\n\n# category names\ncategories = ['Satellite Launches', 'Manned Missions', 'Interplanetary Probes', 'Telescopes Deployed']\n\n# yearly data\ndata_2020 = [45, 10, 15, 20]\ndata_2021 = [50, 15, 20, 25]\n\n# bar width\nbar_width = 0.35\n\n# colors\ncolors = ['#59655e', '#3544ce', '#c2d75d', '#3a103e']\n\n# hatches\nhatches = ['\\\\\\\\', '|*', '/o', '']\n\n# bar positions for each category\nbar_pos_2020 = [i for i in range(len(categories))]\nbar_pos_2021 = [i + bar_width for i in bar_pos_2020]\n\n# plot bars\nbars_2020 = plt.bar(bar_pos_2020, data_2020, color=colors, width=bar_width, edgecolor='grey', hatch=hatches[0], label='2020')\nbars_2021 = plt.bar(bar_pos_2021, data_2021, color=colors, width=bar_width, edgecolor='grey', hatch=hatches[1], label='2021')\n\n# adding legends\nplt.legend()\n\n# adding labels for x-axis, y-axis and graph title\nplt.xlabel('Space Exploration Activities')\nplt.ylabel('Number of Events')\nplt.title('Comparison of Space Exploration Activities in 2020 and 2021')\n\n# setting x-axis ticks and labels\nplt.xticks([r + bar_width/2 for r in bar_pos_2020], categories)\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/247.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Satellite Launches', 'Manned Missions', 'Interplanetary Probes', 'Telescopes Deployed']\nStudent's Response:Satellite Launches\n",
    "Question Text:\n\"How much more travellers visited Japan compared to Italy in 2020?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify values and labels\ncountries = ['Italy', 'Japan']\ntravellers = [20, 30]\n\n# Create bar chart\nplt.figure(figsize=(10,5))\nplt.barh(countries, travellers, color=['#fa1f5e', '#076f38'])\nplt.xlabel('Number of Travellers (In millions)')\nplt.ylabel('Countries')\nplt.title('Number of Travellers Visiting Countries in 2020')\nplt.xticks(range(0,35,5)) # axis marks every 5 numbers\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/248.png')\n\nplt.show()\n```\nChoices:[0, 5, 10, 15]\nStudent's Response:10\n",
    "Question Text:\nIn the health factors represented in the bar chart, which has the highest relative importance for the elderly group?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Diet', 'Exercise', 'Sleep', 'Stress', 'Pollution', 'Smoking', 'Alcohol', 'Body Mass', 'Age']\nmen = [45, 50, 55, 60, 65, 70, 60, 45, 50]\nwomen = [35, 40, 50, 55, 55, 60, 55, 40, 45]\nelderly = [65, 60, 70, 75, 75, 80, 75, 65, 70]\n\nx = range(len(categories))\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.bar(x, men, width=0.2, color='#408b51', align='center')\nax.bar(x, women, width=0.2, color='#92752c', align='edge')\nax.bar(x, elderly, width=0.2, color='#28b7a6', align='edge')\n\n# Labeling\nax.set_ylabel('Relative Importance (%)')\nax.set_title('Relative Importance of Health Factors')\nax.set_xticks(x)\nax.set_xticklabels(categories)\n\n# Savefig\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/249.png')\n```\nChoices:['Diet', 'Exercise', 'Sleep', 'Stress', 'Pollution', 'Smoking', 'Alcohol', 'Body Mass', 'Age']\nStudent's Response:Smoking\n",
    "Question Text:\n: Which movie has an Audience rating of 75?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data initialization\nmovies = ['Movie_1', 'Movie_2', 'Movie_3', 'Movie_4', 'Movie_5']\naudience_ratings = [85, 65, 70, 90, 75]\ncritic_ratings = [70, 80, 60, 65, 90]\nscores_imdb = [78, 84, 69, 90, 80]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nbarWidth = 0.25\n\n# Set positions of bar on X axis\nbr1 = [i for i in range(len(audience_ratings))] \nbr2 = [i + barWidth for i in range(len(critic_ratings))]\nbr3 = [i + 2*barWidth for i in range(len(scores_imdb))]\n\n# Creating the bar plot\nax.bar(br1, audience_ratings, color ='#3feca3', width = barWidth, label='audience_ratings')\nax.bar(br2, critic_ratings, color ='#2ed062', width = barWidth, label='critic_ratings')\nax.bar(br3, scores_imdb, color ='#029017', width = barWidth, label='IMDB_scores')\n\n# Adding xticks  \nplt.xlabel('Movies', fontweight ='bold')\nplt.ylabel('Ratings', fontweight ='bold')\nplt.title('Ratings of Movies')\nax.set_xticks([r + barWidth for r in range(len(audience_ratings))], )\nax.set_xticklabels(movies)\n\nplt.legend()\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/250.png')\nplt.show()\n```\nChoices:['Movie_1', 'Movie_2', 'Movie_3', 'Movie_4', 'Movie_5']\nStudent's Response:\"Movie_5\"\n",
    "Question Text:\nWhat income does an artist profession yield according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nincomes = [50, 80, 95, 85, 65, 90, 75]\nlabels = ['Engineering', 'Medical', 'Legal', 'Architect', 'Teaching', 'Business', 'Arts']\n# Rounding incomes to nearest 5\nrounded_incomes = [round(num/5)*5 for num in incomes]\n\n# Plot\nplt.figure(figsize=(10,7)) # to avoid label overlapping\nbars = plt.bar(labels, rounded_incomes, hatch='||')\nplt.xlabel('Occupation')\nplt.ylabel(\"Income in $'000\")\nplt.title('Income by Occupation')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/251.png')\nplt.show()\n```\nChoices:[75, 80, 85, 95]\nStudent's Response:75\n",
    "Question Text:\nIn what fashion category did Brand A and B have the highest combined sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Fashion categories and their values\ncategories = ['Shirts', 'Pants', 'Shoes', 'Accessories', 'Dresses', 'Tops', 'Denim', 'Coats', 'Sweatshirts']\nvalues_1 = [20, 30, 15, 40, 25, 35, 45, 20, 35]\nvalues_2 = [10, 15, 20, 30, 25, 20, 15, 25, 20]\n\nx = range(len(categories))\n\nplt.figure(figsize=(10,8))\n\n# Stacked bar chart\nplt.bar(x, values_1, color='#a07b1b', label='Brand A')\nplt.bar(x, values_2, color='#076e50', bottom=values_1, label='Brand B')\n\nplt.xlabel('Fashion Categories')\nplt.ylabel('Sales in $K')\nplt.title('Fashion Sales by Categories for Brand A and B')\n\nplt.xticks(x, categories, rotation=30)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/252.png')\n\nplt.show()\n```\nChoices:['Shirts', 'Pants', 'Shoes', 'Accessories', 'Dresses', 'Tops', 'Denim', 'Coats', 'Sweatshirts']\nStudent's Response:Denim\n",
    "Question Text:\nDid the Internet usage in \"Gaming\" increase from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Social Media', 'Streaming', 'Shopping', 'Online Learning', 'Gaming', 'Banking', 'Emails', 'Others']\n\ncolors = {'#005454', '#16667f', '#b5cb66', '#8d2977', '#237b6a'}\ncolor_list = list(colors)\n\nvalues_2020 = [40, 35, 30, 25, 20, 15, 15, 25]\nvalues_2021 = [45, 40, 25, 30, 25, 10, 15, 35]\n\nx = range(len(categories))\n\nfig = plt.figure(figsize=(10,5))\n\nrects1 = plt.bar(x, values_2020, color=color_list[0], hatch='/', label='2020')\n\nrects2 = plt.bar(x, values_2021, color=color_list[1], label='2021', alpha=0.7)\n\nplt.xlabel('Categories')\nplt.ylabel('Usage (in hours)')\nplt.title('Internet Usage Comparison between 2020 and 2021')\nplt.xticks(x, categories)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/253.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Subway more popular mode of transportation than Bicycle according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#data\ncategories = ['Trains', 'Taxi', 'Busses', 'Subway', 'Cars', 'Bicycles']\nvalues = [30, 25, 45, 35, 40, 20]\n\n#plotting\nfig, ax = plt.subplots(figsize=(8, 6))\nbar_colors = ['#1bc238', '#db7f67', '#dd2e44', '#1f24cc', '#24cc26','#cea052']\nbar_plot = plt.barh(categories, values, color=bar_colors)\nplt.title('Modes of Transportation')\nplt.xlabel('Number of Users in Thousands')\nplt.xticks(range(0, 55, 5))\nplt.tight_layout()\n\n# save the graph into a .png file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/254.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nDoes the Technology sector employ more people than the Healthcare sector?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# employment figures by sector\nemployment_figures = {\"Technology\": 75, \"Finance\": 35, \"Education\": 95, \"Healthcare\": 85, \"Real Estate\": 55, \"Entertainment\": 25, \"Agriculture\": 65}\n\n# sectors\nsectors = list(employment_figures.keys())\n\n# employment numbers\nnumbers = list(employment_figures.values())\n\n# colors\ncolors = ['#3ebdee', '#5633b9', '#ddd8de', '#4c9b24', '#d83a61', '#1f9f36', '#ac40bf']\n\nplt.figure(figsize=(10, 6))\nplt.barh(sectors, numbers, color=colors)\nplt.title(\"Employment by Sector\")\nplt.xlabel(\"Number Employed\")\nplt.ylabel(\"Sectors\")\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/255.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the category 'Agree' had more responders than 'Disagree'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data\ncategories = ['Agree', 'Strongly Agree', 'Disagree', 'Strongly Disagree']\nvalues = [30, 35, 25, 10]\ncolors = ['#158bc5', '#936d1f', '#35cddc', '#a3a3c2']\nhatches = ['*-', '|', '', '/']\n\nplt.figure(figsize=(10,6))\n\n# Create bar chart\nfor i in range(len(categories)):\n    plt.bar(categories[i], values[i], color=colors[i], hatch=hatches[i])\n\nplt.title('Public Opinion Polls')\nplt.xlabel('Opinion')\nplt.ylabel('Percentage of Respondents')\nplt.ylim(0, 40)\nplt.grid(axis='y')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/258.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDo more male students take STEM courses than female students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Education categories and their values\ncourses = ['STEM', 'Arts', 'Commerce', 'Medical']\nmale_students = [60, 35, 55, 50]\nfemale_students = [40, 65, 45, 50]\n\nx_axis = range(len(courses))\n\nplt.figure(figsize=(10,7))  # Increase the size of the figure to avoid word overlap\n\nbar_width = 0.4  # Define the bar width\nopacity = 0.7  # Define the bar opacity\n\nplt.bar(x_axis, male_students, bar_width, alpha=opacity, color='b', label='Male')\nplt.bar([p + bar_width for p in x_axis], female_students, bar_width, alpha=opacity, color='r', label='Female')\n\nplt.xlabel('Courses')\nplt.ylabel('Percentage of Students')\nplt.title('Distribution of Male and Female Students in Different Courses')\nplt.xticks([p + bar_width/2 for p in x_axis], courses)\nplt.ylim(0, 100)  # Limit the y-axis values to be between 0 and 100\nplt.legend()\n\nplt.tight_layout()  # Ensure there is enough space in the figure for everything\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/259.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAre the scores for women using bikes higher than for men?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define data\ncategories = ['Bike', 'Car', 'Bus', 'Train', 'Plane', 'Ship']\nmen_means = [20, 40, 25, 30, 45, 10]\nwomen_means = [25, 35, 30, 40, 40, 15]\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=[10,5]) # specifying figure size to avoid word overlap\nrects1 = ax.bar(x - width/2, men_means, width, label='Men', color='#f5196e') # bars for men\nrects2 = ax.bar(x + width/2, women_means, width, label='Women', color='#0ea8fe') # bars for women\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Transportation Modes')\nax.set_ylabel('Scores')\nax.set_title('Scores by group and gender')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/260.png')\nplt.show()\n```\nChoices:[['Yes', 'No']]\nStudent's Response:Yes\n",
    "Question Text:\nDoes the graph show that the 'Single Income' category has a higher average income than the 'Dual Income' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define incomes\nincomes = [45, 35]\n\n# Define income categories\ncategories = ['Single Income', 'Dual Income']\n\n# Create bar chart\nplt.figure(figsize=[10,5])\nbars = plt.barh(categories, incomes, color='skyblue', edgecolor='black', hatch='o-')\n\n# Set labels\nplt.xlabel(\"Income (in Thousands)\")\nplt.ylabel(\"Income Category\")\nplt.title(\"Average Incomes for Different Categories\")\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/261.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the category 'Sports Cars' the one with the least amount of units sold for Manufacturer A?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Sports Cars', 'Luxury Sedans', 'Compact Cars', 'SUVs', 'Trucks']\nmanufacturer_a = [20, 45, 35, 40, 50]\nmanufacturer_b = [25, 30, 40, 45, 55]\n\nx = np.arange(len(categories))\n\nfig, ax = plt.subplots(figsize=(8,6))\nbar_width = 0.35\nrects1 = ax.bar(x - bar_width/2, manufacturer_a, bar_width, label='Manufacturer A')\nrects2 = ax.bar(x + bar_width/2, manufacturer_b, bar_width, label='Manufacturer B')\n\nax.set_xlabel('Car Categories')\nax.set_ylabel('Units Sold (in thousands)')\nax.set_title('Comparative Sales by Car Category and Manufacturer')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/263.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDo we have fewer teddy bears than blocks?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create the categories and values\ntoys = ['teddy bears', 'dolls', 'puzzles', 'blocks']\nvalues = [10, 15, 20, 25]\n\n# Create colors\ncolors = ['#3bf9c7', '#e8598b', '#3bf9c7', '#e8598b']\n\n# Set the figure size\nplt.figure(figsize=(10,5))\n\n# Create the horizontal bar chart\nplt.barh(toys, values, color=colors)\n\n# Set label\nplt.xlabel('No. of Toys')\nplt.ylabel('Types of Toys')\nplt.title('Number of Toys per Type')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/264.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Does \"Fossil Fuels\" has the highest contribution to global warming according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and Values\ncategories = ['CO2 Emissions', 'Deforestation', 'Landfills', 'Chemical Fertilizers', 'Livestock & Agriculture', 'Fossil Fuels', 'Air Travel', 'Industrial Processes']\nvalues = [25, 15, 10, 5, 20, 30, 10, 15]\n\nplt.figure(figsize=(12, 8)) # To make sure all labels fit\nplt.barh(categories, values, color='green')\nplt.xlabel('Contribution to Global Warming (%)')\nplt.ylabel('Categories')\nplt.title('Contributions to Global Warming by Category')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/265.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the popularity score for the Technology Field \"5G\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Category data\ncategories = ['Artificial Intelligence', 'Machine Learning', 'Cloud Computing', 'Cyber Security', 'Data Science', 'Blockchain', 'Augmented Reality', 'Internet of Things', '5G']\n\n# Values for categories\nvalues = [50, 45, 25, 30, 55, 40, 20, 35, 15]\n\n# Colors for categories\ncolors = ['#bd82be','#a87a4b','#ef8d33', '#dc1abd', '#77b273', '#2c126e', '#9a4e2d', '#a87a4b', '#77b273']\n\n# Create bar chart\nplt.figure(figsize=[10,8])\nplt.barh(categories, values, color = colors)\nplt.xlabel('Popularity Score')\nplt.ylabel('Technology Fields')\nplt.title('Popularity of Various Technology Fields')\nplt.xticks(range(0, 60, 5))\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/266.png')\n\nplt.show()\n```\nChoices:['10', '15', '20', '25']\nStudent's Response:15\n",
    "Question Text:\nOn the bar chart, which sector has the second least contribution to GDP?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Agriculture', 'Manufacturing', 'Mining', 'Construction', 'Wholesale Trade', 'Retail Trade', 'Transportation', 'Information', 'Finance & Insurance']\nvalues = [50, 80, 65, 75, 90, 60, 70, 55, 85]\ncolors = ['#209a6a', '#f9001f', '#c14e23', '#80d4fc', '#ca1442', '#4f95d8', '#abc855']\n\nplt.figure(figsize=(10, 6))\nplt.barh(categories, values, color=colors, edgecolor='gray')\nplt.xlabel('GDP Contribution in Billion $')\nplt.ylabel('Sectors')\nplt.title('Sectors Contribution to Economy')\n\nfor index, value in enumerate(values):\n    plt.text(value, index, str(value))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/267.png')\nplt.show()\n```\nChoices:['Agriculture', 'Manufacturing', 'Mining', 'Construction', 'Wholesale Trade', 'Retail Trade', 'Transportation', 'Information', 'Finance & Insurance']\nStudent's Response:Information\n",
    "Question Text:\nHow many elephants were conserved in 2020 according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Elephants Conserved']\nvalues = [45]\ncolors = ['#37a8e4']\nhatches = ['x*']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(8, 3))\n\nax.barh(categories, values, color=colors, hatch=hatches[0])\nax.set_xlabel('Numbers conserved in 2020')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/268.png')\n\nplt.show()\n```\nChoices:[30, 35, 40, 45]\nStudent's Response:45\n",
    "Question Text:\nIs the count of Penguins more than the count of Eagles?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nbirds = ['Eagle', 'Sparrow', 'Peacock', 'Owl', 'Parrot', 'Penguin', 'Flamingo']\ncounts = [15, 30, 25, 20, 35, 40, 45]\n\nfig = plt.figure(figsize=(10,6))\n\n# Bar chart\nbar_colors = ['#fa7708', '#a2115e', '#23c295', '#669ae7', '#6c01ad', '#fce221']\nplt.bar(birds, counts, color=bar_colors, width=.5)\n\nplt.title('Numbers of Different Birds')\nplt.ylabel('Bird Count')\nplt.xlabel('Bird Species')\n\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/269.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the 'Furniture' category the highest earning category in terms of sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define some data\ncategories= ['Grocery', 'Clothing', 'Electronics', 'Furniture']\nvalues = [20, 25, 15, 30]\n\n# create a bar chart\nplt.figure(figsize=(10, 5))\nbars = plt.bar(categories, values, color=['#f1ebe1', '#7a3a0d', '#1ad7c6', '#dd127b'])\nhatches = ['/', '\\\\', '-\\\\', '--']\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n\nplt.xlabel('Categories') \nplt.ylabel('Sales (in thousands)')\nplt.title('Retail sales by category')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/270.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHow many more Mars Rover Missions has Russia conducted compared to the USA?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Labels of the data set\nlabels = [\"Mars Rover Missions\", \"Orbiters\", \"Moon Landing Missions\", \"Space Telescopes\"]\n\n# Amounts in the data set\nUS_Amounts = [30, 25, 35, 45]\nRussia_Amounts = [35, 20, 30, 40]\n\nx = np.arange(len(labels)) \nwidth = 0.35 \n\nfig, ax = plt.subplots()\n\nrects1 = ax.bar(x - width/2, US_Amounts, width, label='US', color='#57f77c', hatch ='o-')\nrects2 = ax.bar(x + width/2, Russia_Amounts, width, label='Russia', color='#cbd3c8', hatch ='o-')\n\n# Add some text for labels, title and custom x-axis tick labels\nax.set_ylabel('Number of Missions')\nax.set_title('Space Explorations by USA and Russia')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.set_size_inches(10, 10)\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/271.png')\n\nplt.show()\n```\nChoices:['5 more missions', '0 more missions', '10 more missions', '15 more missions']\nStudent's Response:Answer: 5 more missions\n",
    "Question Text:\nDid the population of Cats increase from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Cats', 'Dogs', 'Rabbits', 'Fish']\nvalues1 = [10, 15, 25, 35]\nvalues2 = [20, 25, 30, 15]\n\nwidth = 0.35       # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nrects1 = ax.bar(np.arange(len(categories)) - width/2, values1, width, label='2020', color='#6dc089')\nrects2 = ax.bar(np.arange(len(categories)) + width/2, values2, width, label='2021')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Population (in 1000s)')\nax.set_title('Animal Populations by Year')\nax.set_xticks(np.arange(len(categories)))\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/272.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat category of land use occupies the largest area according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Let's denote some categories related to the land and their corresponding values.\ncategories = ['Agriculture', 'Residential', 'Commercial', 'Industrial', 'Parks and Recreation', 'Unutilized']\nvalues = [20, 15, 5, 10, 25, 20]\n\n# Creating a color sequence\ncolors = ['#a42fd7', '#d77f82', '#7f82d7', '#82b1d7', '#82d7c5', '#82d796']\n\n# Creating a bar chart\nfig, ax = plt.subplots(figsize=(10, 8))\nbars = ax.bar(categories, values, color=colors, hatch='O')\nax.set_title('Land Use Distribution')\nax.set_xlabel('Land Use')\nax.set_ylabel('Area (in hectares)')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/275.png')\nplt.show()\n```\nChoices:['Agriculture', 'Residential', 'Commercial', 'Industrial', 'Parks and Recreation', 'Unutilized']\nStudent's Response:Parks and Recreation\n",
    "Question Text:\nHow much investment was made in AI and VR combined in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['AI', 'VR']\nvalues1 = [30, 45]\nvalues2 = [20, 35]\n\n# Creating a larger figure to avoid overlapping labels\nplt.figure(figsize=[10,6])\n\n# Creating a stacked bar chart\nbar1 = plt.bar(categories, values1, color='b')\nbar2 = plt.bar(categories, values2, bottom=values1, color='r')\n\nplt.xlabel('Technology') # X-axis label\nplt.ylabel('Investment (in billions)') # Y-axis label\nplt.title('Investment in AI and VR technologies') # Chart title\n\n# Adding legend\nplt.legend([bar1, bar2], ['2019', '2020'])\n\n# Saving figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/276.png')\n\nplt.show()\n```\nChoices:['55 Billion', '65 Billion', '75 Billion', '80 Billion']\nStudent's Response:55 Billion\n",
    "Question Text:\nWhich category has the highest health index for females?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Values\ngroup_names = ['Male', 'Female', 'Children']\ngroup_values = [[30, 45, 35], [60, 75, 70], [40, 50, 55]]\ncolors = ['#6ed57d', '#cf9e6c', '#cf6c7d']\nbar_width = 0.2\n\n# Create axes and figure\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# Set labels and create bars \nfor i in range(len(group_names)):\n    ax.bar(np.arange(len(group_values[i])) + i*bar_width, group_values[i], color=colors[i], width=bar_width, label=group_names[i])\n\n# Setting the x-axis as the category names \nax.set_xticks([r + bar_width for r in range(len(group_values[0]))], ['Physical Health', 'Mental Health', 'Nutritional Health'])\n\n# Adding labels\nplt.xlabel('Health Categories')\nplt.ylabel('Health Index')\nplt.title('Health Index by Gender and Age')\nplt.legend()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/277.png')\n\n# Show chart\nplt.show()\n```\nChoices:['Physical Health', 'Mental Health', 'Nutritional Health']\nStudent's Response:Mental Health\n",
    "Question Text:\nWhich area has the highest combined rate of burglary and murder?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given Data\narea_names = ['Area1', 'Area2', 'Area3', 'Area4', 'Area5']\nburglary = [20, 25, 15, 30, 25]\nmurder = [15, 10, 20, 25, 30]\n\nbar_width = 0.35\nr1 = range(len(burglary))\nr2 = [x + bar_width for x in r1]\n\n# Figure size\nplt.figure(figsize=(10, 8))\n\n# Bar for burglary\nplt.bar(r1, burglary, color='#0fed1e', width=bar_width, edgecolor='grey', hatch='x*', label='Burlgary')\n# Bar for murder\nplt.bar(r2, murder, color='#ff8100', width=bar_width, edgecolor='grey', hatch='\\\\', label='Murder')\n\n# Adding xticks\nplt.xlabel('Areas', fontweight='bold')\nplt.xticks([r + bar_width for r in range(len(burglary))], area_names)\nplt.ylabel('Crime Rates')\nplt.legend()\n\n# Save the graph\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/278.png')\nplt.show()\n```\nChoices:['Area1', 'Area2', 'Area3', 'Area4', 'Area5']\nStudent's Response:Either Area4 or Area5.\n",
    "Question Text:\nDoes the \"Sunny\" weather category have fewer nighttime occurrences than daytime occurrences?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Categories and Data\ncategories = ['Sunny', 'Cloudy', 'Rainy', 'Windy', 'Snowy', 'Foggy']\ndaytime_weather = [30, 35, 25, 40, 20, 15]\nnighttime_weather = [20, 25, 15, 30, 10, 10]\n\n#Correct rounding to 5\ndaytime_weather = [round(i/5)*5 for i in daytime_weather]\nnighttime_weather = [round(i/5)*5 for i in nighttime_weather]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\n#Creating Stacked Bar chart\nax.bar(categories, daytime_weather, color='#239776', hatch='x*', label='Daytime Weather')\nax.bar(categories, nighttime_weather, color='#239776', hatch='x*', label='Nighttime Weather', bottom=daytime_weather)\n\n#Labels and Titles\nplt.xlabel('Weather Types')\nplt.ylabel('Number of Days')\nplt.title('Weather Comparison: Daytime vs Nighttime')\nplt.legend(loc='upper right')\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/279.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nThe question is: Which mode of travel is less preferred according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntravel_modes = ['Car', 'Train']\ntravel_counts = [200, 150]\n\n# Create bar chart\nplt.figure(figsize=[10,5])\nplt.bar(travel_modes, travel_counts, color='#83d61e')\n\n# Labels\nplt.ylabel('Number of people')\nplt.title('Preferred mode of travel')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/281.png')\n\nplt.show()\n```\nChoices:['Car', 'Train']\nStudent's Response:Train\n",
    "Question Text:\nWhat type of plant has a count of 30 in the garden?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# List for scores\nscores_plants = [30, 50] \n\n# Labels for bars\nplants = ['Grass', 'Tree'] \n\n# Bar color\ncolor = ['#54f159', '#6215a6']\n\n# Create horizontal bars\nplt.figure(figsize=(10, 4)) \nplt.barh(plants, scores_plants, color=color)\n\n# Create names on the axes\nplt.xlabel('Number of Plants')\nplt.ylabel('Plant Types')\nplt.title('Number of Plants in the Garden')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/282.png')\n\nplt.show()\n```\nChoices:['Tree', 'Grass', 'Rose', 'Apple']\nStudent's Response:The question asks for the type of plant that has a count of 30 in the garden. By viewing the bar chart you created, we can see that the 'Grass' has a count of 30 in the garden. So, the answer is 'Grass'. \n",
    "Question Text:\nWhich dog breed has the largest total number of dogs across all sizes?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# The categories\ndog_breeds = ['Husky', 'Labrador', 'German Shepherd', 'Golden Retriever', 'Bulldog', 'Poodle', 'Chihuahua']\n\n# The groups\nsizes = ['Small', 'Medium', 'Large']\n\n# Values for each group\nsmall_count = [5, 10, 15, 20, 10, 5, 20]\nmedium_count = [10, 20, 40, 30, 10, 5, 15]\nlarge_count = [10, 30, 50, 40, 15, 5, 10]\n\n# Set the bar width\nbar_width = 0.25\n\n# Set the positions of the bars on the x-axis\nr1 = np.arange(len(small_count))\nr2 = [x + bar_width for x in r1]\nr3 = [x + bar_width for x in r2]\n\n# Make the plot larger to avoid word overlap\nplt.figure(figsize=(10,5))\n\n# Create the bars\nplt.bar(r1, small_count, color='#4ad7af', width=bar_width, edgecolor='grey', label='Small')\nplt.bar(r2, medium_count, color='#c16598', width=bar_width, edgecolor='grey', label='Medium')\nplt.bar(r3, large_count, color='#791f55', width=bar_width, edgecolor='grey', label='Large')\n\n# Labeling the axes\nplt.xlabel('Dog Breeds', fontweight='bold')\nplt.ylabel('No. of Dogs', fontweight='bold')\n\n# Adding the ticks\nplt.xticks([r + bar_width for r in range(len(small_count))], dog_breeds)\n\n# Adding the legend\nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/283.png')\n\n# Show the plot\nplt.show()\n\n\n# Calculate the total counts for each breed\ntotal_counts = [sum(x) for x in zip(small_count, medium_count, large_count)]\n\n# Find the breed with the largest total count\nmax_count_index = total_counts.index(max(total_counts))\nmax_count_breed = dog_breeds[max_count_index]\n```\nChoices:['Husky', 'Labrador', 'German Shepherd', 'Golden Retriever', 'Bulldog', 'Poodle', 'Chihuahua']\nStudent's Response:German Shepherd\n",
    "Question Text:\nWhich festival had the highest attendance in the year 2017?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set the category names\ncategories = ['Carnival', 'Oktoberfest', 'Mardi Gras', 'Chinese New Year', 'Diwali', 'Hanukkah', 'Christmas']\n\n# Set the festival attendance values\nvalues = [[35, 50, 40, 70, 30, 75, 85],  # Year 2016\n          [40, 55, 45, 75, 35, 80, 90],  # Year 2017\n          [45, 60, 50, 80, 40, 85, 95]]  # Year 2018\n\n# Set the bar colors\ncolors = ['#4b8738', '#e8e3cb', '#f1911b', '#38bbcd']\n\nbar_width = 0.2  # Set the bar width\nr1 = np.arange(len(values[0]))  # Set the bar positions\nr2 = [x + bar_width for x in r1]\nr3 = [x + bar_width for x in r2]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(15, 8))\n\n# Create the bars\nax.bar(r1, values[0], color=colors[0], width=bar_width, edgecolor='white', label='2016')\nax.bar(r2, values[1], color=colors[1], width=bar_width, edgecolor='white', label='2017')\nax.bar(r3, values[2], color=colors[2], width=bar_width, edgecolor='white', label='2018')\n\n# Add some labels, title and custom x-axis tick labels\nax.set_xlabel('Festival', fontweight='bold')\nax.set_ylabel('Attendance (Thousands)', fontweight='bold')\nax.set_title('Festival Attendances per Year')\nax.set_xticks([r + bar_width for r in range(len(values[0]))])\nax.set_xticklabels(categories)\n\nfig.tight_layout()\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/284.png')\nplt.show()\n```\nChoices:['Carnival', 'Oktoberfest', 'Mardi Gras', 'Chinese New Year', 'Diwali', 'Hanukkah', 'Christmas']\nStudent's Response:Christmas\n",
    "Question Text:\nIs the percentage of girls more than boys in the Postgraduate level?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Elementary School', 'Middle School', 'High School', 'Undergraduate', 'Postgraduate', 'Doctoral']\n\nboys = [55, 70, 75, 80, 60, 40]\ngirls = [65, 75, 70, 85, 65, 50]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10,7))\nrects1 = ax.bar(x - width/2, boys, width, label='Boys', color='#21de4f')\nrects2 = ax.bar(x + width/2, girls, width, label='Girls', color='#4e0007')\n\n# Adding some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Percentages')\nax.set_xlabel('Education Levels')\nax.set_title('Percentage of Boys and Girls at Different Levels of Education')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.show()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/286.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the real estate home values are always higher than rent values in each city portrayed in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create values for the bar chart, rounded to the nearest 5\nhome_values = [165, 175, 180, 190, 205, 210]\nrent_values = [85, 90, 100, 110, 120, 130]\n\n# Create a list of categories (assume these are cities)\ncities = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia']\n\n# Use the specified colors\ncolors = ['#9718cd', '#2c47c5', '#bef650', '#7082c2', '#40ff9f']\n\n# Plotting\nfig, ax = plt.subplots(figsize=(12, 8))\n\nbar_width = 0.35\nopacity = 0.8\n\nbar1 = plt.bar(np.arange(len(home_values)), home_values, bar_width, color=colors[1], label='Home Values')\nbar2 = plt.bar(np.arange(len(rent_values)) + bar_width, rent_values, bar_width, color=colors[3], label='Rent Values')\n\nplt.xlabel('Cities', fontsize=15)\nplt.ylabel('Values (in Macaroons)', fontsize=15)\nplt.title('Real Estate Values in Different Cities', fontsize=20)\nplt.xticks(np.arange(len(home_values)) + bar_width / 2, cities, fontsize=10, rotation=30)\nplt.legend()\n\nplt.tight_layout()\n\n# save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/287.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich technology device has the highest usage according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set the data\ncategories = ['Mobiles', 'Laptops', 'Desktops', 'Tablets']\nvalues1 = [80, 70, 40, 60]\n\ncolor = '#4987c6'\nhatches = ['++']\n\nplt.figure(figsize=[10,8])\n\n# Create the bar chart\nbars = plt.bar(categories, values1, color=color)\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i%len(hatches)])\n\n# Set the labels\nplt.xlabel('Categories')\nplt.ylabel('Users (in thousands)')\nplt.title('Usage of Technology devices')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/288.png')\nplt.close()\n```\nChoices:['Mobiles', 'Laptops', 'Desktops', 'Tablets']\nStudent's Response:Mobiles\n",
    "Question Text:\nIs Python the most popular programming language according to our bar chart?')\n\n# Choices\nprint('\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport math\n\n# Define the data\ncategories = ['Assembly', 'C Programming', 'Java', 'Python', 'C#', 'Ruby', 'Perl']\nvalues = [40, 65, 85, 100, 70, 55, 45]\n\n# Define the color palette\ncolors = ['#c7d437', '#1b3158', '#946903', '#873d4a', '#8593d7', '#e1488d', '#fa8f86']\n\nplt.figure(figsize=(10,6))  # Make figure size large enough to avoid text overlap\n\n# Generate the chart\nplt.bar(categories, values, color=colors)\n\n# Add labels and title\nplt.xlabel('Programming Languages')\nplt.ylabel('Popularity Score')\nplt.title('Popularity of Different Computer Programming Languages')\n\n# Save chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/289.png', bbox_inches='tight')  # Save to appropriate folder\nplt.show()\n\n\n# Question\nprint('<<<QUESTION>>> Is Python the most popular programming language according to our bar chart?')\n\n# Choices\nprint('<<<CHOICES>>> [\"Yes\", \"No\"] <<<CHOICES>>>')\n\n\n# Answer\nprint('Answer: Yes')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes')\n",
    "Question Text:\nIs the contribution of the Axis Powers in the 'Cold War' more than the Allied Powers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Historical events and their participants\nhistorical_events = ['WW1', 'WW2', 'Cold War', 'Vietnam War', 'Gulf War']\naxis_powers = [40, 50, 0, 0, 0] # round numbers in Millions\nallied_powers = [70, 90, 0, 5, 35] # round numbers in Millions\nneutral_nations = [0, 0, 145, 60, 20] # round numbers in Millions\n\nbarWidth = 0.25\n\n# position of bars on x-axis\nr1 = range(len(historical_events))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\n# Creating the bar chart\nplt.figure(figsize=(10,7))\nplt.bar(r1, axis_powers, color='#cd1c6f', width=barWidth, edgecolor='grey', label='Axis Powers')\nplt.bar(r2, allied_powers, color='#b1ecf3', width=barWidth, edgecolor='grey', label='Allied Powers')\nplt.bar(r3, neutral_nations, color='#e7156e', width=barWidth, edgecolor='grey', label='Neutral Nations')\n\n# Adding xticks\nplt.xlabel('Historical Events', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(historical_events))], historical_events)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/290.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid 'iPhone' sell more phones in 2020 than in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncategories = ['iPhone', 'Samsung', 'Huawei', 'Xiaomi', 'OPPO', 'Others']\nvalues1 = [65, 55, 60, 50, 45, 70] \nvalues2 = [35, 45, 40, 50, 55, 30]\n\nbarWidth = 0.55\ncolors = ['#2c047c', 'red']\nhatches = ['|*', '**', '++', 'OO']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(12, 8))\nbar1 = plt.bar(categories, values1, color=colors[0], edgecolor='white', width=barWidth, label='2019', hatch=hatches[0])\nbar2 = plt.bar(categories, values2, bottom=values1, color=colors[1], edgecolor='white', width=barWidth, label='2020', hatch=hatches[1])\n\n# Add some text for labels, title and axes ticks\nplt.xlabel('Phone Brands')\nplt.ylabel('Sales')\nplt.title('Phone Sales Comparison ')\nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/291.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n: Which country had the highest number of Satellite launches?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Define a function to round to the nearest 5\ndef round_to_5(n):\n    return round(n/5)*5\n\n# Space Exploration data\ncategories = ['Satellite Launches', 'Space Walks', 'Moon Missions', 'Mars Missions', 'Venus Missions', 'Comet Interceptions', 'Asteroid Landings', 'Black Hole Studies']\nusa_vals = [round_to_5(107), round_to_5(67), round_to_5(15), round_to_5(14), round_to_5(4), round_to_5(7), round_to_5(2), round_to_5(4)]\nrussia_vals =[round_to_5(105), round_to_5(120), round_to_5(23), round_to_5(8), round_to_5(10), round_to_5(6), round_to_5(1), round_to_5(1)]\nchina_vals = [round_to_5(86), round_to_5(45), round_to_5(2), round_to_5(2), round_to_5(1), round_to_5(2), round_to_5(1), round_to_5(0)]\neu_vals = [round_to_5(60), round_to_5(30), round_to_5(0), round_to_5(2), round_to_5(0), round_to_5(3), round_to_5(1), round_to_5(2)]\n\nbarWidth = 0.85\ncolors = ['#a34e37', '#3a12df', '#d0892c', '#b048b9']\nhatches = ['x', 'OO', '/', '+o', '**']\nn = len(categories)\n\nr = range(n)\n\n# Create a figure of given size\nfig = plt.figure(figsize=(15,10))\n\n# Plots\nbar1 = plt.bar(r, usa_vals, color=colors[0], edgecolor='white', width=barWidth, hatch=hatches[0])\nbar2 = plt.bar(r, russia_vals, bottom=usa_vals, color=colors[1], edgecolor='white', width=barWidth, hatch=hatches[1])\nbar3 = plt.bar(r, china_vals, bottom=[i+j for i,j in zip(usa_vals, russia_vals)], color=colors[2], edgecolor='white', width=barWidth, hatch=hatches[2])\nbar4 = plt.bar(r, eu_vals, bottom=[i+j+k for i,j,k in zip(usa_vals, russia_vals, china_vals)], color=colors[3], edgecolor='white', width=barWidth, hatch=hatches[3])\n\n# Custom x axis\nplt.xticks(r, categories, fontweight='bold')\nplt.xlabel(\"Category\")\nplt.ylabel(\"Count\")\n\n# Title\nplt.title(\"Space Exploration By Country\")\n\n# Legends\nplt.legend([bar1, bar2, bar3, bar4], ['USA', 'Russia', 'China', 'EU'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/292.png')\nplt.show()\n```\nChoices:['USA', 'Russia', 'China', 'EU']\nStudent's Response:'USA'\n",
    "Question Text:\nIs the \"Jazz\" category represented by less than 50 million listeners in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# defining the categories and their values\ncategories = [\"Pop Music\", \"Rock Music\", \"Country Music\", \"Jazz\", \"Hip-hop\", \"Classical Music\"]\nvalues = [45, 65, 30, 55, 70, 60]\nhatches = ['OO', 'xx', '//', '--', '..', '**']\n\n# creating the bar chart\nplt.figure(figsize=[10,6])\nbars = plt.bar(categories, values, hatch=hatches[0])\n\n# applying different hatches to each bar\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n\n# labeling the chart\nplt.xlabel(\"Genres\")\nplt.ylabel(\"Listeners (in millions)\")\nplt.title(\"Music Genre Popularity\")\n\n# saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/295.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the difference in the performance score between the RAM of a Desktop Computer and a Laptop Computer?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Defining data\ncategories = ['Ram', 'ROM', 'CPU', 'GPU', 'Display', 'I/O', 'Operating System', 'Software']\nvalues_group_1 = np.round([20, 25, 30, 35, 40, 45, 50, 55])\nvalues_group_2 = np.round([60, 65, 70, 75, 80, 85, 90, 95])\n\nbar_width = 0.35\nopacity = 0.8\ncolors = ['#7362e9', '#cf8fa2', '#f8a114', '#5b419c', '#770f0c']\nhatches = ['|', '+', 'x', '-'] \n\n# Creating bar chart\nfig, ax = plt.subplots(figsize=(15, 8))\n\nbar1 = plt.bar(np.arange(len(categories)), values_group_1, bar_width, alpha=opacity, color=colors[0], \n               label='Desktop Computer', hatch = hatches[0])\n\nbar2 = plt.bar(np.arange(len(categories))+bar_width, values_group_2, bar_width, alpha=opacity, color=colors[1], \n               label='Laptop Computer', hatch = hatches[1])\n\n# Adding labels, title and axes ticks\nplt.xlabel('Components')\nplt.ylabel('Performance Score')\nplt.title('Performance comparison of Computer Components')\nplt.xticks(np.arange(len(categories))+bar_width/2, categories)\nplt.legend()\n\n# Displaying chart\nplt.tight_layout()\nplt.show()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/296.png')\n```\nChoices:['40', '45', '50', '55']\nStudent's Response:40\n",
    "Question Text:\nDid the number of enrollments for 'PhD' decrease from 2018 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Elementary School', 'Middle School', 'High School', 'Vocational', 'Bachelors', 'Masters', 'PhD', 'Homeschool', 'Unschool']\ngroup1 = [15, 30, 50, 10, 20, 25, 10, 5, 0]\ngroup2 = [30, 40, 35, 20, 15, 15, 10, 5, 10]\n\nbarWidth = 0.25\ncolors = ['#bddcb8', '#6a5de3', '#bd887d', '#968918', '#9f42ad', '#e51690']\nhatches = ['..', '*-', '/', '|', '/o']\n\n# Set figure size\nplt.figure(figsize=(10, 5))\n\n# Set position of bar on X axis\nr1 = list(range(len(group1)))\nr2 = [x + barWidth for x in r1]\n\n# Make the plot\nplt.bar(r1, group1, color=colors[:len(categories)], width=barWidth, edgecolor='grey', hatch=hatches[0], label='2018')\nplt.bar(r2, group2, color=colors[:len(categories)], width=barWidth, edgecolor='grey', hatch=hatches[1], label='2019')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Education Level', fontweight='bold')\nplt.ylabel('Number of enrollments (1000s)', fontweight='bold')\nplt.xticks([r + barWidth / 2 for r in range(len(group1))], categories)\n\nplt.legend()\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/297.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n: Is the score for 'Shirts' category higher for 'Men' than 'Women'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Tops', 'Jeans', 'Dresses', 'Shirts', 'Skirts', 'Jackets', 'Scarfs', 'Footwear', 'Belts']\n\nmen_scores = [20, 40, 60, 80, 15, 30, 5, 35, 10]\nwomen_scores = [30, 55, 65, 40, 20, 45, 15, 50, 40]\n\nx = np.arange(len(categories))  # the category locations\n\nfig, ax = plt.subplots(figsize=(10, 5))  # Creating a figure of a specific size\n\nwidth = 0.35  # the width of the bars\n\n# Creating separate bars for men and women using different colors\nrects1 = ax.bar(x - width/2, men_scores, width, label='Men', color='#d15ef2')\nrects2 = ax.bar(x + width/2, women_scores, width, label='Women', color='#c3f837')\n\n# Adding some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Category')\nax.set_ylabel('Scores')\nax.set_title('Scores by category and gender')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/298.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of paintings categorized under Cubism is greater than those under Renaissance?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Renaissance', 'Impressionism', 'Cubism']\nvalues = [55, 40, 70]\n\nplt.figure(figsize=(10,5))\nplt.barh(categories, values, color=['blue', 'green', 'red'])\nplt.xlabel('Amount of Paintings')\nplt.ylabel('Art Movements')\nplt.title('Amount of Paintings per Art Movement')\nplt.xticks(range(0, 80, 5))\nplt.grid(axis='x')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/300.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich Medicine Category has a value of 30?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# List of Medicine categories and data\ncategories = ['Pain Relief', 'Antibiotics', 'Cough Mixture', 'Eye Drops', 'Antacids', 'Vaccines', 'Anti-diabetic', 'Antiseptics' ]\nvalues = [30, 45, 40, 35, 50, 25, 30, 55]\n\n# Colors\ncolors = ['#b4ea05', '#3793e4', '#3793e4', '#b4ea05', '#3793e4', '#b4ea05', '#3793e4', '#b4ea05']\n\nplt.figure(figsize=(10, 8))\nplt.barh(categories, values, color = colors)\nplt.title('Medicine Categories and Their Values')\nplt.xlabel('Values')\nplt.ylabel('Medicine Categories')\nplt.grid(axis='x', alpha=0.5)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/301.png')\nplt.show()\n```\nChoices:['Pain Relief', 'Antibiotics', 'Cough Mixture', 'Eye Drops', 'Antacids', 'Vaccines', 'Anti-diabetic', 'Antiseptics']\nStudent's Response:'Pain Relief', 'Anti-diabetic'\n",
    "Question Text:\nWhich weather type has the least occurrences according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting data\nweathers = ['Sunny', 'Rainy', 'Windy', 'Snowy']\nvalues = [25, 40, 15, 20]\n\n# Setting colors\ncolors = ['#d3933f', '#5abc26', '#d2331b', '#f0f984']\n\nfig, ax = plt.subplots(figsize=(10,4)) # To make sure the title won't overlap\n\n# Generate the bar chart\nbars = plt.barh(weathers, values, color=colors, hatch='O')\n\n# Add some text for labels, title\nplt.xlabel('Occurrences (Days)')\nplt.ylabel('Weather Types')\nplt.title('Occurrences of Different Weather Types')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/302.png')\nplt.show()\n```\nChoices:['Sunny', 'Rainy', 'Windy', 'Snowy']\nStudent's Response:Windy\n",
    "Question Text:\nWhich effect of global warming is scored the highest severity level in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and corresponding values\ncategories = ['Carbon Dioxide Levels', 'Melting Ice Caps', 'Average Global Temperature', 'Rising Sea Levels', 'Ocean Acidification', 'Extreme Weather Events', 'Impact on Wildlife']\nvalues = [75, 70, 80, 65, 70, 85, 70] \n\ncategory_colors = ['#f1737f', '#6993fb', '#b63dde', '#c33372', '#7c5e16', '#e3e6cd', '#2b49ab']\n\n# Create the bar chart\nplt.figure(figsize=(10, 7))\nbars = plt.barh(categories, values, color = category_colors)\nplt.title('Impacts of Global Warming')\nplt.xlabel('Severity (on a scale of 0-100)')\nplt.ylabel('Global Warming Effects')\n\nfor bar, color in zip(bars, category_colors):\n    plt.setp(bar, color=color)\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/303.png')\nplt.show()\n```\nChoices:['Carbon Dioxide Levels', 'Melting Ice Caps', 'Average Global Temperature', 'Rising Sea Levels', 'Ocean Acidification', 'Extreme Weather Events', 'Impact on Wildlife']\nStudent's Response:Extreme Weather Events\n",
    "Question Text:\nWhich festival has seen an increase in attendance from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfestivals = ['Festival 1', 'Festival 2', 'Festival 3', 'Festival 4', 'Festival 5', 'Festival 6']\nattendance_2019 = [20, 30, 35, 45, 40, 25]\nattendance_2020 = [15, 35, 40, 50, 35, 30]\n\nx = range(len(festivals))\n\nplt.figure(figsize=(10, 6))\n\nplt.bar(x, attendance_2019, width=0.4, color='#167e9b', align='center')\nplt.bar(x, attendance_2020, width=0.4, color='#eeb4dd', align='edge')\n\nplt.xlabel('Festivals')\nplt.ylabel('Attendance (in thousands)')\nplt.title('Festival Attendance in 2019 and 2020')\nplt.xticks(x, festivals)\nplt.legend(['2019', '2020'])\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/304.png')\nplt.show()\n```\nChoices:['Festival 1', 'Festival 2', 'Festival 3', 'Festival 4', 'Festival 5', 'Festival 6']\nStudent's Response:'Festival 2'\n",
    "Question Text:\nWhat is the total measured impact of Environmental Issues in the UK?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# values for the bars\nair_pollution_values = [65, 80]\nwater_pollution_values = [50, 90]\n\n# edges/boundaries for the bars\nedges = range(2)\n\n# bar chart definition\nfig, ax = plt.subplots(figsize =(12, 8))\nax.bar(edges, air_pollution_values, 0.5, color = '#70230d', label = 'Air Pollution')\nax.bar(edges, water_pollution_values, 0.5, bottom = air_pollution_values, color = '#05039c', label = 'Water Pollution')\n\n# Defining labels & title\nplt.ylabel(\"Measured impact \")\nplt.xlabel(\"Nations \")\nplt.title(\"Impact of different Environmental Issues \")\nplt.xticks(edges, ['US', 'UK'])\n\n# Legend\nplt.legend()\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/305.png')\n\nplt.show()\n```\nChoices:['135 units', '170 units', '120 units', '160 units']\nStudent's Response:170 units\n",
    "Question Text:\nIs the average daily water consumption about 100 litres in a household?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Water Consumption']\nvalues = [100]\n\nplt.figure(figsize=(10,6))\nbars = plt.bar(categories, values, color='#8c89c7')\nplt.ylabel('Litres')\nplt.xlabel('Household')\nplt.title('Average Daily Water Consumption in a Household')\n\nfor bar in bars:\n    height = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width() / 2, height,\n             '%d' % int(height), ha='center', va='bottom')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/306.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the energy output from solar power greater in 2020 than in 2019?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncategories = ['Solar', 'Natural Gas', 'Wind', 'Hydro', 'Nuclear', 'Coal', 'Geothermal']\nvalues_2019 = [55, 35, 60, 65, 40, 70, 20]\nvalues_2020 = [60, 45, 65, 70, 40, 55, 25]\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 6))\nrects1 = ax.bar(x - width/2, values_2019, width, label='2019', color='#ad1681')\nrects2 = ax.bar(x + width/2, values_2020, width, label='2020', color='#7BC688')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Energy Output (MW)')\nax.set_title('Energy Output from Different Sources in 2019 and 2020')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/308.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhat are the two categories with the highest relative importance in the Health category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Health data (all data should be rounded)\ncategories = ['Physical Activity', 'Nutrition', 'Obesity', 'Tobacco', 'Alcohol Abuse', 'Mental Health', 'Infectious Diseases']\nvalues = [30, 45, 50, 20, 15, 35, 40]\ncolors = ['#9d9d55', '#a650a1', '#13db4f', '#e3dcb1', '#ee4f1d', '#070702', '#7044dc']\n\nplt.figure(figsize=(15, 10))\nbars = plt.barh(categories, values, color=colors)\nplt.xlabel('Relative Importance')\nplt.title('Health Categories Importance')\n\n# Add text annotation corresponding to the \"total\" value of each bar\nfor bar in bars:\n    plt.text(bar.get_width(), bar.get_y() + bar.get_height()/2,\n             '%d' % int(bar.get_width()), ha='left', va='center')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/309.png')\nplt.show()\n```\nChoices:['Physical Activity, Nutrition', 'Nutrition, Obesity', 'Obesity, Mental Health', 'Tobacco, Alcohol Abuse']\nStudent's Response:'Nutrition, Obesity'\n",
    "Question Text:\nIs the count of non-veg health issues in females less than the count in males?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = [\"Smoking\", \"Alcohol\", \"Non-veg\", \"Junk Food\", \"No Exercise\", \n              \"Stress\", \"Improper Sleep\", \"Obesity\", \"Cholesterol\", \"Diabetes\"]\nmale = [75, 70, 80, 95, 70, 60, 70, 80, 60, 75]\nfemale = [65, 60, 70, 85, 60, 50, 60, 70, 55, 70]\n\nwidth = 0.8\nfig, ax = plt.subplots(figsize =(10, 8))\n\nbar_colors = ['#023aa5','#665062', '#6a79dc', '#b481b5', '#31013f',\n              '#ef2421', '#3a6e68', '#e70549', '#45a48f', '#d45146']\n\nax1 = ax.bar(np.arange(len(male)), \n             male, \n             width, \n             color = bar_colors, \n             hatch = '+', \n             edgecolor ='grey', \n             label ='Male')\n\nax2 = ax.bar(np.arange(len(female)), \n             female, \n             width, \n             bottom = male, \n             color = bar_colors,\n             hatch = 'x', \n             edgecolor ='grey', \n             label ='Female')\n\nax.set_xlabel(\"Health Categories\", fontsize =12)\nax.set_ylabel(\"Count\", fontsize =12)\nax.set_title(\"Comparison of Health Issues in Males and Females\", fontsize =14)\nax.set_xticks(np.arange(len(categories)))\nax.set_xticklabels(categories, rotation =45)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/310.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich painting has popularity percentage closest to 30%?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Category names\ncategories = [\n    'The Starry Night',\n    'The Persistence of Memory',\n    'The Girl with a Pearl Earring',\n    'The Last Supper',\n    'The Birth of Venus',\n    'The Scream'\n]\n\n# Category values\nvalues = [25, 50, 35, 55, 40, 50]\n\n# Colors\ncolors = ['#900519','#e11986','#900519','#e11986','#900519','#e11986']\n\n# Create a horizontal bar chart\nplt.figure(figsize=(10,8))\nplt.barh(categories, values, color = colors )\n\n# Add labels and title\nplt.xlabel('Popularity (in %)')\nplt.ylabel('Paintings')\nplt.title('Popularity of Different Paintings')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/311.png')\n\nplt.show()\n```\nChoices:['The Starry Night', 'The Persistence of Memory', 'The Girl with a Pearl Earring', 'The Last Supper', 'The Birth of Venus', 'The Scream']\nStudent's Response:'The Girl with a Pearl Earring'\n",
    "Question Text:\nWhat food category has the highest consumption?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories (food)\ncategories = ['Pizza', 'Burger', 'Pasta']\n\n# Values for each category, rounded to nearest 5\nvalues = [45, 65, 55]\n\n# Colors\ncolors = ['#d0af11', '#ff9999', '#66b3ff']\n\n# Hatches\nhatches = ['xx', 'O|', 'o-']\n\n# Initialize the figure\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Creating the bar chart\nbars = plt.bar(categories, values, color=colors)\n\n# Setting hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Adding title, labels, and grid\nplt.title('Food Consumption')\nplt.ylabel('Consumption (in units)')\nplt.xlabel('Type of Food')\nplt.grid(True)\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/313.png')\nplt.show()\n```\nChoices:['Pizza', 'Burger', 'Pasta']\nStudent's Response:Burger\n",
    "Question Text:\nDoes the severity of Air pollution increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Air Pollution', 'Deforestation', 'Global Warming', 'Urbanization', 'Water Pollution', \n 'Loss of Biodiversity', 'Ozone Layer Depletion', 'Waste Disposal']\n\nn_categories = 8\n\nvalues1 = [20, 45, 55, 30, 50, 40 , 25, 35]\nvalues2 = [30, 40, 60, 25, 45, 55, 20, 30]\n\nlabels = ['2019', '2020']\ncolors = ['#9684be', '#e6c55a', '#820426', '#1c5918', '#84627a', '#9b6b59', '#3f3f30', '#19e2b2']\nhatches = ['-', '//', 'O', '+']\n\nx = np.arange(n_categories)  \nwidth = 0.35  \n\nfig, ax = plt.subplots(figsize=(10,5))\n\nrects1 = ax.bar(x - width/2, values1, width, label='2019', \n                color=colors[:len(values1)], \n                hatch=hatches[0])\n\nrects2 = ax.bar(x + width/2, values2, width, label='2020', \n                color=colors[:len(values2)], \n                hatch=hatches[1])\n\nax.set_ylabel('Issue Severity Level')\nax.set_title('Severity Comparison of Environmental Issues in 2019 and 2020')\nax.set_xticks(x)\nax.set_xticklabels(categories, rotation=20, ha='right')\nax.legend()\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/314.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIs the water usage for Toilet Flushing higher in Home Use than Industrial Use?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Showering', 'Toilet Flushing', 'Dishwasher', 'Clothes washing', 'Cooking', 'Drinking', 'Outdoor watering', 'Swimming pool', 'Others']\n\n# Values rounded to the nearest 5. All values are in liters.\nhome_values = [60, 50, 30, 25, 20, 5, 35, 15, 20]\nindustrial_values = [0, 0, 0, 60, 25, 15, 0, 50, 160]\n\nwidth = 0.35       # the width of the bars: can also be len(x) sequence\n\nfig, ax = plt.subplots(figsize=(15,10))\n\nax.bar(categories, home_values, width, label='Home Use', color='#11b22f', hatch='..')\nax.bar(categories, industrial_values, width, bottom=home_values, label='Industrial Use', color='#9bbfdd')\n\nax.set_ylabel('Water Use (in Liters)')\nax.set_title('Water Use by Activity and Source')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/315.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Carbon Dioxide the largest contributor to Global Warming?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their values\ncategories = ['Carbon Dioxide', 'Methane', 'Nitrous Oxide', 'Industrial Processes', 'Fossil Fuels', 'Land Use Change']\nvalues = [80, 15, 5, 10, 70, 35]\n\n# Colors for the bars\ncolors = ['#ec31a4', '#420d6d', '#3664d6', '#ec31a4', '#420d6d', '#3664d6']\n\nplt.figure(figsize=(10, 6))\nplt.barh(categories, values, color=colors)\nplt.xlabel('Global Warming Contributions (%)')\nplt.title('Global Warming Contributions by Different Factors')\nplt.grid(axis='x')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/316.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the data presented in the bar chart, select the correct answer: What was the percentage of the 'School Enrolment' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Literacy Rate', 'School Enrolment', 'Graduation Rate', 'Post-Secondary Education', 'Doctorates Granted']\nvalues = [85, 90, 75, 80, 40]\n\n# colors and hatches\ncolors = ['#004634', '#3264ae', '#b94080', '#3264ae', '#b94080']\nhatches = ['x', 'O', '\\\\\\\\', None, '**']\n\n# create bar chart\nplt.figure(figsize=(10, 5)) # Define figure size to avoid text overlap\nplt.barh(categories, values, color=colors, hatch=hatches)\n\n# labels\nplt.xlabel('Percent (%)')\nplt.ylabel('Education Metrics')\nplt.title('Education Indicators')\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/317.png')\n\nplt.show()\n```\nChoices:[80, 90, 75, 85]\nStudent's Response:90\n",
    "Question Text:\nWhich type of fish was caught more in winter?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the fish categories and their quantities\nfish_categories = ['Salmon', 'Tuna']\nwinter_catch = [20, 15]\nsummer_catch = [25, 10]\n\n# Define positions for the bars\nbar_positions = range(len(fish_categories))\n\n# Set color and hatch\nbar_colors = ['#15dd89', '#71f1e7']\nbar_hatches = ['/o', '||']\n\n# Create subplots\nfig, ax = plt.subplots(figsize=(10,5))\nax.bar([i - 0.2 for i in bar_positions], winter_catch, hatch=bar_hatches[0], color=bar_colors[0], width=0.4, label='Winter')\nax.bar([i + 0.2 for i in bar_positions], summer_catch, hatch=bar_hatches[1], color=bar_colors[1], width=0.4, label='Summer')\n\n# Set x and y labels\nplt.xlabel('Types of Fish')\nplt.ylabel('Quantity Caught')\n\n# Set title\nplt.title('Fish Caught in Winter and Summer')\n\n# Show legend\nplt.legend()\n\n# Show grid\nplt.grid(True, which='both')\n\n# Label x-ticks\nplt.xticks(bar_positions, fish_categories)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/318.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Salmon', 'Tuna']\nStudent's Response:Salmon\n",
    "Question Text:\nDoes the grade 'B+' correspond to a mark of 80?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Grading categories\nlabels = ['A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-']\n\n# Category values\nsizes = [90, 85, 80, 75, 70, 65, 60, 55]\n\nfig, ax = plt.subplots()\n\n# Color array with more colors in case there are more labels\ncolors = ['#54e6f4', '#874a61', '#ff5733', '#8d6e63', '#ba2f16', '#ff7f27', '#eb984e', '#aeb6bf']\n\n# Making the bar chart\nbar_chart = plt.bar(labels, sizes, color=colors, hatch='*')\n\n# Setting the chart title and labels\nplt.xlabel('Grade')\nplt.ylabel('Marks')\nplt.title('Grades vs Marks')\n\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/320.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich field has more investment in 2020 according to the chart: AI research or Cybersecurity?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ncategories = ['Spending on AI research', 'Spending on Cybersecurity']\nvalues = [65, 85]\n\n# Create bar chart\nplt.figure(figsize=(10, 6))\nplt.barh(categories, values, color='#164c86')\nplt.xlabel('Spending (in billions USD)')\nplt.title('Technology Spending (2020)')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/322.png')\n\nplt.show()\n```\nChoices:['AI research', 'Cybersecurity', 'Both have the same investment', 'The chart does not provide this information']\nStudent's Response:Cybersecurity\n",
    "Question Text:\nIs the scaled impact of water pollution in 2020 higher than it was in 2018?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Environmental Issues Categories and their values\nissues = ['Air Pollution', 'Deforestation', 'Global Warming', \n          'Overpopulation', 'Water Pollution', 'Waste Disposal']\nvalues_2018 = [30, 40, 50, 25, 45, 50]\nvalues_2019 = [35, 45, 55, 35, 45, 50]\nvalues_2020 = [40, 50, 55, 40, 47, 55]\n\nbar_width = 0.25\nr1 = [i for i in range(len(issues))]\nr2 = [i + bar_width for i in r1]\nr3 = [i + bar_width for i in r2]\n\nplt.figure(figsize=(10, 7))\n\nplt.bar(r1, values_2018, color='#4a2758', width=bar_width, edgecolor='grey', label='2018')\nplt.bar(r2, values_2019, color='#6f2f68', width=bar_width, edgecolor='grey', label='2019')\nplt.bar(r3, values_2020, color='#ff4757', width=bar_width, edgecolor='grey', label='2020')\n\nplt.xlabel('Environmental Issues', fontweight='bold', fontsize=10)\nplt.ylabel('Scaled Impact', fontweight='bold', fontsize=10)\n\nplt.xticks([r + bar_width for r in range(len(issues))], issues, rotation='vertical')\n\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/324.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the bar for \"Fall of USSR\" taller than the bar for \"Roaring 20s\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Make a dataset\nheight = [20, 35, 30, 35, 27, 40, 35, 25, 40, 22]\nbars = ('WW1', 'Roaring 20s', 'Great Depression', 'WW2', 'Cold War', \n        'Space Race', 'Vietnam War', 'Fall of USSR', 'Tech boom', 'War on Terror')\ny_pos = range(len(bars))\n# Create bars\nplt.figure(figsize=(15,8))\nplt.bar(y_pos, height, color=['#f98a45', '#9404cc', '#9f19a4', '#7ca840', '#a3bb01'], hatch='/')\n# Create names on the x-axis\nplt.xticks(y_pos, bars)\n# Add title and axis names\nplt.title('Historic Events of the Past Century')\nplt.xlabel('Events')\nplt.ylabel('Impact')\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/325.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nIs Solar energy source producing more than Coal energy source according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# xlabel categories\ncategories = ['Nuclear', 'Hydropower', 'Biofuels', 'Geothermal', 'Wind', 'Solar', 'Coal', 'Natural gas', 'Petroleum', 'Other']\nN = len(categories)\n\n# chart data values\nnuclear_val = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\nhydropower_val = [50, 45, 40, 35, 30, 25, 20, 15, 10, 5]\nbiofuels_val = [10, 15, 20, 25, 30, 35, 40, 45, 50, 55]\ngeothermal_val = [55, 50, 45, 40, 35, 30, 25, 20, 15, 10]\n\nind = np.arange(N) # the x locations for the groups\nwidth = 0.35 # the width of the bars\n\nfig = plt.figure(figsize=(15, 8))\nax = fig.add_subplot(111)\n\n# define hatches\nhatches = ['\\\\', '-\\\\', 'o', '|', '--', '*']\n\n# stacked bars\np1 = ax.bar(ind, nuclear_val, width, color='#9975bf', hatch=hatches[0])\np2 = ax.bar(ind, hydropower_val, width, bottom=nuclear_val, color='#e5b0db', hatch=hatches[1])\np3 = ax.bar(ind, biofuels_val, width, bottom=[i+j for i,j in zip(nuclear_val, hydropower_val)], color='#9278ef', hatch=hatches[2])\np4 = ax.bar(ind, geothermal_val, width, bottom=[i+j+k for i,j,k in zip(nuclear_val, hydropower_val, biofuels_val)], color='#9975bf', hatch=hatches[3])\n\n# labels and title\nax.set_ylabel('Energy Production (in PJ)')\nax.set_xlabel('Type of Energy Source')\nax.set_title('Energy sources and their annual production')\nax.set_xticks(ind)\nax.set_xticklabels(categories, rotation=45)\nax.legend((p1[0], p2[0], p3[0], p4[0]), ('Nuclear', 'Hydropower', 'Biofuels', 'Geothermal'))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/326.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the number of Abstract paintings greater than Romanticism paintings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Datasets\ncategories = ['Renaissance', 'Baroque', 'Romanticism', 'Impressionism', 'Cubism', 'Abstract', 'Pop Art', 'Modern']\nvalues1 = [65, 80, 55, 95, 70, 85, 60, 75]\nvalues2 = [85, 95, 60, 70, 80, 95, 70, 90]\n\n# Colors\ncolors = ['#09c744', '#ef23de', '#d3d78f', '#70ca79', '#4b29ef', '#ce5930', '#cb5468', '#ce5930']\n\n# Bar chart\nplt.figure(figsize=(12, 8))\nplt.bar(categories, values1, color=colors)\nplt.bar(categories, values2, bottom=values1, color=colors)\n\n# Labels and Title\nplt.xlabel('Art Styles')\nplt.ylabel('Number of Paintings')\nplt.title('Distribution of Paintings per Art Style')\nplt.xticks(rotation=45)\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/327.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the total of album sales and concerts for Hip-Hop less than for Country?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data about music categories\nmusic_categories = ['Rock', 'Pop', 'Hip-Hop', 'Classical', 'Country']\nbar1_data = [30, 45, 40, 35, 50]  # number of albums sold in thousands\nbar2_data = [35, 50, 45, 25, 45]  # number of concerts in a year\n\nind = range(len(music_categories))  # the x locations for the groups\n\n# Create the bar chart\nfig, ax = plt.subplots(figsize=(8,6))\n\n# first set of bars\np1 = ax.bar(ind, bar1_data, color='#ad3437', hatch='+o')\n\n# second set of bars\np2 = ax.bar(ind, bar2_data, bottom=bar1_data, color='#ad3437', hatch='++')\n\nax.set_ylabel('Count')\nax.set_title('Music: Album Sales and Concerts by Category')\nax.set_xticks(ind)\nax.set_xticklabels(music_categories)\nax.legend((p1[0], p2[0]), ('Album Sales', 'Concerts'))\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/329.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Facebook' the social media platform with the highest number of inactive users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare the data\nsocial_media_platforms = ['Facebook', 'Twitter', 'Instagram', 'YouTube', 'LinkedIn', 'Snapchat']\nuser_numbers = [1650, 330, 1020, 2000, 695, 445]  # in millions\nactive_users = [1500, 275, 900, 1875, 625, 400]\ninactive_users = [i - j for i, j in zip(user_numbers, active_users)]\n\n# Create bar\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(10,7))\n\nbar1 = ax.bar(social_media_platforms, active_users, bar_width, label='Active Users', hatch = '/')\nbar2 = ax.bar(social_media_platforms, inactive_users, bar_width, bottom=active_users, label='Inactive Users', hatch = 'oo')\n\nax.set_xlabel('Social Media Platforms')\nax.set_ylabel('Number of Users (in millions)')\nax.set_title('Number of Users by Social Media Platforms')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/330.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the usage percentage of the Processor according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# values rounded to the nearest 5\ncomponents = ['Processor', 'RAM', 'Storage']\nvalues = [30, 25, 45]\n\nfig = plt.figure(figsize = (10, 5))\n\n# creating the bar plot\nplt.bar(components, values, color ='#a9297b')\n\nplt.xlabel(\"Computer Components\")\nplt.ylabel(\"Usage Percentage\")\nplt.title(\"Computer Components Usage Percentage\")\nplt.tight_layout()\nplt.ylim(0,50)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/331.png')\nplt.show()\n```\nChoices:['20%', '25%', '30%', '35%']\nStudent's Response:30\n",
    "Question Text:\nWhat is the difference between the score of men and women in the Street fashion category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Classic', 'Modern', 'Street', 'Vintage']\nmen_means = [90, 55, 40, 60]\nwomen_means = [70, 50, 70, 45]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.3  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10,6))\nrects1 = ax.bar(x - width/2, men_means, width, label='Men')\nrects2 = ax.bar(x + width/2, women_means, width, label='Women')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Scores')\nax.set_title('Fashion preference among men and women')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/332.png')\nplt.show()\n```\nChoices:['5', '10', '20', '30']\nStudent's Response:30\n",
    "Question Text:\nDid the population of Denver increase from 2015 to 2020 according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib\n\n# Cities\ncategories = ['Chicago', 'New York', 'Los Angeles', 'Atlanta', 'Denver']\n\n# Population in Millions (rounded to the nearest 5)\npopulation_2015 = [20,25,15,5,5]\npopulation_2020 = [25,30,20,10,10]\n\ncolors = ['#6d3b85', '#354756', '#b9cb78', '#73282d', '#aaa078']\nhatches = ['.', '+o']\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 5))\nbar1 = ax.bar(x, population_2015, width=0.4, align='center', color=colors, hatch=hatches[0], label='2015')\nbar2 = ax.bar(x, population_2020, width=0.4, align='edge', color=colors, hatch=hatches[1], label='2020')\n\nax.set_xlabel('Cities')\nax.set_ylabel('Population in Millions')\nax.set_title('2015 vs 2020 City Populations')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/333.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs \"The Last Supper\" the painting with the highest quantity in the museum?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The figure size is large enough to avoid word overlap in case of multiple labels\nplt.figure(figsize=(10,6)) \n\n# The data , categories and colors are defined\npaintings = {\"Mona Lisa\":10, \"Starry Night\":20, \"The Last Supper\":25 ,\"The Scream\":15, \"Guernica\":5}\ncolors = ['#8e8f65', '#581653', '#39fb4a', '#6c9a68', '#f9a905']\n\nplt.barh(list(paintings.keys()), list(paintings.values()), color = colors)\nplt.title('Number of Paintings in the Museum')\nplt.xlabel('Number')\nplt.ylabel('Paintings')\n\n# Data is being saved\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/335.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the number of repetitions for Push-ups less than 30?\nFigure Code:\n```\n#Importing necessary modules\nimport matplotlib.pyplot as plt\n\n#Data for the bar chart\ncategories = ['Push-ups']\nvalues = [25]\ncolors= ['#52c3cc']\n#Creating the bar chart\nplt.figure(figsize=(7,5)) # Size is chosen to avoid word overlap\nplt.bar(categories,values, color=colors)\n\n#Adding the labels and title\nplt.ylabel('Number of Repetitions')\nplt.xlabel('Exercise')\nplt.title('Fitness: Number of Repetitions of Exercises')\n\n#Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/336.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the 'Education' charity have more funds than 'Animal Welfare' charity?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\ncharities = ['Health & Wellness', 'Education', 'Animal Welfare', 'Environmental Protection']\nfunds_in_millions = [50, 65, 45, 75]\n\n# Colors for the bars\ncolors = ['#df102b', '#f7cd13', '#dba4ca', '#bb6e61']\n\n# Create a horizontal bar chart\nplt.figure(figsize=(10,5))\nplt.barh(charities, funds_in_millions, color=colors)\n\n# Add labels and title\nplt.xlabel('Funds in million dollars')\nplt.ylabel('Charities')\nplt.title('Donations received by different charities')\n\n# Show grid\nplt.grid(True)\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/337.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the difference in charity expenditure between Education and Health care?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Education', 'Health care']\nvalues = [75, 45]\ncolors = ['#61d426', '#6d72ef']\nplt.figure(figsize=(10,6))\nplt.title('Charity Expenditure in Different Categories')\nplt.bar(categories, values, color=colors)\nplt.xlabel('Categories')\nplt.ylabel('Expenditure in thousands')\nplt.xticks(rotation=0)\nplt.yticks(range(0,max(values)+10,5)) # increments of 5 in y axis\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/338.png')\nplt.show()\n```\nChoices:['30 thousand', '60 thousand', '15 thousand', '45 thousand']\nStudent's Response:30 thousand\n",
    "Question Text:\nWhat is the total number of students (in thousands) that were enrolled in the 'Science' field in 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories\ncategories = ['Science', 'Arts']\n\n# Number of students enrolled (in thousands) in 2020 \nstudents_2020 = [640, 560]\n\n# Number of students enrolled (in thousands) in 2021\nstudents_2021 = [700, 620]\n\nindex = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(8, 6)) # setting the figure size, to avoid overlaps\n\nbar_width = 0.4\n\nbar_1 = plt.bar(index, students_2020, bar_width, color='b', label='2020')\nbar_2 = plt.bar(index, students_2021, bar_width, bottom=students_2020, color='r', label='2021')\n\nplt.xlabel('Fields')\nplt.ylabel('Number of Students (in thousands)')\nplt.title('Number of Students Enrolled in Different Fields of Education')\nplt.xticks(index, categories)\nplt.legend()\n\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/339.png')\nplt.show()\n```\nChoices:['1260', '1340', '1440', '1540']\nStudent's Response:1340\n",
    "Question Text:\nIs Modernist style more popular than Postmodern style in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the architecture styles and their values\narchitecture_styles = ['Modernist', 'Postmodern']\nvalues = [20, 15] # Rounding off to nearest five\n\n# Define the colors and hatches\ncolors = ['#877967', '#877967']\nhatches = ['..', 'xx']\n\nfig, ax = plt.subplots(figsize=(8,3))\n\n# Create a bar chart\nbars = ax.barh(architecture_styles, values, color=colors)\n\n# Adding hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set the title and labels\nplt.title('Different Architecture Styles and Their Popularity')\nplt.xlabel('Popularity')\nplt.ylabel('Architecture Style')\n\n# Save the chart as a png image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/340.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total number of hours group1 spends on email, social media and online shopping per week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Email', 'Social Media', 'Online Shopping', 'Streaming', 'Virtual Reality', 'Online Gaming', 'Web Browsing', 'Others']\ngroup1 = [30, 50, 25, 55, 35, 45, 40, 30]\ngroup2 = [40, 55, 35, 60, 40, 50, 45, 35]\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=[15, 8])\nbar1 = ax.bar(x, group1, width=0.4, align='center', color='#97eb1d', hatch='.', edgecolor='black')\nbar2 = ax.bar(x, group2, width=0.4, align='edge', color='#8a12bc', hatch='xx', edgecolor='black')\n\nax.set_xlabel('Internet Activities')\nax.set_ylabel('Number of Hours')\nax.set_title('Internet Usage per Week')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend(['Group 1', 'Group 2'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/341.png')\nplt.show()\n```\nChoices:[85, 100, 105, 115]\nStudent's Response:105\n",
    "Question Text:\nIs Facebook the social media platform represented by the bar with the color '#10d970'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\ncategories = ['Facebook', 'Twitter', 'Instagram']\nvalues = [25, 20, 30]\ncolors = ['#02be9d', '#10d970', '#02be9d']\nhatches = ['O|', '..', '\\\\']\n\n# Create plot\nfig, ax = plt.subplots(figsize=(10,6))\nbars = plt.bar(categories, values, color=colors)\n\n# Add hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set labels\nplt.ylabel('User base (in billions)')\nplt.title('Social Media User Stats')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/342.png')\n\n# display the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:'No'\n",
    "Question Text:\nWhich sector has the highest employment rate according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define employment categories\ncategories = ['Manufacturing', 'Services', 'IT', 'Education', 'Healthcare']\n\n# Values corresponding to categories\nvalues = [40, 65, 55, 35, 50]\n\n# Colors for the bars\ncolors = ['#490de3'] * 5\n\n# Hatches for the bars\nhatches = ['|*', '\\\\\\\\', '+o', '**', '']\n\nplt.figure(figsize=(10, 6))\n\n# Create bar chart\nbars = plt.bar(categories, values, color=colors)\n\n# Assign hatches to each bar\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.ylabel('Employment Rate (%)')\nplt.title('Employment Rate by Sector')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/343.png')\nplt.show()\n```\nChoices:['Manufacturing', 'Services', 'IT', 'Education', 'Healthcare']\nStudent's Response:Services\n",
    "Question Text:\nIs Soccer the sport with the highest total participation (men + women)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\nsports = ['Basketball', 'Soccer', 'Tennis', 'Swimming', 'Volleyball']\n\nmen = [55, 60, 70, 40, 45]\nwomen = [45, 40, 30, 60, 55]\n\n# Figure size to avoid label overlap\nplt.figure(figsize=(10,7))\n\nbar1 = plt.bar(sports, men, color='#63cc15')\nbar2 = plt.bar(sports, women, bottom=men, color='#ac73e8')\n\n# Adding labels\nplt.ylabel('Number of participants')\nplt.title('Participants by Sport and Gender')\nplt.xticks(sports)\nplt.legend((bar1[0], bar2[0]), ('Men', 'Women'))\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/344.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n: According to the bar chart, how many rape incidents were reported in 2020 (in thousands)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Rape']\nvalues = [20]\n\nplt.figure(figsize=(10,5))\nbars = plt.bar(categories, values, color='#5aea3c', hatch='OO')\n\nplt.xlabel('Crimes')\nplt.ylabel('Number of Incidents (in thousands)')\nplt.title('Crime Rates in 2020')\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2, yval, int(yval), ha='center', va='bottom')\n\nplt.ylim(0,max(values)*1.2)\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/345.png')\nplt.show()\n```\nChoices:['15', '20', '25', '30']\nStudent's Response:20.\n",
    "Question Text:\nWhat is the total magnitude for the 'Deforestation' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\ncategories = ['Air pollution', 'Water pollution', 'Soil degradation', 'Deforestation', 'Climate change', 'Overpopulation', 'Waste disposal', 'Loss of biodiversity']\nvalues1 = [45, 55, 60, 40, 50, 70, 30, 65]\nvalues2 = [30, 25, 20, 30, 35, 15, 40, 20]\n\n# Creating figure\nfig = plt.figure(figsize=[10, 8])\n\n# Creating stacked bar chart\nplt.bar(categories, values1, color='b')\nplt.bar(categories, values2, bottom=values1, color='r')\n\n# Adding labels \nplt.xlabel(\"Environmental Issues\") \nplt.ylabel(\"Magnitude\") \nplt.title(\"Stacked Bar Chart of Environmental Issues\") \nplt.xticks(rotation=45)\n\n# Displaying the chart\nplt.show()\n\n# Saving the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/346.png')\n```\nChoices:[50, 55, 60, 70, 75]\nStudent's Response:70\n",
    "Question Text:\nWas more Tuna fished in 2021 than in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncategories = ['Salmon', 'Tuna', 'Swordfish', 'Haddock', 'Mackerel']\nvalues1 = [40, 30, 35, 50, 45]  # in tonnes, 2020\nvalues2 = [35, 35, 40, 45, 50]  # in tonnes, 2021\n\nbarWidth = 0.4\nr1 = np.arange(len(categories))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10, 7))\n\n# Creating bars\nplt.bar(r1, values1, color='#514c97', width=barWidth, edgecolor='grey', label='2020', hatch='||')\nplt.bar(r2, values2, color='#a3ddfd', width=barWidth, edgecolor='grey', label='2021', hatch='OO')\n\n# Adding xticks\nplt.xlabel('Fish Species', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth/2 for r in range(len(categories))], categories)\nplt.ylabel('Quantity Caught (in tonnes)', fontweight='bold', fontsize=15)\n\nplt.legend()\nplt.title('Comparison of Fish Caught in 2020 and 2021', fontweight='bold')\n\n# Saving figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/347.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Facebook the most used social media platform among the 18-24 age group?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nages = ['18-24', '25-34', '35-44']\nfacebook = [35, 45, 30]\ntwitter = [10, 15, 10]\ninstagram = [15, 20, 10]\n\nbarWidth = 0.15\n\nr1 = range(len(facebook))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\nplt.figure(figsize=(10,6))\n\nplt.bar(r1, facebook, color='#5add0c', width=barWidth, edgecolor='gray', label='Facebook')\nplt.bar(r2, twitter, color='#dad138', width=barWidth, edgecolor='gray', label='Twitter')\nplt.bar(r3, instagram, color='#9a430c', width=barWidth, edgecolor='gray', label='Instagram')\n\nplt.xlabel('Age Groups', fontweight='bold')\nplt.ylabel('Users (in millions)', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(facebook))], ages)\n\nplt.title('Social Media usage by Age Groups')\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/348.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nComparing the donations made to Charity A and Charity B in 2019 and 2020, which charity had the highest increase in donations from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# setting up the data\ncharities = ['Charity A', 'Charity B', 'Charity C']\ndonations_2019 = [20, 35, 30]\ndonations_2020 = [35, 32, 45]\n\nx = np.arange(len(charities))\n\nfig, ax = plt.subplots()\nbar_width = 0.35\n\nax.bar(x - bar_width/2, donations_2019, bar_width, label='Donations 2019')\nax.bar(x + bar_width/2, donations_2020, bar_width, label='Donations 2020')\n\nax.set_ylabel('Donations ($ in thousands)')\nax.set_title('Donations to Charities in 2019 and 2020')\nax.set_xticks(x)\nax.set_xticklabels(charities)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/349.png')\nplt.show()\n```\nChoices:['Charity A', 'Charity B', 'Charity C', 'None']\nStudent's Response:Charity A\n",
    "Question Text:\nDoes Facebook have more usage than TikTok?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the names of the social media platforms and their corresponding usage data\nplatforms = ['Facebook', 'Instagram', 'TikTok', 'Snapchat', 'Youtube', 'Twitter', 'LinkedIn', 'Pinterest', 'Reddit']\nusage = [245, 200, 100, 90, 180, 75, 40, 30, 25]\n\n# Create the bar chart\nplt.figure(figsize=(10, 6)) # Adjust figure size to ensure labels don't overlap\nbars = plt.barh(platforms, usage, color=['#d34773', '#c60cab']*5, hatch = 'o-') # Create the horizontal bars with specified colors and hatches\nplt.xlabel('Usage (in millions)') # Label x-axis\nplt.title('Social Media Usage') # Add title\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/350.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Classical' the most collected music albums category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Rock', 'Jazz', 'Classical']\nvalues = [25, 30, 45]\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nhatches = ['*', 'OO', '']\ncolors = ['#f0b1bb', 'blue', 'green']\n\nfor i in range(3):\n    ax.barh(categories[i], values[i], color=colors[i], hatch=hatches[i])\n\nax.set_xlabel('Number of Albums')\nax.set_title('Collection of Music Albums')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/351.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich car category has the average price closest to $40,000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ncategories = ['Sedan', 'SUV', 'Sports', 'Truck']\nvalues = [25, 30, 50, 35]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Create horizontal bar chart\nax.barh(categories, values, color='skyblue')\n\n# Set labels\nax.set_xlabel('Average Price (in thousands)')\nax.set_ylabel('Car Category')\nax.set_title('Average Price per Car Category')\n\n# Set x-ticks to increments of 5\nax.set_xticks(range(0, max(values)+10, 5))\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/352.png')\n\nplt.show()\n```\nChoices:['Sedan', 'SUV', 'Sports', 'Truck']\nStudent's Response:Truck\n",
    "Question Text:\nBased on the bar chart, which area saw the most population growth from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# the rounded population growth in %\ncategories = ['Urban', 'Rural', 'Underdeveloped']\n\n# the years (groupings)\nyears = ['2000', '2010', '2020']\n\n# population growth in the categories for each year\nurban_growth = [10, 20, 30]\nrural_growth = [5, 15, 25]\nunderdeveloped_growth = [0, 5, 15]\n\nbarWidth = 0.25\n\n# create bar positions\nr1 = np.arange(len(urban_growth))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\nplt.figure(figsize=[10,8])\n\n# create urban_growth bars\nplt.bar(r1, urban_growth, color='#f95f24', width=barWidth, edgecolor='grey', label='Urban')\n\n# create rural_growth bars\nplt.bar(r2, rural_growth, color='#aedb21', width=barWidth, edgecolor='grey', label='Rural')\n\n# create underdeveloped_growth bars\nplt.bar(r3, underdeveloped_growth, color='blue', width=barWidth, edgecolor='grey', label='Underdeveloped')\n\n# add labels\nplt.xlabel('Years', fontweight='bold', fontsize = 15)\nplt.ylabel('Population Growth (%)', fontweight='bold', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(urban_growth))], years)\n\nplt.legend(categories)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/353.png')\nplt.show()\n```\nChoices:['Urban', 'Rural', 'Underdeveloped']\nStudent's Response:Urban\n",
    "Question Text:\nBased on the bar chart, which animal category has been allocated the second highest conservation funds?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Values in millions\nconservation_funds = {'Elephants': 35, 'Tigers': 40, 'Rhinos': 25, 'Pandas': 50, 'Gorillas': 30}\nanimals = list(conservation_funds.keys())\nfunds = list(conservation_funds.values())\n\nhatches = ['+', '/']\n\nbar_plot = plt.figure(figsize=[10,5])\nbars = plt.bar(animals, funds, color=['blue', 'green', 'red', 'black', 'purple'])\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i%2])\n\nplt.xlabel('Animals')\nplt.ylabel('Conservation Funds in millions($)')\nplt.title('Wildlife Conservation Funds for Different Animals')\nplt.ylim(0, 60)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/354.png')\nplt.show()\n```\nChoices:['Elephants', 'Tigers', 'Rhinos', 'Pandas', 'Gorillas']\nStudent's Response:'Tigers'\n",
    "Question Text:\nWhich person has the highest income from `Investment Income` ?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategory_names = ['Salaries', 'Investment Income', 'Real Estate', 'Business Income', 'Retirement Income', 'Unemployment Benefits', 'Other']\ncolors = ['#c9464e', '#615a10', '#21125a', '#4ee723', '#64789f']\nhatches = ['--', '-', '+o']\n\nsalaries = [250, 300, 350, 400, 450, 500, 550]\ninvestment_income = [100, 120, 140, 160, 180, 200, 220]\nreal_estate = [80, 90, 100, 110, 120, 130, 140]\nbusiness_income = [50, 60, 70, 80, 90, 100, 110]\nretirement_income = [200, 220, 240, 260, 280, 300, 320]\nunemployment_benefits = [30, 40, 50, 60, 70, 80, 90]\nother = [20, 30, 40, 50, 60, 70, 80]\n\nind = np.arange(len(salaries))\nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(10,7))\n\np1 = plt.bar(ind, salaries, width, color=colors[0], hatch=hatches[0])\np2 = plt.bar(ind, investment_income, width, bottom=salaries, color=colors[1], hatch=hatches[1])\np3 = plt.bar(ind, real_estate, width, bottom=np.array(salaries)+np.array(investment_income), color=colors[2])\np4 = plt.bar(ind, business_income, width, bottom=np.array(salaries)+np.array(investment_income)+np.array(real_estate), color=colors[3], hatch=hatches[2])\np5 = plt.bar(ind, retirement_income, width, bottom=np.array(salaries)+np.array(investment_income)+np.array(real_estate)+np.array(business_income), color=colors[4])\np6 = plt.bar(ind, unemployment_benefits, width, bottom=np.array(salaries)+np.array(investment_income)+np.array(real_estate)+np.array(business_income)+np.array(retirement_income))\np7 = plt.bar(ind, other, width, bottom=np.array(salaries)+np.array(investment_income)+np.array(real_estate)+np.array(business_income)+np.array(retirement_income)+np.array(unemployment_benefits))\n\nplt.ylabel('Income')\nplt.title('Income Sources')\nplt.xticks(ind, ('Tom', 'Dick', 'Harry', 'Jim', 'Joe', 'John', 'Tim'))\nplt.legend((p1[0], p2[0], p3[0], p4[0], p5[0], p6[0], p7[0]), category_names)\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/355.png')\nplt.show()\n```\nChoices:['Tom', 'Dick', 'Harry', 'Jim', 'Joe', 'John', 'Tim']\nStudent's Response:'Tim'\n",
    "Question Text:\nBased on the chart, is travel frequency by Air more than travel frequency by Road and Rail combined?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = [\"Air\", \"Rail\", \"Road\"]\nvalue = [30, 20, 10]\n\n# Figure size\nplt.figure(figsize=(10,6))\n\n# Colors and hatches\ncolors = ['#7aa476', '#aa1bb7', '#1b67aa']\nhatches = ['o', 'oo', '']\n\nbars = plt.bar(categories, value, color=colors)\n\n# Applying hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Some chart settings\nplt.xlabel('Transport Mode')\nplt.ylabel('Travel Frequency')\nplt.title('Travel Frequency by Transport Mode')\nplt.grid()\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/356.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nAre there more Eagles in the wild than in zoos?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\nbirds = ['Falcon', 'Eagle', 'Albatross', 'Crow', 'Duck', 'Peacock', 'Ostrich', 'Swallow', 'Flamingo']\ncount_in_wild = [55, 65, 40, 75, 50, 25, 30, 60, 35] # these counts are fictional\ncount_in_zoos = [25, 15, 20, 20, 45, 75, 70, 35, 60] # these counts are fictional\n\n# The position of the bars on the x-axis\nx = range(len(birds))\n  \n# Creating figure\nfig, ax = plt.subplots(figsize =(14, 7))\n  \ncolors = ['#432ed1', '#a9beb5', '#4065b5', '#286041', '#af0acb', '#f4c31b']\nhatches = ['**', '\\\\\\\\', '\\\\|', 'O', '..', '//', '--']\n\n# Creating the bar plot\nplt.bar(x, count_in_wild, color = colors[0], width = 0.4, label ='Count In The Wild', hatch=hatches[0])\nplt.bar(x, count_in_zoos, color = colors[1], width = 0.4, label ='Count In Zoos', hatch=hatches[1], bottom=count_in_wild)\n\n# Adding xticks \nplt.xlabel(\"Bird Types\", fontsize = 15) \nplt.ylabel(\"Counts\", fontsize = 15) \nplt.xticks([r for r in range(len(birds))], birds)\nplt.title(\"Count of Bird Types in the Wild and in Zoos\", fontsize = 20) \nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/357.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDid Europe experience the highest number of tourists among all continents in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# define categories and data\ncategories = ['Europe', 'Asia', 'North America', 'South America', 'Australia', 'Africa', 'Antarctica', 'Unknown']\nvalues_2019 = [70, 150, 90, 50, 35, 55, 5, 10]\nvalues_2020 = [55, 85, 60, 30, 20, 40, 1, 5]\n\nbarWidth = 0.35\n\nr1 = np.arange(len(categories))\nr2 = [x + barWidth for x in r1]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# create bars\nax.bar(r1, values_2019, width = barWidth, color ='#d45408', edgecolor ='grey', label ='2019')\nax.bar(r2, values_2020, width = barWidth, color ='#074cc3', edgecolor ='grey', label ='2020')\n\n# add labels and title\nax.set_xlabel(\"Continent\", fontsize=12)\nax.set_ylabel(\"Tourists (millions)\", fontsize=12)\nax.set_title(\"Number of Tourists by Continent in 2019 and 2020\", fontsize=16)\nax.set_xticks([r + barWidth / 2 for r in range(len(values_2019))])\nax.set_xticklabels(categories)\n\n# create legend\nax.legend()\n\nplt.tight_layout()\n\n# save the plot as a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/358.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nDoes the Brisbane Zoo have more Turtles than the Gold Coast Zoo?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# chart data\nanimals = ['Dogs', 'Cats', 'Rabbits', 'Horses', 'Turtles', 'Fish', 'Birds', 'Snakes']\ngold_coast_zoo = [45, 35, 20, 15, 40, 50, 25, 30]\nbrisbane_zoo = [40, 40, 30, 20, 30, 60, 30, 30]\n\ncolors = ['#731271','#317c34','#165147','#9b3eb2','#faf265','#9209fb','#73f911','#FA8072']\n\n# figure size\nplt.figure(figsize=(10, 7))\n\n# the bar width\nbar_width = 0.35\n\n# positions of the left bar boundaries\nbar1_positions = list(range(len(animals)))\n\nbar2_positions = [num + bar_width \n                  for num in range(len(animals))]\n\n# creating the bar plots\nplt.bar(bar1_positions, \n        gold_coast_zoo, \n        width = bar_width, \n        color = colors[0], \n        label='Gold Coast Zoo')\n\nplt.bar(bar2_positions, \n        brisbane_zoo, \n        width = bar_width, \n        color = colors[1], \n        label='Brisbane Zoo')\n\n# Adding the chart labels and title\nplt.xlabel('Animals')\nplt.ylabel('Number of Animals')\nplt.title('Number of Animals in the Zoos')\nplt.xticks([r + bar_width / 2 for r in range(len(gold_coast_zoo))], \n           ['Dogs', 'Cats', 'Rabbits', 'Horses', 'Turtles', 'Fish', 'Birds', 'Snakes'])\n\n# Adding the legends\nplt.legend()\n\n# save the figure\nplt.savefig('./bar_charts/bar_charts_visual_linguistic/train/360.png')\n\n# Displaying the chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the cost of Luxury Housing per SqFt in Seattle?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Affordable', 'Mid-range', 'Luxury', 'Mega-luxury']\nboston = [120, 180, 250, 580]\nsan_francisco = [160, 225, 310, 655]\nnew_york = [190, 260, 335, 700]\nseattle = [140, 195, 270, 600]\n\n# Figure size\nplt.figure(figsize=(12, 8))\n\n# Bar width\nbar_width = 0.2\n\n# Positions of the bars on the x-axis\nr1 = range(len(categories))\nr2 = [x + bar_width for x in r1]\nr3 = [x + bar_width for x in r2]\nr4 = [x + bar_width for x in r3]\n\n# Plot\nplt.bar(r1, boston, width = bar_width, color = '#cb30f6', edgecolor = 'black', label='Boston')\nplt.bar(r2, san_francisco, width = bar_width, color = '#52c5d8', edgecolor = 'black', label='San Francisco')\nplt.bar(r3, new_york, width = bar_width, color = '#77552a', edgecolor = 'black', label='New York')\nplt.bar(r4, seattle, width = bar_width, color = '#c567c4', edgecolor = 'black', label='Seattle')\n\n# Labels\nplt.xlabel('Categories', fontweight='bold', fontsize='12', color = '#333F4B')\nplt.xticks([r + bar_width for r in range(len(boston))], categories)\nplt.ylabel('Housing Cost', fontweight='bold', fontsize='12', color = '#333F4B')\n\n# Title\nplt.title('Housing Cost per SqFt in Different Cities', fontweight='bold', fontsize='14', color = '#333F4B')\n\n# Legend\nplt.legend()\n\n# Save\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/362.png')\n\nplt.show()\n```\nChoices:[250, 270, 335, 580]\nStudent's Response:270\n",
    "Question Text:\nWhich phone model had the second most units sold?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the data for the bar chart\ncategories = ['iPhone 11', 'Samsung Galaxy S10', 'Google Pixel 4', 'OnePlus 7T', 'Huawei P30', 'Xiaomi Mi 9', 'Nokia 7.2', 'Sony Xperia 5', 'LG G8', 'Motorola G7']\nvalues = [70, 55, 60, 50, 30, 45, 15, 25, 10, 5]\ncolors = ['#18532c', '#362876', '#f94830', '#3905dc', '#da050d', '#0c57f5']\n\n# Defining the size of the figure\nplt.figure(figsize=(10, 6))\n\n# Creating the bar chart\nbars = plt.barh(categories, values, color=colors)\n\n# Adding labels and title\nplt.xlabel('Number of Units Sold (in millions)')\nplt.ylabel('Phone Model')\nplt.title('Number of Units Sold per Phone Model')\n\n# Saving the chart as an image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/363.png')\n\nplt.show()\n```\nChoices:['iPhone 11', 'Samsung Galaxy S10', 'Google Pixel 4', 'OnePlus 7T', 'Huawei P30']\nStudent's Response:Samsung Galaxy S10\n",
    "Question Text:\nWhich bird has the largest combined count across both groups?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories\nbirds = ['Hawks', 'Woodpecker', 'Sparrow', 'Nightingale', 'Kingfisher', 'Hummingbird', 'Dove', 'Crow']\n\n# round numbers for two different groups - group1 and group2\ngroup1 = [95, 70, 45, 40, 80, 85, 50, 60]\ngroup2 = [80, 75, 50, 55, 85, 90, 60, 70]\n\nbarWidth = 0.25\n\n# position of bars on x-axis\nr1 = [x for x in range(len(birds))]\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10, 8))\nplt.bar(r1, group1, color='#80711f', width=barWidth, edgecolor='grey', label='Group 1')\nplt.bar(r2, group2, color='#43baee', width=barWidth, edgecolor='grey', label='Group 2')\n\n# adding labels\nplt.xlabel('Birds', fontweight='bold', fontsize=15)\nplt.ylabel('Count', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(group1))], birds)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/364.png')\nplt.show()\n```\nChoices:['Hawks', 'Woodpecker', 'Sparrow', 'Nightingale', 'Kingfisher', 'Hummingbird', 'Dove', 'Crow']\nStudent's Response:Hawks\n",
    "Question Text:\nWhat category has the second highest expense?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and corresponding values\ncategories = ['Rent', 'Utilities', 'Maintenance', 'Mortgage']\nvalues = [20, 25, 15, 30]\n\n# Colors and hatches for the bars\ncolors = ['#8cdb4f', '#004960', '#89b77f', '#004960']\nhatches = ['O|', '/o', 'oo', 'x']\n\n# Create a horizontal bar chart\nplt.figure(figsize=[10,8])\nbars = plt.barh(categories, values, color=colors, edgecolor='black')\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Adding labels\nplt.xlabel('Expenses ($)')\nplt.ylabel('Categories')\nplt.title('Housing Expenses')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/365.png')\nplt.show()\n```\nChoices:['Rent', 'Utilities', 'Maintenance', 'Mortgage']\nStudent's Response:'Rent'\n",
    "Question Text:\nWhich category has the highest sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\n#given round numbers\ncategories = ['Groceries']\nbar_colors = ['#efb97f']\n\nretail_data = {'Electronics': 45, 'Clothing': 30, 'Cosmetics': 25}\nfigure, ax = plt.subplots(figsize = (10, 8))\n\n# Make some bar charts\nbars = plt.bar(range(len(retail_data)), list(retail_data.values()), align='center', color=bar_colors[0])\n\n# Labeling\nplt.xticks(range(len(retail_data)), list(retail_data.keys()))\nplt.ylabel('Sales in $')\nplt.title('Retail Sales by Category')\n\n# Legend\nelectronics_patch = mpatches.Patch(color='#efb97f', label='Electronics')\nplt.legend(handles=[electronics_patch])\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/366.png')\nplt.show()\n```\nChoices:['Electronics', 'Clothing', 'Cosmetics']\nStudent's Response:Electronics\n",
    "Question Text:\nDid the 'America' category have more tourists than the 'Asia' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Europe', 'Asia', 'America', 'Africa', 'Australia', 'Antarctica', 'Atlantic Ocean', 'Pacific Ocean', 'Indian Ocean']\nvalues1 = [10, 20, 25, 15, 10, 5, 5, 10, 15]\nvalues2 = [15, 5, 10, 10, 10, 5, 5, 15, 5]\n\nxlabel = \"Categories\"\nylabel = \"Number of travelers (in thousands)\"\n\nbarWidth = 0.35\n\nfig,ax = plt.subplots(figsize=(12,6))\n\nbar1 = plt.bar(categories, values1, color='#868622', edgecolor='grey', width=barWidth)\nbar2 = plt.bar(categories, values2, bottom=values1, color='#34e613', edgecolor='grey', width=barWidth)\n\nplt.xlabel(xlabel)\nplt.ylabel(ylabel)\nplt.legend([bar1, bar2], ['Tourism', 'Business'])\nplt.title('Number of travelers by destination and purpose')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/367.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich country demonstrates the highest use of wind energy?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Solar', 'Wind', 'Hydro']\n\ncountries = ['US', 'China', 'Germany']\n\nvalues = np.array([\n    [30, 40, 45],\n    [50, 45, 35],\n    [40, 35, 30]\n])\n\ncolors = ['#ccd3b0', '#63cfec', 'orange']\nbar_width = 0.2\n\nr = np.arange(len(categories))\n\nplt.figure(figsize=(10, 6))\n\nfor i, country in enumerate(countries):\n    plt.bar(r + bar_width*i, values[i], color=colors[i], width=bar_width, edgecolor='black', label=country)\n\nplt.ylabel('Energy Source (in GW)')\nplt.title('Energy Sources by Country')\n\nplt.xticks([r + bar_width for r in range(len(categories))], categories)\n\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/368.png')\n\nplt.show()\n```\nChoices:['US', 'China', 'Germany']\nStudent's Response:China\n",
    "Question Text:\nWhich sector received the least amount of charity donations?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for categories\nvalues = [75, 80, 70, 85, 90, 65]\n\n# Categories\ncategories = ['Education', 'Human Rights', 'Health', 'Animals', 'Environment', 'Arts & Culture']\n\n# Colors\ncolors = ['#f1617a', '#3e773b', '#b29b1c', '#be89f3', '#f1617a', '#3e773b']\n\n# Hatches\nhatches = ['O', '-', '++', '**', '*-', 'O']\n\n# Plot\nplt.figure(figsize=(10,6))\nbars = plt.barh(categories, values, color=colors, edgecolor='black')\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Charity Donations in Millions')\nplt.title('Charity by Sector')\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/369.png')\nplt.show()\n```\nChoices:['Education', 'Human Rights', 'Health', 'Animals', 'Environment', 'Arts & Culture']\nStudent's Response:Arts & Culture.\n",
    "Question Text:\nIn Rural Areas, what is the category of expenditure that people spend the most?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategory_names = ['Urban', 'Suburban', 'Rural']\ncategories = ['Rent', 'Mortgage', 'Utilities', 'Maintenance', 'Insurance']\nbar_width = 0.3\n\nvalues = [[75, 100, 45], [70, 95, 60], [40, 45, 35], [30, 30, 20], [20, 25, 15]]\n\n# set figure size\nfig, ax = plt.subplots(figsize=(12, 7))\n\nx = np.arange(len(category_names))\n\n# create bars\nbars1 = ax.bar(x - bar_width, values[0], bar_width, color='#32eed4', hatch='\\\\\\\\', label=categories[0])\nbars2 = ax.bar(x, values[1], bar_width, color='#FFD700', hatch='+', label=categories[1])\nbars3 = ax.bar(x + bar_width, values[2], bar_width, color='#32CD32', hatch='O.', label=categories[2])\nbars4 = ax.bar(x + bar_width * 2, values[3], bar_width, color='#FF4500', label=categories[3])\nbars5 = ax.bar(x + bar_width * 3, values[4], bar_width, color='#4B0082', label=categories[4])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Monthly Housing Expenditure ($)')\nax.set_title('Monthly Housing Expenditure by Area and Category')\nax.set_xticks(x)\nax.set_xticklabels(category_names)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/370.png')\nplt.show()\n```\nChoices:['Rent', 'Mortgage', 'Utilities', 'Maintenance', 'Insurance']\nStudent's Response:Mortgage\n",
    "Question Text:\n\"Did 'Economic Policies' receive more interest than 'Education Policies' as per the bar chart?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfrom collections import OrderedDict\n\n# defining data\ndata = OrderedDict({\n    'Environmental Policies': 60,\n    'Economic Policies': 70,\n    'Social Policies': 80,\n    'Foreign Policies': 90,\n    'Healthcare Policies': 100,\n    'Education Policies': 110,\n    'Immigration Policies': 120,\n    'Justice Policies': 130\n})\n\n# defining colors and hatches\ncolors = ['#9f7210', '#15b4de', '#907a23', '#9f7210', '#15b4de', '#907a23', '#9f7210', '#15b4de']\nhatches = ['-', '\\\\|', '', '', '-', '\\\\|', '', '']\n\n# creating bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nbars = plt.bar(range(len(data)), list(data.values()), align='center', color=colors)\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# labeling\nplt.xticks(range(len(data)), list(data.keys()), rotation=30, ha='right')\nplt.xlabel('Policy Category')\nplt.ylabel('Interest Level')\nplt.title('Interest in Different Political Policies')\n\n# saving file\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/371.png')\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nIs 'Exercise' more impactful to mental health than 'Adequate Water'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Diet', 'Supplements', 'Sleep', 'Exercise', 'Stress Management', 'Routine Checkups', 'Adequate Water', 'Avoiding Harmful Habits']\nvalues1 = [40, 50, 45, 80, 55, 35, 50, 85]\nvalues2 = [20, 15, 30, 10, 20, 25, 10, 5]\n\nfig, ax = plt.subplots(figsize=[10,8])\n\nax.bar(categories, values1, color='#efdabc', hatch='\\\\\\\\', label='Impact in Mental Health')\nax.bar(categories, values2, color='#3af480', hatch='O.', bottom=values1, label='Impact in Physical Health')\n\nax.set_xlabel('Health Categories')\nax.set_ylabel('Importance (%)')\nax.set_title('Impact of Various Categories on Mental and Physical Health')\nax.legend()\n\nplt.grid(True)\nplt.xticks(rotation=45)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/372.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the population of New York greater than Los Angeles?\nFigure Code:\n```\nimport matplotlib.pyplot as plt  \n\ncities = ['New York', 'Los Angeles']\npopulation = [20, 15]\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nbar_colors = ['#80c488', '#a2b158']\nbar_hatches = ['+', 'o', '//']\n\nplt.barh(cities, population, color=bar_colors, hatch = '+o')\n\nplt.ylabel('Cities')\nplt.xlabel('Population (in millions)')\nplt.title('Population Distribution')\n\nplt.grid(True)\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/373.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas the funding for Panda conservation less than $40 million?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Elephants', 'Tigers', 'Pandas']\nvalues = [25, 40, 35]\n\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Create the bar chart\nbars = ax.barh(categories, values, color='#fb0053', hatch='//')\n\n# Adding and formatting title\nplt.title('Wildlife Conservation Efforts (in $ millions)', fontsize=20)\n\n# Adding x label\nplt.xlabel('Funding ($ millions)', fontsize=15)\n\n# Changing y label\nplt.ylabel('Animals', fontsize=15)\n\n# Save plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/374.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat economic sector had the largest combined contribution for 2010 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Agriculture', 'Manufacturing', 'Services', 'Technology', 'Real Estate']\nvalues1 = [20, 30, 55, 65, 45]\nvalues2 = [15, 40, 30, 20, 35]\n\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nbar1 = plt.bar(categories, values1, color='#f2df7c', hatch='x', edgecolor='black', width=bar_width)\nbar2 = plt.bar(categories, values2, bottom=values1, color='#ACE1AF', hatch='\\\\|', edgecolor='black', width=bar_width)\n\nax.set_xlabel('Economic Sectors', fontsize=14)\nax.set_ylabel('Percentage (%)', fontsize=14)\nplt.title('Contribution to Economy by Sector', fontsize=16)\nplt.legend((bar1[0], bar2[0]), ('2010', '2020'))\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/375.png')\nplt.show()\n```\nChoices:['Agriculture', 'Manufacturing', 'Services', 'Technology', 'Real Estate']\nStudent's Response:Technology\n",
    "Question Text:\nWhich travel mode has the highest distance traveled but the least carbon emission?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ntravel_modes = ['Car', 'Train', 'Bus', 'Plane', 'Bike', 'Foot', 'Boat', 'Subway']\ndistance_traveled = [50, 75, 65, 120, 35, 15, 70, 60]\ncarbon_emission = [35, 10, 15, 75, 2, 0, 25, 5]\n\ncolors = ['#fef0f6', '#03bebb', '#c39b9c', '#fef0f6', '#03bebb', '#c39b9c', '#fef0f6', '#03bebb']\nhatches = ['/', 'xx', 'o-', '\\\\', '|', '||', '/', 'xx']\n\nfig = plt.figure(figsize=(10, 5))\n\nplt.bar(travel_modes, distance_traveled, color=colors, hatch=hatches[0], label='Distance Traveled')\nplt.bar(travel_modes, carbon_emission, color=colors, hatch=hatches[1], label='Carbon Emission', bottom=distance_traveled)\n\nplt.ylabel('Counts')\nplt.title('Travel data in various modes')\nplt.legend(loc='upper right')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/376.png')\nplt.show()\n```\nChoices:['Car', 'Train', 'Bus', 'Plane', 'Bike', 'Foot', 'Boat', 'Subway']\nStudent's Response:'Train'\n",
    "Question Text:\nBased on the chart, which planet had the highest number of successful space exploration missions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Mars', 'Moon', 'Jupiter']\ncolors = ['#f8d484', '#4c98a9', '#4dc9f6']\nvalues1 = [25, 35, 45]\nvalues2 = [15, 25, 35]\n\nbarWidth = 0.25\n\n# Create position of bars on x-axis\nbar1 = [i for i in range(len(values1))]\nbar2 = [i+barWidth for i in bar1]\n\nplt.figure(figsize=(10,7))\n\nplt.bar(bar1, values1, color=colors[0], width=barWidth)\nplt.bar(bar2, values2, color=colors[1], width=barWidth)\n\n# Adding labels\nplt.xlabel('Planets', fontweight='bold', fontsize=15)\nplt.ylabel('Exploration Missions', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(values1))], categories)\n\nplt.title('Space Exploration Missions')\n\nplt.legend(['Successful Missions', 'Failed Missions'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/377.png')\n\nplt.show()\n```\nChoices:['Mars', 'Moon', 'Jupiter']\nStudent's Response:Jupiter\n",
    "Question Text:\nWhich Painting has a popularity of 50?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\npaintings = ['The Starry Night', 'The Last Supper', 'Mona Lisa', 'The Scream', 'Girl with a Pearl Earring', 'The Creation of Adam', 'The Persistence of Memory']\nvalues = [20, 30, 40, 50, 35, 45, 25]\ncolors = ['#a39d4c', '#a39f7b', '#c5f498', '#f2598a', '#f2598a', '#a39f7b', '#c5f498']\nhatches = ['oo', '-\\\\', '/o', '\\\\', 'x*', '--', 'OO']\n\n# Create the bar chart\nplt.figure(figsize = (10, 6))\nbars = plt.bar(paintings, values, color = colors)\n\n# Set hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Labeling and displaying\nplt.xlabel('Paintings')\nplt.ylabel('Popularity')\nplt.title('Popularity of Different Paintings')\nplt.xticks(rotation = 45)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/378.png')\nplt.show()\n```\nChoices:['The Starry Night', 'The Last Supper', 'Mona Lisa', 'The Scream', 'Girl with a Pearl Earring', 'The Creation of Adam', 'The Persistence of Memory']\nStudent's Response:'The Scream'\n",
    "Question Text:\nIs the total value of Real Estate (sum of Residential, Commercial, and Industrial) highest in California?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncategories = ['NewYork', 'Texas', 'Georgia', 'Florida', 'California']\nresidential = [20, 25, 30, 40, 50]\ncommercial = [15, 10, 20, 30, 45]\nindustrial = [25, 45, 30, 35, 20]\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.bar(categories, residential, color='#04aaf5', hatch='//', edgecolor='black')\nax.bar(categories, commercial, bottom=residential, color='#04aaf5', hatch='/o', edgecolor='black')\nax.bar(categories, industrial, bottom=[i+j for i,j in zip(residential,commercial)], color='#04aaf5', hatch='/', edgecolor='black')\n\n# Set chart title and labels\nax.set_xlabel('Real Estate Categories')\nax.set_ylabel('Values')\nax.set_title('Real Estate Data in Different States')\nax.legend(['Residential', 'Commercial', 'Industrial'])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/379.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the 'Agricultural Land' have the highest value among all categories?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the categories and their respective values\ncategories = ['Forest Land', 'Agricultural Land', 'Urban Land', 'Conservation Land', 'Vacant Land']\nvalues = [35, 50, 25, 30, 20]\n\n# Defining colors for each category\ncolors = ['#40643a', '#9be526', '#fe6b7c', '#36e9e3', '#d7dbbe']\n\n# Figure size\nplt.figure(figsize=(12, 8))\n\n# Creating the horizontal bar chart\nplt.barh(categories, values, color=colors)\n\n# Setting the title and labeling axes\nplt.title('This bar chart represents different types of land and their respective values')\nplt.xlabel('Values')\nplt.ylabel('Types of Land')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/381.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the population (in 1000s) of Phoenix as given in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Cities and their population in 1000s\ncities = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio']\npopulation = [8350, 3975, 2700, 2325, 1750, 1575, 1530]\n\n# Colors for the bars\ncolors = ['#7f6aa5', '#1f6c26', '#4e78dd', '#86aa16', '#7f6aa5', '#1f6c26', '#4e78dd']\n\nplt.figure(figsize=(10,5))\nplt.bar(cities, population, color=colors)\nplt.title('Population in Major US Cities')\nplt.xlabel('City')\nplt.ylabel('Population (in 1000s)')\nplt.xticks(rotation=30, ha='right')\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/382.png')\nplt.show()\n```\nChoices:['1530', '1750', '2325', '2700', '3975', '8350']\nStudent's Response:1750\n",
    "Question Text:\nWhat event has the highest magnitude according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['The Industrial Revolution', 'The American Revolution', 'World War I',\n              'Renaissance', 'The French Revolution', 'World War II', 'Middle Ages',\n              'Civil Rights Movement', 'The Cold War']\nvalues = [20, 25, 15, 30, 35, 20, 40, 45, 50]\ncolors = ['#4ce162', '#1e2031', '#945b17', '#b37c38', '#4ce162', '#1e2031', '#945b17', '#b37c38', '#4ce162']\n\nplt.figure(figsize=(20,10))\nplt.barh(categories, values, color = colors)\nplt.xlabel(\"Magnitude\")\nplt.ylabel(\"Historical Events\")\nplt.title(\"Magnitude of Historical Events\")\nplt.grid(axis = 'x')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/384.png')\nplt.show()\n```\nChoices:['The Industrial Revolution', 'World War I', 'World War II', 'The Cold War']\nStudent's Response:'The Cold War'\n",
    "Question Text:\nDoes Group B have the highest advertising expenditure on TV?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Your data\ncategories = ['TV', 'Radio', 'Social Media']\ngroup_a = [30, 20, 25]\ngroup_b = [35, 15, 20]\ngroup_c = [25, 20, 15]\n\nwidth = 0.3  # the width of the bars\nfiguresize = (10,8)\n\nfig, ax = plt.subplots(figsize=figuresize)\n\n# Adding the bars\nrects1 = ax.bar(np.arange(len(group_a)), group_a, width, label='Group A', hatch='xx')\nrects2 = ax.bar(np.arange(len(group_b)) + width, group_b, width, label='Group B', hatch='')\nrects3 = ax.bar(np.arange(len(group_c)) + 2*width, group_c, width, label='Group C', hatch='')\n\n# Adding some text for labels, title and custom x-axis tick labels\nax.set_ylabel('Advertising Spend in $K')\nax.set_xlabel('Advertising Medium')\nax.set_title('Spend by Advertising Medium and Group')\nax.set_xticks(np.arange(len(group_a)) + width)\nax.set_xticklabels(categories)\nax.legend()\n\n# Save it into \".png\" file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/385.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid more people attend the Tomorrowland than the Glastonbury festival?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Festivals data\nfestivals = ['Tomorrowland', 'Glastonbury']\nattendees = [100, 95]\n\n# Bar chart generation\nplt.figure(figsize=(10, 5))\nplt.barh(festivals, attendees, color=['blue', 'orange'])\nplt.xlabel('Attendees in Thousands')\nplt.ylabel('Festival')\nplt.title('Attendance at Different Festivals')\nplt.grid(True)\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/386.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHow many tourists are represented in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Tourists']\nvalues = [100]\ncolors = ['#e5f7db']\nlabels = ['Number of Tourists']\n\n# Create bar chart\nplt.figure(figsize=(10, 5))\nplt.barh(categories, values, color=colors)\nfor i, v in enumerate(values):\n    plt.text(v, i, \" \"+str(v), va='center', fontweight='bold')\n\n# Style the chart\nplt.title('Number of Tourists')\nplt.xlabel('Number')\nplt.xticks(range(0, max(values) + 20, 5))\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/387.png')\nplt.show()\n```\nChoices:[80, 90, 100, 110]\nStudent's Response:100\n",
    "Question Text:\nWhich category received the second lowest donations from Group 1?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Health', 'Education', 'Emergency', 'Environment', 'Arts', 'International', 'Human Services', \n              'Animal Rights', 'Research']\ngroup_1 = [30, 40, 65, 70, 55, 45, 75, 50, 60]\ngroup_2 = [35, 45, 60, 75, 60, 40, 70, 55, 65]\n\n# Total width for all bars at one x location\nwidth = 0.35       \n# Spacing in-between categories\nspacing = 0.02\nbar_width = (1 - spacing) * width / 2\n\nfig, ax = plt.subplots(figsize=(15,8))\n\nbar1 = ax.bar(categories, group_1, width=bar_width, color='#4eb79f', label='Group 1')\nbar2 = ax.bar(categories, group_2, width=bar_width, color='#462eeb', align='edge', label='Group 2')\n\nax.bar_label(bar1)\nax.bar_label(bar2)\n\nax.set_ylabel('Donation in Millions ($)')\nax.set_title('Charity Donations by Category')\nax.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/388.png')\nplt.show()\n```\nChoices:['Health', 'Education', 'Emergency', 'Environment', 'Arts', 'International', 'Human Services', 'Animal Rights', 'Research']\nStudent's Response:Education\n",
    "Question Text:\nIs 'Polar Bears' the category with highest allocation of conservation funds?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\ncategories = ['Tigers', 'Elephants', 'Giant Pandas', 'Snow Leopards', 'Rhinos', 'Sea Turtles', 'Polar Bears']\nvalues = [70, 60, 80, 55, 65, 75, 85]\ncolors = ['#ee95b2', '#9ea6fc', '#ee95b2', '#9ea6fc', '#ee95b2', '#9ea6fc', '#ee95b2']\nhatches = ['/', '|', '+o', None, '/', '|', '+o']\n\n# Create Figure and Axes instances\nfig, ax = plt.subplots(figsize=(12,8))\n\n# Horizontal bar chart\nbars = ax.barh(categories, values, color=colors, edgecolor='black')\n\n# Add hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set Labels and Title\nplt.xlabel('Conservation Funds in Million Dollars')\nplt.title('Wildlife Conservation Fund Allocation')\n\n# Save Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/389.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich country has the highest total pollution in the given data?\nFigure Code:\n```\n# Required Libraries\nimport matplotlib.pyplot as plt\n\n# Values\nair_pollution = [10, 18, 25, 15, 20, 30]   #amount of air pollution (in 10,000 tons)\nwater_pollution = [5, 10, 15, 7, 10, 25]   #amount of water pollution (in 10,000 tons)\nland_pollution = [7, 12, 18, 8, 15, 20]    #amount of land pollution (in 10,000 tons)\n\n# Category Labels\ncategories = ['China', 'USA', 'India', 'Russia', 'Brazil', 'Indonesia']\n\n# Bar Chart\nfig, ax = plt.subplots(figsize=(12, 8))\nbarWidth = 0.85\nax.bar(categories, air_pollution, color='#263eca', edgecolor='grey', width=barWidth)\nax.bar(categories, water_pollution, bottom=air_pollution, color='#248921', edgecolor='grey', width=barWidth)\nax.bar(categories, land_pollution, bottom=[i+j for i,j in zip(air_pollution, water_pollution)], color='#7bde40', edgecolor='grey', width=barWidth)\n\n# Labels, Title and Custom x-axis Tick Labels\nax.set_ylabel('Pollution (in 10,000 tons)')\nax.set_title('Pollution Levels by Country')\nax.set_xticks(categories)\nax.set_xticklabels(categories)\n\n# Saving the plot as a 'png'\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/390.png')\n\nplt.show()\n```\nChoices:['China', 'USA', 'India', 'Russia', 'Brazil', 'Indonesia']\nStudent's Response:'Indonesia'\n",
    "Question Text:\n: Does 'Fiction' category have more books than 'History' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Bar chart Data\ncategories = ['Fiction', 'Non-Fiction', 'Sci-Fi', 'Autobiography', 'History']\nbooks_count = [15, 20, 25, 10, 20]\n\n# Creating bar chart\nplt.figure(figsize=(10,7))\nbars = plt.bar(categories, books_count, hatch='x')\n\n# Labeling\nplt.xlabel('Categories')\nplt.ylabel('Number of Books')\nplt.title('Number of Books in Different Categories')\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/391.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the 'Construction' category have more employees than the 'Information Technology' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Employment data\njobs = ['Construction', 'Information Technology']\nemployees = [45, 55]  # round figures\n\nfig, ax = plt.subplots(figsize=(10, 5))  # large enough to avoid word overlap\nwidth = 0.35\n\nax.bar(jobs, employees, width)\nax.set_ylabel('Number of Employees')\nax.set_title('Employee numbers by job categories')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/392.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich type of land is present on more area in Asia than in Africa?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['farmland', 'mountain', 'desert', 'forest', 'coast', 'rainforest', 'tundra', 'grassland', 'swamp']\nAsia = [75, 85, 25, 30, 70, 65, 20, 60, 20]\nAfrica = [80, 55, 70, 50, 60, 70, 15, 45, 40]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\ncolors = ['#e14dc8', '#56fe15', '#d01e93']\nhatches = ['.', '//', '\\\\\\\\']\nfig, ax = plt.subplots(figsize=(12, 8))\n\nrects1 = ax.bar(x - width/2, Asia, width, label='Asia', color=colors[0], hatch=hatches[0])\nrects2 = ax.bar(x + width/2, Africa, width, label='Africa', color=colors[1], hatch=hatches[1])\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Types of Land')\nax.set_ylabel('Millions of Square kms')\nax.set_title('Types of land in Asia and Africa by Area')\nax.set_xticks(x)\nax.set_xticklabels(labels, rotation=45)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/393.png')\nplt.show()\n```\nChoices:['farmland', 'mountain', 'desert', 'forest', 'coast', 'rainforest', 'tundra', 'grassland', 'swamp']\nStudent's Response:mountain\n",
    "Question Text:\nDoes Candidate A have more public opinion poll support than Candidate B?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ncategories = ['Polls Favoring Candidate A', 'Polls Favoring Candidate B', 'Undecided Voters', 'Non-responders']\nvalues = [40, 35, 15, 10]\n\n# Setting color map\ncolors = ['#a094c7', '#25483c', '#a094c7', '#25483c']\n\n# Figure size\nplt.figure(figsize=(12, 6))\n\n# Creating the bar chart\nbars = plt.barh(categories, values, color=colors)\n\n# Adding value labels to each bar\nfor bar in bars:\n    width = bar.get_width()\n    plt.text(width-1, bar.get_y() + bar.get_height()/2, str(int(width)), va='center', ha='right', color='white')\n\n# Setting title and labels\nplt.title('Public Opinion Polls')\nplt.xlabel('Percentage (%)')\n\n# Saving the figure \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/394.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Python the most popular language according to this chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nlanguages = ['Python', 'Java', 'JavaScript', 'C++', 'Swift', 'Ruby', 'Go']\nusers = [75, 70, 80, 65, 60, 55, 50]  # in millions\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\nbars = plt.bar(languages, users, hatch='\\\\')\n\nax.set_xlabel('Languages', labelpad=15, fontsize=12, color='#333')\nax.set_ylabel('Number of Users (in millions)', labelpad=15, fontsize=12, color='#333')\nax.set_title('Popularity of Programming Languages', pad=15, fontsize=16, color='#333')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/395.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Electronics' category sales higher in 2020 than in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Assuming data for Retail categories\ncategories = ['Electronics', 'Apparel', 'Groceries', 'Health and Beauty', \n              'Home and Kitchen', 'Books', 'Sports', 'Entertainment', 'Toys', 'Others']\nsubcategories_2019 = [15, 35, 45, 20, 40, 25, 30, 10, 15, 40]\nsubcategories_2020 = [20, 40, 50, 30, 45, 30, 35, 15, 20, 45]\n\ncolors = ['#afec4b', '#1f3d2f', '#f79db4', '#f615c9', '#1ece14', '#378d86', '#200506', '#5523cd', '#791945']\n\nbarWidth = 0.5\nr = list(range(len(subcategories_2019)))\n\nfig, ax = plt.subplots(figsize=(15, 8))\n\nplt.bar(r, subcategories_2019, color=colors[0], edgecolor='white', width=barWidth, label='2019')\nplt.bar(r, subcategories_2020, bottom=subcategories_2019, color=colors[1], edgecolor='white', width=barWidth, label='2020')\n\nplt.xticks(r, categories, rotation=30)\nplt.yticks(list(range(0, 110, 10)))\n\nplt.suptitle('Retail Sales By Category')\nplt.xlabel('Category', fontsize=15)\nplt.ylabel('Sales in $1000s', fontsize=15)\nplt.legend(title='Year')\n\nplt.grid(visible=True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/396.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the average wind speed of Cloudy weather, as shown on the chart, higher than that of the Windy weather?\nFigure Code:\n```\nimport matplotlib.pyplot as plt \nimport numpy as np\n\n# set width of bar \nbarWidth = 0.20\n\n# data\nweather_categories = ['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy']\ntemperatures = [25, 20, 15, 0, 10]\nhumidity = [30, 60, 100, 40, 50]\nwind_speed = [5, 10, 20, 15, 25]\n\n# Set position of bar on X axis\nr1 = np.arange(len(temperatures))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\n# Make the plot\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.bar(r1, temperatures, color=\"#43cb86\", width=barWidth, edgecolor='grey', label='Temperature', hatch='\\\\\\\\')\nax.bar(r2, humidity, color=\"#948dd7\", width=barWidth, edgecolor='grey', label='Humidity', hatch='x*')\nax.bar(r3, wind_speed, color=\"#e70fd2\", width=barWidth, edgecolor='grey', label='Wind Speed', hatch='\\\\\\\\')\n \n# Adding xticks \nplt.xlabel('Weather Categories')\nplt.ylabel('Values')\nplt.xticks([r + barWidth for r in range(len(temperatures))], weather_categories)\nplt.title(\"Weather\")\nplt.legend()\nplt.tight_layout()\n\n# Saving to PNG.\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/397.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nHas the temperature increase in Canada been greater than in Alaska?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\ncategories = ['North Pole', 'South Pole', 'Greenland', 'Australia', 'Russia', 'Alaska', 'Canada', 'Norway', 'Iceland', 'Finland']\nvalues = [20, 25, 30, 35, 40, 45, 50, 55, 60, 65]\ncolors = ['#4318e3', '#16e250', '#3adaeb', '#be3d27', '#b4f106', '#acf0be', '#463b1c', '#5ad1ee', '#71dc4c', '#abd48d']\nhatches = ['++', '-', 'O.', '+o', '.']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10,8))\nbars = plt.bar(categories, values, color=colors, hatch=hatches[0])\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])  # Set the hatches\n\n# Add labels and title\nplt.xlabel('Regions')\nplt.ylabel('Temperature Increase (\u00b0C)')\nplt.title('Effect of Global Warming on Various Regions')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/398.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total number of participants (in thousands) for Independence Day?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['St. Patrick\\'s Day', 'Carnival', 'Thanksgiving', 'Christmas',\n              'Easter', 'Independence Day', 'Halloween']\n\nvalues1 = [10, 50, 30, 75, 40, 55, 60]\nvalues2 = [30, 35, 40, 20, 30, 20, 15]\n\ncolors = ['#b4b41d', '#d98fd6', '#07faff', '#6d49d1', '#b50c0a', '#b4b41d', '#d98fd6']\nhatches = ['x', 'OO', '+o', '\\\\', '||', '|', '.']\n\nplt.figure(figsize=(10, 6))\n\nplt.bar(categories, values1, color=colors, hatch=hatches[0])\nplt.bar(categories, values2, bottom=values1, color=colors, hatch=hatches[1])\n\nplt.xlabel('Festivals')\nplt.ylabel('Number of Participants (in thousands)')\nplt.title('Participants in Different Festivals')\n\nplt.legend(['First Day', 'Second Day'])\n\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/400.png')\nplt.show()\n```\nChoices:[70, 75, 80, 85]\nStudent's Response:75\n",
    "Question Text:\nDoes the bar chart depict that more people care about Quality Sleep more than Physical Exercise?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nhealth_topics = ['Physical Exercise', 'Quality Sleep']\nvalues = [70, 85]\n\n# Colors\ncolors = ['#216efc', '#e4fbc0']\n\n# Create bar chart\nplt.figure(figsize=(12, 6))\nplt.bar(health_topics, values, color=colors)\nplt.title('Percentage of People Caring About Different Health Topics', fontsize=14)\nplt.xlabel('Health Topics', fontsize=12)\nplt.ylabel('Percentage (%)', fontsize=12)\nplt.ylim(0, 100)\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/401.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the chart show that there are 20 cats named Mittens?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the category and its value\ncats = ['Mittens']\nvalues = [20]\n\n# Set the figure size large enough to avoid word overlap\nplt.figure(figsize=(10, 5))\n\n# Create the horizontal bar chart\nplt.barh(cats, values, color='#a67adc')\n\n# Label the x-axis\nplt.xlabel('Number of Cats')\n\n# Title the chart\nplt.title('Number of Cats Named Mittens')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/402.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the 'Strength Training' category have a total of 100 improvement points?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define the fitness categories\nfitness_categories = ['Cardio', 'Strength Training', 'Flexibility', 'Endurance', 'Balance']\n\n# define the amount of improvement in each category\nn = 5\nimprovements = [5*n, 10*n, 15*n, 20*n, 25*n]\nnormal = [5*n, 10*n, 15*n, 20*n, 25*n]\ngreat = [5*n, 10*n, 15*n, 20*n, 25*n]\n\nind = [x for x, _ in enumerate(fitness_categories)]\n\nplt.figure(figsize=(12, 8))\n\nplt.bar(ind, normal, width=0.6, label='normal', color='#b0876b', bottom=improvements)\nplt.bar(ind, great, width=0.6, label='great', color='#9cd678', bottom=[i+j for i,j in zip(improvements, normal)])\n\nplt.xticks(ind, fitness_categories)\nplt.ylabel(\"Improvement\")\nplt.xlabel(\"Fitness Categories\")\nplt.legend(loc=\"upper right\")\nplt.title(\"Fitness Improvements\")\n\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/403.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total number of hours played for Fortnite and Minecraft?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values to be plotted\ngames = ['Fortnite', 'PUBG', 'Minecraft', 'Call of Duty']\nhours_played = [40, 20, 35, 30]\n\n# Properties of the bars\ncolors = ['#79e6c0', '#ffa6d6', '#79e6c0', '#ffa6d6']\nhatches = ['O', '', 'O.', '']\n\n# Creating the horizontal bar chart\nplt.figure(figsize=(10, 8))  # Making the plot big for easier visibility\nplt.barh(games, hours_played, color=colors, hatch=hatches[2])\n\nplt.xlabel('Hours Played')\nplt.ylabel('Games')\nplt.title('Hours Played in Different Games')\nplt.grid(axis='x')  # Making grid only on x-axis for readability\n\n# Save it in desired folder\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/404.png')\n\nplt.show()\n```\nChoices:['35 hours', '40 hours', '70 hours', '75 hours']\nStudent's Response:75 hours\n",
    "Question Text:\n: What is the income value (in thousands) associated with the 'Middle Income' category in the given chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Low Income', 'Middle Income', 'High Income']\nvalues = [35, 70, 100] # use round numbers to ensure divisibility by 5\n\nplt.figure(figsize=(10, 5))\nplt.barh(categories, values, color='#5a9185')\nplt.xlabel('Income in Thousands ($)')\nplt.ylabel('Income Categories')\nplt.title('Income Distribution')\nplt.grid(axis='x', linestyle='--')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/406.png')\nplt.show()\n```\nChoices:['15', '35', '70', '100']\nStudent's Response:70\n",
    "Question Text:\nWhat was the total agricultural production (Fruits + Vegetables) in the year 2018?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values of bars rounded to nearest 5\nfruits = [70, 55, 60, 65, 50]\nvegetables = [30, 45, 40, 35, 50]\nyears = ['2016', '2017', '2018', '2019', '2020']\n\n# Figure size to avoid word overlap\nplt.figure(figsize=[10, 6])\n\n# Plotting\nplt.bar(years, fruits, color='#b29e74', label='Fruits')\nplt.bar(years, vegetables, bottom=fruits, color='green', label='Vegetables')\n\nplt.xlabel('Years')\nplt.ylabel('Production (in Tonnes)')\nplt.title('Agriculture Production in the last 5 years')\nplt.legend()\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/407.png')\nplt.show()\n```\nChoices:['90 tonnes', '100 tonnes', '110 tonnes', '120 tonnes', '130 tonnes']\nStudent's Response:100 tonnes\n",
    "Question Text:\nIs \"Running\" the most preferred fitness activity among the three in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Running', 'Swimming', 'Cycling']\nvalues = [50, 35, 45]\ncolors = ['#8ca784', '#fe4ac9', '#d32f03']\n\nplt.figure(figsize=(8, 5))\n\nplt.bar(categories, values, color=colors)\nplt.xlabel('Categories')\nplt.ylabel('Number of People')\nplt.title('Number of People Perfered Fitness Activities')\nplt.grid(axis='y')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/408.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDo more people pay attention to Election Results compared to Foreign Policies?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Public Opinion', 'Media Bias', 'Election Results', 'Political Activism', 'Budget Allocation', 'Foreign Policies']\ncolors = ['#87587b', '#9aa44a', '#710cf2', '#b14270', '#1ca60a']\n\nDemocrat_values = [30, 35, 40, 45, 75, 50]\nRepublican_values = [25, 30, 55, 40, 35, 45]\nIndependent_values = [45, 35, 5, 15, 20, 5]\n\nbarWidth = 0.8\nr = range(len(categories))\n\nplt.figure(figsize=(10, 7))\n\nplt.bar(r, Democrat_values, color=colors[0], edgecolor='white', width=barWidth, label=\"Democrat\")\nplt.bar(r, Republican_values, bottom=Democrat_values, color=colors[1], edgecolor='white', width=barWidth, label=\"Republican\")\nplt.bar(r, Independent_values, bottom=[i+j for i,j in zip(Democrat_values, Republican_values)], color=colors[2], edgecolor='white', width=barWidth, label=\"Independent\")\n\nplt.xlabel(\"Categories\", fontweight='bold')\nplt.ylabel(\"People in Thousands\", fontweight='bold')\nplt.title(\"Political Categories Insights\", fontweight='bold')\n\nplt.xticks(r, categories, rotation=45)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/409.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the UK have a higher population than Italy?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncountries = ['USA', 'Canada', 'Mexico', 'Italy', 'Germany', 'UK', 'Japan', 'Australia']\nnumber_of_cities = [130, 60, 40, 35, 120, 80, 150, 50]\npopulation_in_millions = [330, 40, 130, 60, 80, 65, 125, 25]\n\nbar_width = 0.35\nfig, ax = plt.subplots(figsize=(12,8))\n\nbar1 = ax.bar(countries, number_of_cities,bar_width,label='Number of cities', color = 'b')\nbar2 = ax.bar(countries, population_in_millions , bar_width, bottom=number_of_cities,label='Population in millions',color = 'r')\nax.bar_label(bar1, padding=3)\nax.bar_label(bar2, padding=3)\n\nax.set_xlabel('Countries')\nax.set_ylabel('Values rounded to nearest 5')\nax.set_title('Number of Cities and Population in Millions by Country')\nax.legend(loc = 'upper right')\n\nplt.xticks(rotation=45)\n\nplt.tight_layout()\nplt.grid()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/410.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs there more Stuffed Animals than Action Figures in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# create data\ntoys = ['Stuffed Animals', 'Action Figures']\nquantities = [30, 20]\ncolors = ['#39f781', '#8b7598']\n\n# plot data\nfig, ax = plt.subplots()\nax.barh(toys, quantities, color=colors)\n\n# adding annotations\nax.set_xlabel('Quantity')\nax.set_title('Quantity of Toys')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/411.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich weather type has the least percentage of sunshine?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\n\n# Categories\ncategories = ['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy',\n              'Thunderstorm', 'Hail', 'Misty', 'Overcast']\n\n# Data\nsunshine = [45, 30, 5, 15, 40, 20, 10, 5, 20, 30]\nclouds = [15, 25, 10, 10, 15, 25, 10, 10, 15, 15]\nrain = [10, 15, 45, 10, 5, 15, 40, 10, 10, 15]\nsnow = [5, 5, 5, 30, 0, 5, 5, 40, 0, 0]\nwind = [5, 5, 5, 5, 10, 5, 5, 5, 5, 5]\nfog = [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]\n\nind = [x for x, _ in enumerate(categories)]\n\nplt.figure(figsize=[10,10])\n\nplt.bar(ind, sunshine, width=0.8, label='Sunshine', color='#468e7e', bottom=clouds)\nplt.bar(ind, clouds, width=0.8, label='Clouds', color='#d936e6', bottom=sunshine)\nplt.bar(ind, rain, width=0.8, label='Rain', color='#6ee050', bottom=[i+j for i,j in zip(sunshine, clouds)])\n\nplt.xticks(ind, categories)\nplt.ylabel(\"Percentage\")\nplt.xlabel(\"Weather Type\")\nplt.legend(loc=\"upper right\")\nplt.title(\"Weather Distribution\")\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/412.png')\nplt.close()\n```\nChoices:['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy', 'Thunderstorm', 'Hail', 'Misty', 'Overcast']\nStudent's Response:Thunderstorm\n",
    "Question Text:\nDoes the Xiaomi brand sell more units in Region 2 than in Region 1?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Apple', 'Samsung', 'Huawei', 'Xiaomi', 'OPPO']\nregion1_sales = [70, 60, 50, 35, 30]\nregion2_sales = [75, 45, 65, 40, 50]\n\nx = range(len(categories))\n\nplt.figure(figsize=[10,6])\nplt.bar(x, region1_sales, width=0.2, color='b', align='center')\nplt.bar(x, region2_sales, width=0.2, color='g', align='edge')\n\nplt.xlabel('Phone Brands')\nplt.ylabel('Sales')\nplt.title('Phone Sales by Brand in Different Regions')\nplt.xticks(x, categories)\nplt.legend(['Region 1', 'Region 2'])\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/413.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBy what percentage did phone sales increase for Samsung from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Fixed data\ncategories = ['Apple', 'Samsung', 'Huawei', 'Xiaomi', 'OPPO', 'Vivo', 'LG']\nsales_2019 = [260, 300, 200, 125, 135, 95, 85]\nsales_2020 = [280, 330, 230, 140, 150, 110, 80]\n\nx = list(range(len(categories)))\n\nplt.figure(figsize=[10,5])\n\n# Bar width\nbar_width = 0.35\n\n# Generating two bar groups for sales in 2019 and 2020\nplt.bar(x, sales_2019, bar_width, color='b', align='center', label='2019')\nplt.bar(x, sales_2020, bar_width, color='g', align='edge', label='2020')\n\n# Title and labels\nplt.xlabel('Brands')\nplt.ylabel('Sales (millions)')\nplt.title('Phone Sales by Brand in 2019 and 2020')\nplt.xticks(x, categories)\n\n# Adding a legend\nplt.legend()\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/414.png')\nplt.show()\n```\nChoices:['5%', '10%', '30%', '15%']\nStudent's Response:10%\n",
    "Question Text:\nIs the number of Available Units of Apartments greater than the number of Sold Units in the same category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Apartments', 'Condos', 'Duplexes', 'Townhouses', 'Lofts', 'Studios', 'Penthouses', 'Mobile Homes', 'Cottages', 'Cabins']\ncolors = ['#ecc257', '#4e5997', '#23787c', '#2f098a', '#381813', '#4aba31', '#4d1f7c']\nhatches = ['||', 'O|', 'x*', 'OO', 'O', 'o', '\\\\|', 'oo', 'xx']\navailable_count = [50, 70, 60, 80, 65, 55, 85, 80, 70, 60]\nsold_count = [35, 55, 40, 65, 45, 40, 60, 70, 55, 40]\n\nbarWidth = 0.25\nfig = plt.subplots(figsize=(12, 8))\n\nbr1 = range(len(available_count))\nbr2 = [x + barWidth for x in br1]\n\nplt.bar(br1, available_count, color=colors, width=barWidth, edgecolor='grey', hatch=hatches[0], label='Available Units')\nplt.bar(br2, sold_count, color=colors, width=barWidth, edgecolor='grey', hatch=hatches[1], label='Sold Units')\n\nplt.xlabel('Housing Categories', fontweight='bold', fontsize=15)\nplt.ylabel('Units Count', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(available_count))], categories)\n\nplt.legend()\nplt.title('Comparison of Available and Sold Housing Units')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/415.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich game genre has the lowest total number of games in the three types (Action, Adventure, and Simulation)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\n# Setting the figure size\nplt.figure(figsize=(10,7))\n\n# The categories\ncategories = ['RPG', 'Shooter', 'Strategy']\n\n# Value for each category, rounded to the nearest 5\nRPG = [25, 35, 30]\nShooter = [35, 45, 40]\nStrategy = [20, 30, 25]\n\n# Bar width\nbarWidth = 0.35\n\n# Position of bars on x axis \nind = [x for x, _ in enumerate(categories)]\n\n# Making the plot\nplt.bar(ind, RPG, width=barWidth, label='Action', hatch='o-')\nplt.bar(ind, Shooter, bottom=RPG, width=barWidth, label='Adventure', hatch='xx')\nplt.bar(ind, Strategy, bottom=[i+j for i,j in zip(RPG, Shooter)], width=barWidth, label='Simulation')\n\n# Adding xticks\nplt.xlabel(\"Game genres\")\nplt.ylabel(\"Number of Games\")\nplt.xticks(ind, categories)\n\n# Create legend\nhandles = [mpatches.Patch(facecolor='orange', hatch='o-', label='Action'),\n           mpatches.Patch(facecolor='blue', hatch='xx', label='Adventure'),\n           mpatches.Patch(facecolor='green', label='Simulation')]\nplt.legend(handles=handles)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/416.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['RPG', 'Shooter', 'Strategy']\nStudent's Response:Strategy\n",
    "Question Text:\nWhat is the most popular fashion category according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Tops', 'Bottoms', 'Dresses', 'Suits', 'Shoes', 'Bags', 'Accessories', 'Outerwear', 'Swimwear', 'Socks']\nvalues = [30, 45, 50, 55, 30, 25, 40, 60, 35, 20]\n\n# Colors\ncolors = ['#19a7bc']*len(categories)\n\n# Hatches\nhatches = ['*-', '||', 'O|', '\\\\', '**', 'oo']\nhatches = hatches*2   # repeat to cover all bars\n\n# Create a figure\nfig, ax = plt.subplots(figsize=(15, 8))\n\n# Create a bar chart\nbars = ax.bar(categories, values, color=colors)\n\n# Add hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Titles and labels\nplt.title('Fashion Categories Popularity')\nplt.xlabel('Categories')\nplt.ylabel('Popularity')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/417.png')\nplt.show()\n```\nChoices:['Tops', 'Dresses', 'Suits', 'Outerwear', 'Socks']\nStudent's Response:Outerwear\n",
    "Question Text:\nDid the number of attendees increase for all festivals from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib\nmatplotlib.use('Agg')\n\n# Fixed data\nfestivals = [\"Diwali\", \"Christmas\", \"Thanksgiving\"]\nattendees_in_2019 = [55, 60, 65]\nattendees_in_2020 = [35, 40, 45]\nattendees_in_2021 = [40, 45, 50]\n\nbarWidth = 0.25\n\nfig = plt.subplots(figsize =(12, 8))\n\n# Set position of bar on X axis\nbr1 = [0,1,2]\nbr2 = [x + barWidth for x in br1]\nbr3 = [x + barWidth for x in br2]\n\n# Figure size and making the bar plot\nplt.bar(br1, attendees_in_2019, color ='#35f7c8', width = barWidth, edgecolor ='grey', label ='2019')\nplt.bar(br2, attendees_in_2020, color ='#35f793', width = barWidth, edgecolor ='grey', label ='2020')\nplt.bar(br3, attendees_in_2021, color ='#35f7f3', width = barWidth, edgecolor ='grey', label ='2021')\n\n# Adding xticks\nplt.xlabel('Festivals', fontsize = 15)\nplt.ylabel('No. of attendees (in thousands)', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(attendees_in_2019))], festivals)\nplt.yticks(range(0, 81, 10))\n\nplt.legend()\nplt.title('Number of attendees in Different Festivals in 2019, 2020 and 2021')\nplt.tight_layout()\n\n# Save the bar chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/418.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total area of rented land in both cities?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport numpy as np\n\n# Values\nN = 2\nownLandValues = (45, 70)\nrentLandValues = (30, 40)\n\nind = np.arange(N)    # the x locations for the groups\nwidth = 0.35          # the width of the bars: can also be len(x) sequence\n\nfig, ax = plt.subplots(figsize=(8,5))\n\np1 = ax.bar(ind, ownLandValues, width)\np2 = ax.bar(ind, rentLandValues, width, bottom=ownLandValues)\n\nax.axhline(0, color='grey', linewidth=0.8)\nax.set_ylabel('Amount (in Ha)')\nax.set_title('Land Ownership vs Rental')\nax.set_xticks(ind)\nax.set_xticklabels(('City 1', 'City 2'))\nax.legend((p1[0], p2[0]), ('Own Land', 'Rented Land'))\n\nax.bar_label(p1, label_type='center')\nax.bar_label(p2, label_type='center')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/419.png')\nplt.show()\n```\nChoices:[50, 90, 70, 40]\nStudent's Response:70\n",
    "Question Text:\nWhich technology has the highest usage rating in the Finance sector?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Usage of technology across sectors\nCloud = [70, 75, 50, 65] \nIoT = [60, 70, 40, 75]\nAI = [65, 80, 55, 85]\n\n# Related sectors\nsectors = ['Manufacturing', 'Healthcare', 'Education', 'Finance']\n\n#Creating bar chart\nfig, ax = plt.subplots(figsize=(12,6)) #making sure it is large enough\nbarWidth = 0.25 \nr1 = range(len(Cloud))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\n# Creating bars\nplt.bar(r1, Cloud, color='#df6dde', width=barWidth, edgecolor='grey', label='Cloud Computing')\nplt.bar(r2, IoT, color='#763cbc', width=barWidth, edgecolor='grey', label='IoT')\nplt.bar(r3, AI, color='#ec580e', width=barWidth, edgecolor='grey', label='AI')\n\n# Adding labels\nplt.xlabel('Sectors', fontweight='bold', fontsize=15)\nplt.ylabel('Usage rating', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(Cloud))], sectors)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/421.png')\nplt.show()\n```\nChoices:['Cloud computing', 'Internet of Things(IoT)', 'Artificial Intelligence(AI)']\nStudent's Response:In the grouped bar chart, we can see that in the Finance sector, the AI usage rating is the highest. It stands at 85, compared to 75 for IoT and 65 for cloud computing.\n",
    "Question Text:\nHow many more books in the category 'Children' are in stock compared to 'Non-Fiction'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Round values to the nearest 5\nbooks_in_stock = {'Fiction': 75, 'Non-Fiction': 65, 'Children': 85}\nvalues = list(books_in_stock.values())\ncategories = list(books_in_stock.keys())\n\nfig, ax = plt.subplots(figsize=(10, 5))\ncolors = ['#b0bd2f', '#f83757', '#c80930']\nplt.barh(categories, values, color=colors, hatch='//')\nplt.ylabel('Book Categories')\nplt.xlabel('Books in Stock')\nplt.title('Books in Stock by Category')\nax.set_xticks([0, 20, 40, 60, 80, 100])\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/422.png')\nplt.show()\n```\nChoices:[5, 10, 15, 20]\nStudent's Response:20\n",
    "Question Text:\nDoes \u201cPhysical Activity\u201d have a lower impact than \u201cMental Stress\u201d on Heath according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Dietary habits', 'Physical Activity', 'Sleep duration', 'Mental Stress']\nvalues = [25, 40, 35, 50]\n\n# Setting the plot\nplt.figure(figsize=(10,5))\n\n# Creating the bars\nplt.bar(categories, values, color='#90e359')\n\n# Adding title and labels\nplt.title('Impact of Various Factors on Health')\nplt.xlabel('Categories')\nplt.ylabel('Health Impact Level')\n\n# Setting y-axis limit\nplt.ylim(0, 60)\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/423.png')\n\n# Plotting\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas Russia's population higher in 2000 than in 1950?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Asia', 'Africa', 'Europe', 'North America', 'South America', 'Australia', 'Antarctica', 'Russia', 'China', 'India']\npopulation_1950 = [1400, 220, 550, 180, 110, 10, 0, 110, 570, 375]\npopulation_2000 = [3750, 820, 630, 315, 365, 45, 0, 230, 1300, 1050]\nbarWidth = 0.4\n\nbars1 = [i for i in population_1950]\nbars2 = [i for i in population_2000]\n\nr1 = [i for i in range(len(bars1))]\nr2 = [i + barWidth for i in r1]\n\nplt.figure(figsize=(15,8))\nplt.bar(r1, bars1, color='#1c3c23', width=barWidth, label='population_1950')\nplt.bar(r2, bars2, color='#7a0b4e', width=barWidth, label='population_2000')\n\nplt.xlabel('Continents and Countries', fontweight='bold', fontsize=13)\nplt.xticks([r + barWidth for r in range(len(bars1))], categories)\nplt.ylabel('Population (in millions)', fontweight='bold', fontsize=13)\nplt.title('Population Growth From 1950 to 2000', fontweight='bold', fontsize=15)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/424.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nIs the Labrador Retriever less popular than the Chihuahua breed according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The categories and their values\ncategories = ['Labrador Retriever', 'Bulldog', 'Chihuahua', 'Beagle']\nvalues = [35, 45, 55, 15]\n\n# Setting the color and hatch for each bar\ncolors = ['#e4552e', '#3eb005', '#392570', '#6e1934']\nhatches = ['o-', 'o-', 'o-', 'o-']\n\n# Creating the bar chart\nplt.figure(figsize=(8, 6))  # Making sure the figure size is large enough for long labels\nbars = plt.barh(categories, values, color=colors, hatch=hatches[0]) \n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Setting the title and labels\nplt.title('Dog Breeds Popularity')\nplt.xlabel('Popularity Score (higher is more popular)')\nplt.ylabel('Dog Breeds')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/425.png')\n\n# Finally showing the figure\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nDid the population in Africa increase continually from 2000 to 2030 according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Categories and values\nregions = [\"Africa\", \"Asia\", \"Europe\", \"Americas\"]\nyears = [2000, 2010, 2020, 2030]\nvalues = [[800, 850, 900, 950], [4000, 4200, 4400, 4600], [800, 810, 820, 830], [880, 890, 900, 910]]\ncolors = ['#a6457d', '#08076e', '#21a702', '#82c2c2']\nf, ax = plt.subplots(figsize=(10,5))\n\n# Create stacked bar chart\nfor i in range(len(regions)):\n    plt.bar(years, values[i], color=colors[i%4], bottom = [sum(values[j][k] for j in range(i)) for k in range(len(years))])\n\n# Set the title, labels and legend\nplt.title('Population Growth (in Millions)')\nplt.xlabel('Year')\nplt.ylabel('Population')\nplt.legend(regions)\n\n# Specify the axis limits\nplt.ylim(0, 7000)\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/426.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nIs 'Missions Completed' the category with the highest value?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set data\ncategories = ['Missions Completed', 'Astronauts Trained', 'Spacecrafts Deployed']\nvalues = [50, 30, 40]\ncolors = ['#1edcaa', '#428fb8', '#f56969']\nhatches = ['.', '\\\\\\\\', '\\\\']\n\nplt.figure(figsize=(10,5))\nbars = plt.bar(categories, values, color=colors)\n\n# Adding hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Space Exploration: Year In Summary')\nplt.ylabel('Counts')\nplt.xlabel('Categories')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/427.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Teddy Bears sell more than Building Sets?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories and values\ncategories = ['Teddy Bears', 'Action Figures', 'Board Games', 'Dolls', 'Educational Toys', 'Puzzles', 'Building Sets', 'Video Games', 'RC Toys']\nvalues1 = [20, 45, 50, 55, 70, 55, 30, 65, 50]\nvalues2 = [30, 15, 20, 25, 15, 20, 10, 20, 30]\n\n# colors and hatches\ncolors = ['#2fb76c', '#ac491a', '#6770a4', '#871fba', '#ea2eb0']\nhatches = ['*', 'OO', '+o']\n\n# create bar chart\nplt.figure(figsize=(15, 10))\nbar1 = plt.bar(categories, values1, color=colors[0], hatch=hatches[0])\nbar2 = plt.bar(categories, values2, bottom=values1, color=colors[1], hatch=hatches[1])\n\n# set labels and title\nplt.ylabel('Quantity Sold')\nplt.xlabel('Toy Types')\nplt.title('Toy Sales')\n\n# save bar chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/428.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Corn the most produced crop in the U.S. according to the given bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Corn', 'Soybean', 'Wheat', 'Cotton', 'Rice', 'Sorghum', 'Barley', 'Oat', 'Rye']\nvalues = [185, 80, 75, 35, 50, 15, 10, 5, 15]\nhatches = ['/o', '.', '|*', 'o', '||', '-', '+', 'x', '\\\\']\n\nplt.figure(figsize=(10,7))\n\nplt.title('2018 Agricultural Produce in the U.S.')\nplt.xlabel('Production in million bushels')\nplt.ylabel('Crop')\n\nbars = plt.barh(categories, values, color='grey')\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n    \nplt.tight_layout()\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/429.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the conservation effort for Tigers more than that for Kangaroos?\n\nTo answer this question, we'll compare the values associated with 'Tigers' and 'Kangaroos'. The options for a Boolean (yes/no) question will always be [yes, no].\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# category and value data\ncategories = ['Elephants', 'Tigers', 'Pandas', 'Leopards', 'Rhinoceros', 'Gorillas', 'Koalas', 'Kangaroos']\nvalues = [50, 45, 60, 70, 35, 55, 65, 40]\n\n# colors\ncolors = ['#979d83', '#21dfd8', '#979d83', '#21dfd8', '#979d83', '#21dfd8', '#979d83', '#21dfd8']\n\nplt.figure(figsize=(10, 8))\n\n# create horizontal bar chart\nplt.barh(categories, values, color=colors)\n\nplt.xlabel('Conservation Effort (in %)')\nplt.ylabel('Wildlife Species')\nplt.title('Wildlife Conservation Efforts')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/430.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDid the scores of all global warming-related categories increase from the year 2000 to the year 2020?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Emissions', 'Temperature Increase', 'Melting Glaciers', 'Sea Level Rise', 'Extreme Weather Events', 'Ocean Acidification', 'Loss of Biodiversity']\nmen_means = [50, 65, 70, 55, 60, 75, 80]\nwomen_means = [30, 35, 40, 45, 50, 55, 60]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10,6))\nrects1 = ax.bar(x - width/2, men_means, width, label='Year 2000', color='#9ef14c')\nrects2 = ax.bar(x + width/2, women_means, width, label='Year 2020', color='#9e5678')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Scores')\nax.set_title('Scores by year and category related to Global Warming')\nax.set_xticks(x)\nax.set_xticklabels(labels, rotation=45, ha='right')\nax.legend()\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/431.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the Liberal Party have more seats in the house than the Conservative Party?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Constants for the categories\nCONSERVATIVE_PARTY = 'Conservative Party'\nLIBERAL_PARTY = 'Liberal Party'\n\n# Rounded values for each categories\nvalues = {CONSERVATIVE_PARTY: 35, LIBERAL_PARTY: 45}\n\n# Create a bar chart\nplt.figure(figsize=(10, 6))\nplt.barh(list(values.keys()), list(values.values()), color = ['blue', 'red'])\n\n# Set chart labels and title\nplt.ylabel('Political Party')\nplt.xlabel('Seats won in the house')\nplt.title('Politics: Seats won in the house by major political parties')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/432.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n\"As represented in the bar chart, how many tablets were sold?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting figure size to accommodate potential long labels\nplt.figure(figsize=(12,7))\n\n# Defining the categories\ncategories = ['Laptops sold', 'Smartphones sold', 'Tablets sold', 'Smart Wearables sold']\n\n# Values corresponding to the categories\nvalues = [45, 55, 35, 50]\n\n# Hatches to be used for the categories\nhatches = ['-', 'o-', 'x', '\\\\']\n\n# Plotting the bar chart\nfor category, value, hatch in zip(categories, values, hatches):\n    plt.bar(category, value, hatch=hatch)\n\nplt.ylabel('Units sold (in thousands)')\nplt.title('Technology Sale - Category Wise')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/434.png')\nplt.show()\n```\nChoices:[30, 35, 40, 45]\nStudent's Response:35\n",
    "Question Text:\nWhich gas reduced its contribution towards Global Warming the most from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Make sure to create directory if it does not exist\nif not os.path.exists('bar_charts/bar_charts_visual_linguistic/train'):\n    os.makedirs('bar_charts/bar_charts_visual_linguistic/train')\n\ncategories = ['2017', '2018', '2019', '2020', '2021']\nCO2_values = [75, 80, 85, 70, 75]\nMethane_values = [15, 10, 5, 15, 20]\nNitrous_oxide_values = [10, 10, 10, 15, 5]\n\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nbar1 = plt.bar(categories, CO2_values, bar_width, color='#33eab3', hatch='.')\nbar2 = plt.bar(categories, Methane_values, bar_width, bottom=CO2_values, color='#2c096b', hatch='o-')\nbar3 = plt.bar(categories, Nitrous_oxide_values, bar_width, bottom=[i+j for i,j in zip(CO2_values, Methane_values)], color='#e618e9', hatch='\\\\')\n\nax.set_xlabel('Years')\nax.set_ylabel('% Contribution towards Global Warming')\nax.set_title('Contribution of different Greenhouse Gases towards Global Warming')\n\nplt.legend((bar1[0], bar2[0], bar3[0]), ('CO2', 'Methane', 'Nitrous oxide'), loc='upper left')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/434.png')\nplt.show()\n```\nChoices:['CO2', 'Methane', 'Nitrous Oxide']\nStudent's Response:Nitrous Oxide\n",
    "Question Text:\nWhat is the total number of employees in the \"Sales & Marketing\" category?\nFigure Code:\n```\n#Importing Required Libraries\nimport matplotlib.pyplot as plt\n\n#Data\nemploy_categories = ['IT & Software', 'Sales & Marketing']\nmen = [70, 55]\nwomen = [60, 40]\n\nlabels = employ_categories\nmen_std = [2, 3]\nwomen_std = [3, 5]\n\n#Plotting\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.bar(labels, men, 0.35, yerr=men_std, label='Men', color='#85b930')\nax.bar(labels, women, 0.35, bottom=men, yerr=women_std, label='Women', color='#58a70a')\n\nax.set_ylabel('Number of Employees')\nax.set_title('Employment in different categories separated by gender')\nax.legend()\n\n#Saving figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/435.png')\n```\nChoices:[85, 70, 95, 80]\nStudent's Response:95\n",
    "Question Text:\nIs 'To Kill a Mockingbird' the least counted book in the library?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nbooks = [('Harry Potter', 70), ('Lord Of The Rings', 50), ('To Kill a Mockingbird', 35), ('The Great Gatsby', 45), ('1984', 40)]\nbooks, num_books = zip(*books)\n\nhatches = ['x', '/', 'o', '|*']\n\nplt.figure(figsize=(10,10))\n\nbar_plot = plt.barh(books, num_books, color='skyblue')\n\nfor i in range(len(hatches)):\n    bar_plot[i].set_hatch(hatches[i])\n\nplt.xlabel('Count')\nplt.ylabel('Books')\nplt.title('Number of Books in a library')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/436.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs 'Storage' more relevant than 'Durability' in this bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\ncategories = ['CPU performance', 'RAM', 'Storage', 'Battery Life', 'Screen Resolution', 'Weight', 'Durability', 'Price']\nvalues = [90, 85, 75, 60, 70, 40, 55, 80]\n\n# Creating bar chart\nplt.figure(figsize=(10, 8))\nplt.barh(categories, values, color='#d92de3')\n\n# Adding titles and labels\nplt.title('Classification of Computers by Features')\nplt.xlabel('Relevance')\nplt.ylabel('Features')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/437.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the enrollment in community college greater than the enrollment in university according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# value initialization\ncategories = ['Community College', 'University']\nenrollment_values = [145, 170]\n\n# setting figure size for clearer visualization\nplt.figure(figsize=[10,5])\n\nplt.bar(categories, enrollment_values, color=['blue', 'red'])\nplt.title('Enrollment Numbers in Different Types of Education')\nplt.xlabel('Type of Education')\nplt.ylabel('Enrollment Value (in thousands)')\nplt.xticks(rotation = 0)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/438.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the Golden Retriever breed have more male dogs than female dogs in the stacked bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# the categories\ndog_breeds = ['Labrador', 'German Shepherd', 'Golden Retriever', 'Bulldog', 'Beagle', 'Poodle', 'Rottweiler']\n\n# the values\nmale_dogs = [45, 35, 55, 50, 25, 30, 40]\nfemale_dogs = [35, 45, 50, 50, 30, 40, 30]\n\n# figure size\nplt.figure(figsize=(10,7))\n\n# making the bar chart\nbar1 = plt.bar(dog_breeds, male_dogs, color='#e9b3d5', hatch='-/')\n\nbar2 = plt.bar(dog_breeds, female_dogs, bottom=male_dogs, color='#c2ceac', hatch='-/')\n\nplt.xlabel('Dog Breeds')\nplt.ylabel('Number of Dogs')\n\nplt.title('Population of Dog Breeds by Gender')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/439.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat breed of dog has the highest number of registrations according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlabels = ['Huskies', 'Poodles', 'Bulldogs', 'Labradors', 'Golden Retrievers', 'Pit Bulls', 'German Shepherds', 'Dalmatians']\nvalues = [55, 35, 40, 70, 60, 45, 50, 30]\ncolors = ['#68119c'] * 8\nhatches = ['/', '*', '/o', '\\\\', 'xx', '|*', 'O|', '++']\n\nfig, ax = plt.subplots(figsize=(10, 6))\nbars = ax.barh(labels, values, color=colors)\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\nax.set_title('Number of Dog Registrations for Different Breeds')\nax.set_xlabel('Number of Registrations')\nax.set_ylabel('Dog Breeds')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/440.png')\nplt.show()\n```\nChoices:['Huskies', 'Poodles', 'Bulldogs', 'Labradors', 'Golden Retrievers', 'Pit Bulls', 'German Shepherds', 'Dalmatians']\nStudent's Response:Huskies\n",
    "Question Text:\nFrom the Fishing chart, what was the type of fish caught in lesser number in 2020 compared to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories & Data\ncategories = ['Trout', 'Salmon', 'Bass', 'Mackerel', 'Sardine', 'Tuna']\nyear_2019 = [70, 80, 95, 85, 60, 50]\nyear_2020 = [90, 75, 80, 85, 65, 45]\n\nbarWidth = 0.5\nr = range(len(year_2019))\n\n# Create green (year 2019) Bars\nplt.bar(r, year_2019, color='g', edgecolor='white', width=barWidth, label=\"2019\")\n# Create red (year 2020) Bars\nplt.bar(r, year_2020, bottom=year_2019, color='r', edgecolor='white', width=barWidth, label=\"2020\")\n\n# Custom x axis\nplt.xticks(r, categories)\nplt.xlabel(\"Types of Fishes\")\nplt.ylabel('Number of Fishes Caught')\nplt.title('Comparison of Fish Caught in 2019 and 2020')\n\n# Add a legend\nplt.legend(loc=\"upper right\")\n\n# Adjust the figure size\nfig = plt.gcf()\nfig.set_size_inches(10, 6)\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/441.png')\n\nplt.show()\n```\nChoices:['Trout', 'Salmon', 'Bass', 'Mackerel', 'Sardine', 'Tuna']\nStudent's Response:Bass\n",
    "Question Text:\nBased on the bar chart, which sport has a total of 45 participants?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define sports categories\nsports = ['Basketball', 'Soccer', 'Tennis', 'Baseball', 'Swimming', 'Cycling']\n\n# Data\nmale_participants = [15, 40, 25, 35, 20, 15]\nfemale_participants = [10, 30, 20, 20, 15, 25]\n\n# Bar chart\nfig, ax = plt.subplots(figsize=(10, 8))\n\nax.bar(sports, male_participants, color='#fbf1b9', label='Male')\nax.bar(sports, female_participants, color='#44de21', bottom=male_participants, label='Female')\n\n# Labels \nax.set_xlabel('Sports')\nax.set_ylabel('Number of Participants')\nax.set_title('Comparison of Male and Female Participation in Different Sports')\n\n# Legend\nax.legend()\n\n# Savefig \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/442.png')\n\nplt.show()\n```\nChoices:['Basketball', 'Soccer', 'Tennis', 'Baseball', 'Swimming', 'Cycling']\nStudent's Response:Soccer\n",
    "Question Text:\nIs 'Solar' the Energy Source with the highest energy units?\n\nThe possible answers can be as follows:\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nenergy_sources = ['Solar', 'Hydroelectric', 'Nuclear']\nvalues = [10, 15, 20] # Round numbers and easy to read in a chart that has axis marks every 5 numbers.\n\n# Create bar chart\nplt.figure(figsize=[10,5]) # Sufficiently large to avoid word overlap.\nplt.barh(energy_sources, values, color=['#353c92', '#c7c9c2', 'orange'])\nplt.xlabel('Energy Units (in MJ)') # Relevant labels\nplt.ylabel('Energy Source')\nplt.title('Energy Sources')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/443.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the Healthcare sector has more employees than the IT sector?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories and data\ncategories = ['Manufacturing', 'Healthcare', 'Education', 'IT', 'Finance', 'Government', 'Retail']\nvalues = [35, 45, 40, 50, 55, 30, 25]\n\n# colors\ncolors = ['#510ce6', '#8c07af', '#bb1e4a', '#a92190', '#03fd26', '#8f788b', '#f6c966']\n\n# create bar chart\nplt.figure(figsize=(10,6))\nplt.bar(categories, values, color=colors)\nplt.xlabel('Employment Categories')\nplt.ylabel('Number of Employees (in thousands)')\nplt.title('Employment Distribution in Different Categories')\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/444.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid we launch more satellites than manned missions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories\ncategories = ['Number of Satellites Launched', 'Number of Manned Missions']\n\n# Values for bar chart\nvalues = [185, 60] # Rounded to the nearest 5\n\n# Creating horizontal bar chart\nbarlist = plt.barh(categories, values, color='#51d3e7')\n\nplt.title('Space Exploration Bar Chart')\nplt.xlabel('Number')\nplt.ylabel('Categories')\n\n# Ensuring that the labels and titles don't overlap\nplt.tight_layout()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/445.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Education' the charity category with the second highest donations?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncharities = ['Education', 'Environment', 'Health', 'Animals', 'Arts', 'Other']\ndonations = [35, 50, 45, 30, 40, 25] \nbar_colors = ['#c712fd', '#a3a2be', '#c712fd', '#a3a2be', '#c712fd', '#a3a2be']\nbar_hatches = ['/', 'O', '/', 'O', '/', 'O']\n\nplt.figure(figsize=(15,8))\nbars = plt.bar(charities, donations, color=bar_colors)\n\nfor bar, hatch in zip(bars, bar_hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Charity Categories')\nplt.ylabel('Donations ($ in millions)')\nplt.title('Donations to Different Charity Categories')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/446.png') \nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the total land usage in Region 3 equal to 65 000 square kilometres?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Stacking data\nurban_land = [10, 15, 20, 25, 30]\nagricultural_land = [20, 25, 30, 35, 40]\nindustrial_land = [5, 10, 15, 20, 25]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\ncategories = ['Region 1', 'Region 2', 'Region 3', 'Region 4', 'Region 5']\n\n# Plot bars\nax.bar(categories, urban_land, color='#a6aa49', label='Urban')\nax.bar(categories, agricultural_land, bottom=urban_land, color='#1fa7d1', label='Agricultural')\nax.bar(categories, industrial_land, bottom=[i+j for i,j in zip(urban_land, agricultural_land)], color='#8621b6', label='Industrial')\n\nax.set_ylabel('Land Area (in 1000 sq km)')\nax.set_xlabel('Regions')\nax.set_title('Land Use across Different Regions')\nax.legend()\n\n# Avoiding label overlap\nplt.tight_layout()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/447.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the score of Desktop is higher than Laptop?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\nlabels = ['Computer']\nmen_means = [20]\nwomen_means = [15]\n\nx = np.arange(len(labels))\nwidth = 0.35\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width/2, men_means, width, label='Desktop')\nrects2 = ax.bar(x + width/2, women_means, width, label='Laptop')\n\nax.set_ylabel('Scores')\nax.set_title('Scores by computer types')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/448.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid earthquakes occur more frequently than floods?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Two categories of Natural Disasters\ndisasters = ['Earthquake', 'Flood']\n\n# Frequencies of the disasters rounded to the nearest 5\nfreqs = [20, 15]\n\nplt.figure(figsize=(10, 6))\n\n# Creating the bar chart\nplt.bar(disasters, freqs, color=['red', 'blue'])\n\nplt.ylabel('Frequency')\nplt.title('Frequency of Natural Disasters')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/449.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the Plane cover the highest average distance per trip?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntransport_modes = ['Car', 'Train', 'Bus', 'Bicycle', 'Walking', 'Motorcycle', 'Plane']\ndistance_covered = [95, 80, 60, 20, 5, 70, 100]  # in kilometers\nhatches = ['..', 'O|', '/', '*-', 'x*', '-', 'x']\n\n# Create figure and axis\nplt.figure(figsize=(10, 5))\nbars = plt.bar(transport_modes, distance_covered)\n\n# Applying hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Average Distance Covered per Trip by Transportation Modes')\nplt.xlabel('Transportation Modes')\nplt.ylabel('Distance (Km)')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/450.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nIs the count of male Labradors higher than the count of female Labradors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nlabels = ['Poodles', 'Labradors', 'Bulldogs', 'German Shepherds']\nmen_means = [20, 34, 30, 35]\nwomen_means = [25, 32, 34, 25]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.3  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10,7))\nrects1 = ax.bar(x - width/2, men_means, width, label='Male', color='#55bfd2')\nrects2 = ax.bar(x + width/2, women_means, width, label='Female', color='#f8013b')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Number of Dogs')\nax.set_title('Number of Dogs by breed and gender')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/451.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of male employees in the Management department higher than the number of female employees?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Employment data\ndepartments = ['Sales', 'Marketing', 'Human Resources', 'Operations', 'Finance', 'Management']\nmen = [45, 50, 55, 60, 65, 70]\nwomen = [50, 45, 35, 40, 40, 50]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.bar(departments, men, color='#ac13a3', label='Men')\nax.bar(departments, women, bottom=men, color='#f45cb9', label='Women')\n\nax.set_ylabel('Number of Employees')\nax.set_xlabel('Departments')\nax.set_title('Employment Data by Department')\nax.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/454.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the number of employees who are Artists higher than that of Doctors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Engineers', 'Doctors', 'Artists']\nvalues = [125, 105, 140]\ncolors = ['#c4e75b', '#dbce93', '#45fc2e']\n\nplt.figure(figsize=(10,5))\n\nbars = plt.bar(categories, values, color=colors, alpha=0.7)\n\nplt.xlabel('Profession')\nplt.ylabel('Number of Employees')\nplt.title('Number of Employees in Different Professions')\n\nfor bar in bars:\n    yval = round(bar.get_height(), 0)\n    plt.text(bar.get_x() + bar.get_width()/2.0, yval, int(yval), ha='center', va='bottom')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/457.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich political party won the highest number of seats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = [\"Conservatives\", \"Liberals\", \"Socialists\", \"Libertarians\", \"Independents\", \"Greens\", \"Democrats\", \"Republicans\", \"Others\"]\nvalues = [40, 70, 50, 35, 45, 50, 75, 80, 30]\n\ncolors = ['#b36116', '#3c6911', '#c84b37', '#cea277', '#b36116', '#3c6911', '#c84b37', '#cea277', '#b36116']\nhatches = ['O.', 'O.', 'O.', 'O.', '', '', 'O.', 'O.', '']\n\nplt.figure(figsize=(10, 5))\nbars = plt.bar(categories, values, color=colors)\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n    \nplt.xlabel('Political Affiliations')\nplt.ylabel('Number of seats won')\nplt.title('Number of seats won by political parties')\nplt.xticks(rotation=45)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/458.png')\nplt.show()\n```\nChoices:['Conservatives', 'Liberals', 'Socialists', 'Libertarians', 'Independents', 'Greens', 'Democrats', 'Republicans', 'Others']\nStudent's Response:Republicans\n",
    "Question Text:\nWhich continent has the largest number of travel places?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfigure, ax = plt.subplots(figsize=(10, 10))\n\n# Categories for the bar chart and their relevant travel values\ncategories = ['Asia', 'Europe', 'North America', 'South America', 'Africa', 'Australia', 'Antarctica']\nvalues = [65, 70, 55, 35, 50, 40, 5]\n\n# Colors \ncolors = ['#b6bdcf', '#c72349', '#ba4acd', '#2caadb', '#eb2c73', '#2caadb', '#b6bdcf']\n\nax.bar(categories, values, color=colors)\n\n# Add labels and title\nax.set_xlabel('Continents')\nax.set_ylabel('Number of travelled places')\nax.set_title('Number of places travelled on each continent')\n\n# Set y-axis to increment in steps of 5\nplt.yticks(range(0, max(values) + 10, 5))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/460.png')\nplt.show()\n```\nChoices:['Asia', 'Europe', 'North America', 'South America', 'Africa', 'Australia', 'Antarctica']\nStudent's Response:'Europe'\n",
    "Question Text:\nIs 'Books' store the category with the lowest annual revenue in the chart?\n\nThe options for the answer are:\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their corresponding values\ncategories = ['Apparel', 'Electronics', 'Groceries', 'Furniture', 'Pharmaceuticals', 'Restaurants', 'Sports Goods', 'Books']\nvalues = [30, 45, 55, 40, 65, 35, 50, 25]\n\n# Colors for the bars\ncolors = ['#9a05e2', '#bff7f5', '#a3ed78', '#acfd24', '#b017dd', '#94bd2e', '#9c5538', '#bf24fd']\n\n# Create the bar chart\nplt.figure(figsize=(12, 8))\nplt.barh(categories, values, color=colors)\n\nplt.title('Annual Revenue of Different Types of Retail Stores')\nplt.ylabel('Type of Store')\nplt.xlabel('Annual Revenue (in Billions)')\nplt.grid(True)\n\n# Saving the plot in a specific directory\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/462.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich genre has seen a decline in the number of movies launched from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nnum_categories = 7\ncategories = ['Action', 'Drama', 'Comedy', 'Horror', 'Adventure', 'Mystery', 'Sci-fi']\nvalues_2019 = [55, 70, 30, 60, 40, 50, 35]\nvalues_2020 = [65, 75, 45, 55, 35, 45, 40]\n\nbar_width = 0.35\nindex = [i for i in range(num_categories)]\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nbar_2019 = ax.bar(index, values_2019, bar_width, color='#3ea09e', hatch='xx')\nbar_2020 = ax.bar([i+bar_width for i in index], values_2020, bar_width, color='#cfc9b8', hatch='++')\n\nax.set_title('Number of Movies Launched By Genre - 2019 Vs 2020')\nax.set_xlabel('Movie Genres')\nax.set_ylabel('Number of Movies')\nax.set_xticks([i+bar_width/2 for i in index])\nax.set_xticklabels(categories)\n\nax.legend((bar_2019, bar_2020), ('2019', '2020'))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/463.png')\nplt.show()\n```\nChoices:['Action', 'Drama', 'Comedy', 'Horror', 'Adventure', 'Mystery', 'Sci-fi']\nStudent's Response:['Horror', 'Adventure']\n",
    "Question Text:\nWhat is the total height of the bar for 'German Shepherd'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nbreeds = ['Golden Retriever', 'Labrador Retriever', 'German Shepherd']\ndog_counts = [20, 25, 30]\ndog_colors = [15, 10, 20]\ndog_weights = [60, 70, 80]\n\nbar_width = 0.35\n\n# Create bars\nplt.figure(figsize=[10,5])\nbar1 = plt.bar(breeds, dog_counts, color='#954da8', hatch='+o')\nbar2 = plt.bar(breeds, dog_colors, bottom=dog_counts, color='y', hatch='o')\nbar3 = plt.bar(breeds, dog_weights, bottom=[i+j for i,j in zip(dog_counts, dog_colors)], color='r', hatch='--')\n\n# Create legend\nplt.legend((bar1[0], bar2[0], bar3[0]), ('Count', 'Color Diversity', 'Average Weight'), bbox_to_anchor=(1,1))\n\n# Create labels\nplt.xlabel('Dog Breed')\nplt.ylabel('Counts & Weights')\nplt.title('Dog Breed Characteristics')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/464.png')\n\nplt.show()\n```\nChoices:[110, 120, 130, 140, 150]\nStudent's Response:130\n",
    "Question Text:\nHow many more Action Movies are there than Comedy Movies in our dataset?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the labels and values\nlabels = ['Comedy Movies', 'Action Movies']\nvalues = [40, 75]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Create a horizontal bar chart\nax.barh(labels, values, color=['#619fe4', '#F07855'])\n\n# Set the title and labels\nax.set_title('Number of Movies in different Categories')\nax.set_xlabel('Number of Movies')\nax.set_ylabel('Movie Categories')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/466.png')\n\n# Show the plot\nplt.show()\n```\nChoices:[10, 20, 35, 40]\nStudent's Response:35\n",
    "Question Text:\nHas \"New Horizons mission\" the highest number of missions among the categories?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ncategories = ['Human missions to Mars', 'Robotic missions to Mars', \n              'Satellite missions to Jupiter', 'Satellite missions to Saturn', \n              'Robotic missions to the Moon', 'Human missions to the Moon', \n              'Telescope missions', 'Voyager missions', \n              'Pioneer missions', 'New Horizons mission']\nvalues = [15, 25, 35, 20, 40, 45, 30, 10, 5, 50]\ncolors = ['#ad349d', '#7d0a04', '#0d96a2', '#b6058c', '#6cb068', '#ad349d', '#7d0a04', '#0d96a2', '#b6058c', '#6cb068']\nhatches = ['||', '', '||', '', '||', '', '||', '', '||', '']\n\n\n# Creating the bar chart\nplt.figure(figsize=(10, 8))\nbars = plt.barh(categories, values, color=colors, edgecolor='black')\n\n# Adding the hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Setting labels and title\nplt.xlabel('Number of Missions')\nplt.title('Space Exploration Missions')\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/467.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the adoption rate for Internet of Things (IoT) Devices higher than that for Artificial Intelligence?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories and corresponding values\ncategories = ['Artificial Intelligence', 'Cloud Computing', 'Big Data', 'Cybersecurity', 'IoT Devices', \n              'Blockchain', 'AR and VR', 'Machine Learning', '5G', 'Robotic Process Automation']\nvalues = [30, 45, 35, 40, 50, 20, 25, 45, 40, 30]\n\ncolors = ['#f4589c', '#31a45b', '#599124', '#7d320a', '#490166', '#3e4639', '#d70919', '#382a36']\n\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Create horizontal bar chart\nax.barh(categories, values, color=colors)\n\nax.set_xlabel('Technological Adoption Rate (%)')\nax.set_title('Rate of Adoption of Various Technologies')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/468.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Psychiatry the category with the lowest number of patients?\n\nThe possible answers to the question:\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define data\ncategories = ['Cardiology', 'Neurology', 'Psychiatry', 'Dermatology', 'Gastroenterology', 'Orthopedics']\nvalues = [30, 45, 35, 50, 40, 55]\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nax.bar(categories, values, color='#b514e6')\n\n# Add labels and title\nax.set_xlabel('Specialties')\nax.set_ylabel('Number of Patients')\nax.set_title('Number of Patients per Specialty')\n\n# Show grid\nax.grid(True)\n\n# Save figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/469.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich energy source has the least usage percentage represented in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n \n# Round values to 5\ndef round_to_five(n):\n    return round(n/5)*5 \n \n# Energy Sources\nEnergy_sources = ['Solar', 'Wind', 'Nuclear', 'Hydro', 'Natural Gas', 'Coal', 'Biofuel', 'Geothermal', 'Oil', 'Tidal']\n \n# Random rounded values for each energy source\nvalues = [round_to_five(x) for x in [15,30,45,20,35,50,25,40,10,55]]\n\n# Colors for each bar\ncolors = ['#2d8b07', '#718f0a', '#6dbe4e', '#0f7936', '#266b3e', '#0e7b7d', '#1b0c21', '#1eea78', '#2d8b07', '#718f0a']\n\n# Hatches for each bar\nhatches = ['*', 'x', '*-', 'x', '*', 'x', '*-', 'x', '*', 'x']\n\nplt.figure(figsize=(20,10))  # Increasing figure size to avoid word overlap\n \nplt.bar(Energy_sources, values, color=colors, hatch=hatches)\n \nplt.title(\"Energy Source Usage\")  # Chart Title\nplt.xlabel(\"Energy Sources\")   # X-label\nplt.ylabel(\"Usage in %\")  # Y-label\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/470.png')\n \nplt.show()\n```\nChoices:['Solar', 'Wind', 'Nuclear', 'Hydro', 'Natural Gas', 'Coal', 'Biofuel', 'Geothermal', 'Oil', 'Tidal']\nStudent's Response:Oil\n",
    "Question Text:\nAccording to the chart, what Type of Transport is used by 20 thousand commuters?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Defining values\ncategories = ['Buses', 'Trains', 'Cars', 'Bicycles', 'Motorbikes', 'Airplanes', 'Boats', 'Trams', 'Subways']\nvalues = [35,30,70,40,15,25,20,35,45]\ncolors = ['#6041b2','#6041b2','#6041b2','#6041b2','#6041b2','#6041b2','#6041b2','#6041b2','#6041b2']\nhatches = ['\\\\', '\\\\\\\\', 'x*', '*-', '/', 'o', '.', '-']\n\nfig, ax = plt.subplots(figsize = (15, 6))\nbars = plt.bar(categories, values, color=colors)\n\n#Setting Hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n#Setting Labels\nplt.xlabel('Types of Transportation')\nplt.ylabel('Number of Commuters (In Thousands)')\nplt.title('Number of Commuters using Different Types of Transportation')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/472.png')\nplt.show()\n```\nChoices:['Buses', 'Trains', 'Cars', 'Bicycles', 'Motorbikes', 'Airplanes', 'Boats', 'Trams', 'Subways']\nStudent's Response:Boats\n",
    "Question Text:\nIs 'Desert' the largest land type according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set the categories\ncategories = ['Desert', 'Forest', 'Mountains', 'Wetlands', 'Grassland', 'Arctic']\n\n# Set the values\nvalues = [55, 40, 60, 30, 50, 20]\n\n# Prepare some colors\ncolors = ['#ea93b3', '#9370db', '#3cb371', '#7b68ee', '#ffa07a', '#20b2aa']\n\n# Define the figure\nplt.figure(figsize=[14,10])\n\n# Add the values\nplt.barh(categories, values, color=colors)\n\n# Add necessary labels and titles\nplt.xlabel('Area (in million sq km)')\nplt.ylabel('Land Type')\nplt.title('Different Types of Land and Their Areas')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/473.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the usage of Internet for 'Online Education' increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the figure\nfig, ax = plt.subplots(figsize=(12,8))\n\n# Define the categories and corresponding data\ncategories = ['Email', 'Online Shopping', 'Social Media', 'Streaming Services', 'News Sites', 'Online Games', 'Online Education', 'Other']\nn_categories = len(categories)\ndata_2019 = [100,75,120,115,85,70,60,50]\ndata_2020 = [105,80,140,130,90,80,95,60]\n\n# Define the bar width and positions\nbarWidth = 0.35\nr1 = range(n_categories)\nr2 = [x + barWidth for x in r1]\n\n# Create bar for 2019\nplt.bar(r1, data_2019, color='#31a440', width=barWidth, edgecolor='black', hatch='xx', label='2019')\n# Create bar for 2020\nplt.bar(r2, data_2020, color='#3690c0', width=barWidth, edgecolor='black', hatch='+o', label='2020')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Internet Activity', fontsize=12)\nplt.xticks([r + barWidth/2 for r in range(n_categories)], categories)\n\nplt.ylabel('Usage Hours per Week', fontsize=12)\n\n# Add legend and title\nplt.legend(loc='upper left', bbox_to_anchor=(1,1), ncol=1)\nplt.title('Internet Usage per Category in 2019 and 2020', fontsize=15)\n\n# Save the Figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/474.png')\nplt.show()\n```\nChoices:['YES', 'NO']\nStudent's Response:YES\n",
    "Question Text:\nBased on the chart, which conservation activity has more number in thousands?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Trees Planted', 'Animals Rescued']\nvalues = [20, 30]\n\n# Create a bar chart\nplt.figure(figsize=(10, 5))\nplt.bar(categories, values, color='#6a98bf')\n\n# Labels and Titles\nplt.xlabel('Conservation Activities')\nplt.ylabel('Numbers (in thousands)')\nplt.title('Wildlife Conservation')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/475.png')\n\nplt.show()\n```\nChoices:['Trees Planted', 'Animals Rescued']\nStudent's Response:Animals Rescued\n",
    "Question Text:\nWhich field of medicine has the highest number of patients according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify data\ncategories = ['General Surgery', 'Orthopedics', 'Internal Medicine', 'Cardiology', 'Dermatology', \n              'Gynecology', 'Neurology', 'Radiology', 'Pediatrics']\nvalues = [25, 45, 30, 40, 20, 35, 50, 25, 40]\n\n# Specify colors and hatches\ncolors = ['#a75e22', '#57781a', '#5fbde7', '#938a22', '#ea9dac', '#f890f3', '#50ad35']\nhatches = ['o', '/', '|', '+', '|*', 'x', '.', '*']\n\n# Create the horizontal bar chart\nfig, ax = plt.subplots(figsize=(10, 7))\nbars = plt.barh(categories, values, tick_label=categories, color=colors[:len(categories)], edgecolor='black')\n\n# Apply hatches to bars\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\n# Set labels and title\nplt.xlabel('Number of Patients')\nplt.ylabel('Field of Medicine')\nplt.title('Number of Patients by Field of Medicine')\n\nplt.show()\n\n# Save figure\nfig.savefig('bar_charts/bar_charts_visual_linguistic/train/476.png')\n```\nChoices:['General Surgery', 'Orthopedics', 'Internal Medicine', 'Cardiology', 'Dermatology', 'Gynecology', 'Neurology', 'Radiology', 'Pediatrics']\nStudent's Response:Neurology\n",
    "Question Text:\nBased on the bar chart, which of the following music genres is the least popular?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify the values and colors for each category\ncategories = ['Rock', 'Blues', 'Country', 'Reggae', 'Hip Hop', 'Classical']\nvalues = [20, 35, 15, 30, 25, 45]\ncolors = ['#4f30b6', '#75baf7', '#4be00a', '#26ddd7', '#b21d3b', '#fafcb8']\nhatches = ['|', '|', '|', '|', '|', '|']\n\nplt.figure(figsize=(12,8))\nplt.barh(categories, values, color=colors, hatch=hatches[0])\n\nplt.title('Music Genres Popularity')\nplt.xlabel('Popularity Score')\nplt.ylabel('Music Genre')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/477.png')\nplt.show()\n```\nChoices:['Rock', 'Blues', 'Country', 'Reggae', 'Hip Hop', 'Classical']\nStudent's Response:Country\n",
    "Question Text:\nWhich language has the least number of speakers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['English', 'Spanish', 'Chinese', 'French', 'German']\nspeakers = [1005, 700, 905, 765, 620]\nlearners = [500, 405, 615, 330, 280]\n\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nbar_speakers = ax.bar(languages, speakers, bar_width, label='Speakers', color='#211cd6')\nbar_learners = ax.bar(languages, learners, bar_width, label='Learners', color='orange', hatch='oo', bottom=speakers)\n\nax.set_xlabel('Languages')\nax.set_ylabel('Population (in millions)')\nax.set_title('Population of Speakers vs Learners perLanguage')\nax.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/478.png')\nplt.show()\n```\nChoices:['English', 'Spanish', 'Chinese', 'French', 'German']\nStudent's Response:'German'\n",
    "Question Text:\nThe category 'Robotic Missions' has less than 20 missions or telescopes, yes or no?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Bar chart data\ncategories = ['Manned Missions', 'Robotic Missions', 'Space Probes', 'Telescopes']\nvalues = [30, 25, 15, 20]\ncolors = ['#f1f1e4', '#eb8c4f', '#eb8c4f', '#f1f1e4']\nhatches = ['+o', 'xx', '/o', '||']\n\nplt.figure(figsize=(10, 7))\n\n# Create bar chart\nbars = plt.bar(categories, values, color=colors)\n\n# Set the hatches for each bar\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Categories of Space Exploration')\nplt.ylabel('Number of Missions or Telescopes')\nplt.title('Space Exploration Efforts')\nplt.ylim(0, 35)\n\n# Save the chart as a png file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/480.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWas the least caught type of fish the Halibut?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the Categories and the corresponding values\ncategories = ['Salmon', 'Tuna', 'Bass', 'Trout', 'Mackerel', 'Halibut', 'Carp']\nvalues = [20, 15, 25, 20, 30, 10, 35]\n\n# Create a new figure with a custom size\nplt.figure(figsize=(10, 5))\n\n# Create the bar chart\nbars = plt.bar(categories, values, hatch='|')\n\n# Add a title and labels to the axes\nplt.title('Types of Fish Caught')\nplt.xlabel('Type of Fish')\nplt.ylabel('Number Caught')\n\n# Save the chart in the appropriate location\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/481.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich social media platform has the highest number of users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsocial_media = ['Facebook', 'Instagram', 'Twitter', 'Snapchat', 'LinkedIn', 'Pinterest', 'TikTok', 'YouTube', 'WhatsApp', 'Reddit']\nvalues1 = [30, 25, 20, 35, 40, 15, 10, 45, 50, 15]\nvalues2 = [20, 15, 10, 35, 20, 30, 20, 35, 25, 30]\nvalues3 = [20, 20, 20, 20, 30, 35, 50, 10, 5, 45]\n\nhatches = ['o', '|', 'x', '.', '||', '+', '/o', '\\\\\\\\', '*-', '\\\\']\n\nbars1 = plt.bar(social_media, values1, color='r', hatch=hatches[0])\nbars2 = plt.bar(social_media, values2, bottom=values1, color='b', hatch=hatches[1])\nbars3 = plt.bar(social_media, values3, bottom=[i+j for i,j in zip(values1, values2)], color='g', hatch=hatches[2])\n\nplt.ylabel('Total Users (in millions)')\nplt.title('Social Media Users')\nplt.xticks(rotation='vertical')\nplt.legend((bars1[0], bars2[0], bars3[0]), ('18-24', '25-34', '35-44'))\n\nplt.subplots_adjust(bottom=0.25)\nplt.gcf().set_size_inches(10, 7)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/482.png')\n\nplt.show()\n```\nChoices:['Facebook', 'Instagram', 'Twitter', 'Snapchat', 'LinkedIn', 'Pinterest', 'TikTok', 'YouTube', 'WhatsApp', 'Reddit']\nStudent's Response:'Facebook'\n",
    "Question Text:\nIs the metropolitan population of Los Angeles more than 50 thousand?\nFigure Code:\n```\n# Required Libraries\nimport matplotlib.pyplot as plt\n\n# Cities and their populations (in thousands)\ncities = ['NewYork', 'LosAngeles', 'Chicago', 'Houston', 'Phoenix']\ncity_population = [85, 40, 26, 23, 17]\nmetro_population = [70, 25, 19, 18, 12]\n\n# Create horizontal bars\nbarWidth = 0.5 \n# Position of bars on x-axis\nr = [0,1,2,3,4]\n\nfig = plt.subplots(figsize =(12, 8))\n\n# Creating city population bars\nplt.bar(r, city_population, color ='#67406f', \n        width = barWidth, edgecolor ='grey', label ='City Population')\n\n# Creating metro_population bars\nplt.bar(r, metro_population, color ='b', bottom = city_population, \n        width = barWidth, edgecolor ='grey', label ='Metropolitan Population')\n\n# Adding labels\nplt.xlabel(\"Cities\", fontsize =15)\nplt.ylabel(\"Population (in thousands)\", fontsize =15)\nplt.xticks([r for r in range(len(city_population))], \n           cities, rotation=40, fontsize =12)\nplt.title(\"City and Metropolitan Population Distribution\", fontsize =20)\n\nplt.legend()\n\n# Save the image   \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/483.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n:\nWhat is the season with the highest number of rainy days?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Spring', 'Summer', 'Autumn', 'Winter']\n\nweather = {\n    'Rain': [45, 10, 40, 60],\n    'Snow': [5, 0, 0, 20],\n    'Sun': [50, 90, 60, 20]\n}\n\ncolors = ['#ef611f', '#486e5f', '#6db5f8']\nhatch = ['//', '--', '\\\\', 'O']\n\nx = np.arange(len(categories))\nwidth = 0.2\n\nfig, ax = plt.subplots()\n\nrects = []\nfor i, (weather_type, days) in enumerate(weather.items()):\n    rects.append(ax.bar(x - width + i * width, days, width, label=weather_type, color=colors[i], hatch=hatch[i]))\n\nax.set_ylabel('No of Days')\nax.set_title('Weather per Season')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/485.png')\nplt.show()\n```\nChoices:['Spring', 'Summer', 'Autumn', 'Winter']\nStudent's Response:'Winter'\n",
    "Question Text:\nWhat is the highest number of total plants observed in a category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategory_labels = ['Trees', 'Shrubs', 'Herbs', 'Grass', 'Ferns', 'Vines', 'Mosses']\ncolors = ['#afb3e0', '#4b5646', '#6ea22b', '#a456fb', 'r', 'g', 'b']\nhatches = ['/', '-', '++', '|', '', '', '']\n\nvalues = [\n    [15, 20, 35, 25, 50, 30, 45],\n    [20, 30, 45, 50, 35, 40, 35],\n    [25, 35, 50, 40, 45, 25, 45],\n    [30, 40, 55, 35, 40, 35, 45]\n]\n\nfig, ax = plt.subplots(figsize=(15, 10))\n\nfor i in range(len(values)):\n    ax.bar(category_labels, values[i],\n           bottom=[sum(values[j][k] for j in range(i)) for k in range(len(category_labels))],\n           color=colors[i], hatch=hatches[i])\n\nax.set_ylabel('Units')\nax.set_title('Number of Different Types of Plants')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/486.png')\nplt.show()\n```\nChoices:['Trees', 'Shrubs', 'Herbs', 'Grass', 'Ferns', 'Vines', 'Mosses']\nStudent's Response:'Herbs'\n",
    "Question Text:\nThe question could be something like - Which car model had the highest sales according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their respective values\ncars = ['Ford Mustang', 'Chevy Camaro', 'Dodge Challenger', 'Toyota Supra', 'Nissan GTR', 'Acura NSX', 'BMW M3']\nsales = [40, 35, 50, 45, 30, 25, 40]\n\nplt.figure(figsize=[9,7])\n\n# Using required colors and more\ncolors = ['#f5de31', '#107be9', 'green', 'purple', 'orange', 'red', '#107be9']\n\nplt.barh(cars, sales, color=colors)\nplt.xlabel('Sales (in millions)')\nplt.ylabel('Car Models')\nplt.title('Sales comparison of different car models')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/489.png')\nplt.show()\n```\nChoices:['Ford Mustang', 'Chevy Camaro', 'Dodge Challenger', 'Toyota Supra', 'Nissan GTR', 'Acura NSX', 'BMW M3']\nStudent's Response:Dodge Challenger\n",
    "Question Text:\nWhich country has conducted most total space missions (Both Manned and Unmanned) in accordance to our bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values\nN = 4\nMannedMissions =[10, 25, 35, 40] \nUnmannedMissions = [30, 35, 55, 60] \n\nind = [x for x in range(N)]    # the x locations for the groups\n\n# Figure size\nplt.figure(figsize=(10,5))\n\n# Plotting\np1 = plt.bar(ind, MannedMissions, width=0.35)\np2 = plt.bar(ind, UnmannedMissions, width=0.35, bottom=MannedMissions)\n\nplt.ylabel('Missions')\nplt.title('Manned and Unmanned Space Missions by Country')\nplt.xticks(ind, ('USA', 'Russia', 'China', 'Europe'))\nplt.yticks(range(0, 110, 10))\nplt.legend((p1[0], p2[0]), ('Manned', 'Unmanned'))\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/490.png')\nplt.show()\n```\nChoices:['USA', 'Russia', 'China', 'Europe']\nStudent's Response:'Europe'\n",
    "Question Text:\nWhat is the total income from both sources (Salaried and Business) for an individual earning 35 thousand?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nincome_in_thousands = [20, 25, 30, 35, 40]\nsalaried_income = [15, 20, 25, 30, 35]\nbusiness_income = [5, 5, 5, 5, 5]\n\nfig, ax = plt.subplots(figsize=(10, 7))\nax.bar(income_in_thousands, salaried_income, label='Salaried Income')\nax.bar(income_in_thousands, business_income, bottom=salaried_income, label='Business Income')\n\nax.set_xlabel('Total Income (in thousands)', fontsize=15)\nax.set_ylabel('Income Sources (in thousands)', fontsize=15)\nax.set_title('Income Analysis', fontsize=18)\nax.legend()\n\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)\n\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/492.png')\nplt.show()\n```\nChoices:['30 thousand', '35 thousand', '40 thousand', '45 thousand']\nStudent's Response:35 thousand\n",
    "Question Text:\nIs the number of Baroque buildings more than the Romanesque buildings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\ntypes_of_architecture = ['Gothic', 'Romanesque', 'Baroque', 'Modern']\nvalues = [25, 40, 70, 55]\ncolors = ['#f291bd', 'b', 'g', 'r']\nhatches = ['*', 'oo', 'xx', '']\n\n# create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# plotting the bar chart\nbars = plt.barh(types_of_architecture, values, color=colors)\n\n# setting the hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Add some text for labels, title and custom x-axis\nplt.xlabel('Number of Buildings')\nplt.title('Number of Buildings by Architecture Type')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/493.png')\n\n# Show the chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the year 2030, what is the difference in the area of Residential Land and Industrial Land?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ncategories = ['Agriculture Land', 'Forest Land', 'Residential Land', 'Industrial Land']\nvalues1 = [30, 115, 50, 60]\nvalues2 = [40, 120, 60, 70]\nvalues3 = [45, 110, 65, 80]\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 6))\nrects1 = ax.bar(x, values1, width=0.2, color='#1b76c8', align='center')\nrects2 = ax.bar(x, values2, width=0.2, color='#5a9109', align='edge')\nrects3 = ax.bar(x, values3, width=0.2, color='#39ade8', align='edge')\n\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.set_ylabel('Area (in square miles)')\nax.set_title('Land types by area')\nax.legend((rects1[0], rects2[0], rects3[0]), ('2020', '2025', '2030'), loc='upper right')\nax.yaxis.set_major_locator(ticker.MultipleLocator(5))\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/494.png')\nplt.show()\n```\nChoices:['5 square miles', '10 square miles', '15 square miles', '20 square miles']\nStudent's Response:The prediction for Residential Land in 2030 is 65 square miles while that for Industrial Land is 80 square miles. To find the difference, subtract the smaller number from the larger one. Thus, 80 - 65 = 15 square miles.\n",
    "Question Text:\nDoes the Elementary Education category have more schools than the Secondary Education category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining categories and their values\ncategories = ['Elementary Education', 'Secondary Education']\nvalues = [45, 60]\n\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Defining bar chart properties\nbar_width = 0.55\nopacity = 0.8\n\nbar1 = ax.barh(categories[0], values[0], bar_width, color='#900090', hatch='|',label=categories[0])\nbar2 = ax.barh(categories[1], values[1], bar_width, color='#e713be', hatch='*',label=categories[1])\n\nax.set_xlabel('Numbers (in thousands)')\nax.set_title('Number of Schools in each Education Category')\n\nplt.legend()  \nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/495.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the Cactus grow more in Summer compared to Spring?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nplants = ['Rose', 'Tulip', 'Daisy', 'Orchid', 'Pansy', 'Poppy', 'Lily', 'Sunflower', 'Cactus']\ngrowth_in_spring = [10, 35, 25, 45, 20, 30, 40, 50, 0]\ngrowth_in_summer = [40, 60, 50, 65, 55, 75, 70, 80, 20]\n\nx = np.arange(len(plants))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize = (12, 8))\nrects1 = ax.bar(x - width/2, growth_in_spring, width, label='Spring', color='#b5af34', hatch='--')\nrects2 = ax.bar(x + width/2, growth_in_summer, width, label='Summer', color='#83c55c')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Plant types')\nax.set_ylabel('Growth in cm')\nax.set_title('Growth of different plants in Spring and Summer')\nax.set_xticks(x)\nax.set_xticklabels(plants)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/496.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich plant type has the highest total number across all seasons?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories and data for the bar chart\nplants = ['Roses', 'Tulips', 'Daisies', 'Lilies', 'Sunflowers', 'Orchids', 'Violets']\nspring = [20, 25, 30, 35, 40, 45, 50]\nsummer = [60, 65, 70, 75, 80, 85, 90]\nautumn = [20, 30, 40, 50, 60, 70, 80]\nwinter = [10, 15, 20, 25, 30, 35, 40]\n\n# plot settings and size\nfig, ax = plt.subplots(figsize=(12, 8))\nbar_width = 0.35\nindex = np.arange(len(plants))\nopacity = 0.8\n\n# create stacked bars\nrects1 = plt.bar(index, spring, bar_width, alpha=opacity, color='b', label='Spring')\nrects2 = plt.bar(index, summer, bar_width, alpha=opacity, color='r', bottom=spring, label='Summer')\nrects3 = plt.bar(index, autumn, bar_width, alpha=opacity, color='g', bottom=[i+j for i,j in zip(spring, summer)], label='Autumn')\nrects4 = plt.bar(index, winter, bar_width, alpha=opacity, color='y', bottom=[i+j+k for i,j,k in zip(spring, summer, autumn)], label='Winter')\n\nplt.xlabel('Plant Types')\nplt.ylabel('Number of Plants')\nplt.title('Number of each type of plant in each season')\nplt.xticks(index, plants)\nplt.legend()\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/497.png')\nplt.tight_layout()\nplt.show()\n```\nChoices:['Roses', 'Tulips', 'Daisies', 'Lilies', 'Sunflowers', 'Orchids', 'Violets']\nStudent's Response:'Violets'\n",
    "Question Text:\nIn which technology field does Company B have the least number of employees?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data \ncategories = ['Artificial Intelligence', 'Cybersecurity', 'Data Science', 'Web Development']\nvalues1 = [10, 15, 10, 20]\nvalues2 = [10, 10, 15, 10]\nvalues3 = [15, 10, 20, 10]\n\n# Define the figure size \nplt.figure(figsize=(10, 7))\n\n# Create the bar chart \nbar1 = plt.bar(categories, values1, color= '#31cf26', label='Company A')\nbar2 = plt.bar(categories, values2, bottom=values1, color='#270218', label='Company B')\nbar3 = plt.bar(categories, values3, bottom=[i+j for i,j in zip(values1, values2)], color='#816a86', label='Company C')\n\n# Labelling the axes and title\nplt.xlabel('Technology Fields')\nplt.ylabel('Number of Employees')\nplt.title('Number of Employees in Different Technology Fields in Different Companies')\n\n# Show legend\nplt.legend(loc='upper right')\n\n# Save the bar chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/498.png')\n\n# Show the bar chart\nplt.show()\n```\nChoices:['Artificial Intelligence', 'Cybersecurity', 'Data Science', 'Web Development']\nStudent's Response:Cybersecurity\n",
    "Question Text:\nIn the generated bar chart, which game genre has the lowest average playtime?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set the values\ngenres = ['Adventure', 'Action', 'Strategy']\nplaytime = [20, 40, 30]\n\nplt.figure(figsize=(10,6))\nplt.bar(genres, playtime, color = ['red', 'blue', 'green'])\n\n# Labelling the axes and adding title\nplt.xlabel('Game Genre')\nplt.ylabel('Average Playtime in Hours')\nplt.title('Average Playtime in Different Game Genres')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/499.png')\nplt.show()\n```\nChoices:['Adventure', 'Action', 'Strategy']\nStudent's Response:Adventure\n",
    "Question Text:\nBased on the bar chart, which energy source produces the least amount of energy measured in Gigawatt-hours?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Solar', 'Wind', 'Hydroelectric', 'Nuclear', 'Natural Gas', 'Coal', 'Oil', 'Biofuels', 'Geothermal', 'Tidal']\nvalues = [45, 60, 75, 40, 65, 85, 70, 30, 25, 15] \ncolors = ['#46c343', '#c6a56c', '#f46aff', '#b4de8f', '#c5d712', '#fcbb64', '#a62e6f', '#9c1ca1', '#f50496', '#1011b6']\nhatches = ['-', '\\\\']\n\n# Plot\nfig, ax = plt.subplots(figsize=[10,10])\nbars = ax.barh(categories, values, color=colors, edgecolor='black')\n\n# Assigning hatches\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\nplt.xlabel('Energy Production (in Gigawatt-hours)')\nplt.title('Energy Sources')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/500.png')\nplt.show()\n```\nChoices:['Solar', 'Wind', 'Hydroelectric', 'Nuclear', 'Natural Gas', 'Coal', 'Oil', 'Biofuels', 'Geothermal', 'Tidal']\nStudent's Response:Tidal\n",
    "Question Text:\nWhich income category has the highest level of income?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create list of categories, colors and values\ncategories = ['Self-Employed Income', 'Employee Income', 'Investment Income', 'Retirement Income']\ncolors = ['#0f9808', '#8d0f98', '#98170f', '#099880']\nvalues = [30, 15, 40, 25]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Create a bar chart\nax.bar(categories, values, color=colors)\n\n# Set the title and labels\nax.set_title('Income Categories')\nax.set_xlabel('Categories')\nax.set_ylabel('Income ($ in thousands)')\n\n# Rotate labels to avoid overlap if they are long\nplt.xticks(rotation=45)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/692.png')\n\nplt.show()\n```\nChoices:['Self-Employed Income', 'Employee Income', 'Investment Income', 'Retirement Income']\nStudent's Response:Investment Income\n",
    "Question Text:\nWhich company had the maximum revenue?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data to be plotted\ncompanies = ['Zara', 'H&M', 'Primark', 'Forever21']\nrevenue = [200, 165, 130, 145]\n\nplt.figure(figsize=(10, 5))\n\nplt.barh(companies, revenue, color='purple')\n\nplt.xlabel('Revenue in million $')\nplt.ylabel('Companies')\nplt.title('Revenue of Fashion Companies')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/694.png')\n```\nChoices:['Zara', 'H&M', 'Primark', 'Forever21']\nStudent's Response:Zara\n",
    "Question Text:\nWhich weather condition represents 15 days in a quarter?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Foggy', 'Wind', 'Thunderstorms']\nvalues = [25, 55, 45, 30, 60, 35, 15]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Horizontal Bar Chart\nax.barh(categories, values, color='skyblue')\n\n# Title and labels\nax.set_xlabel('Days')\nax.set_ylabel('Weather Condition')\nax.set_title('Weather Distribution in a Quarter')\n\n# Ticks on x-axis\nax.xaxis.set_ticks(range(0, 70, 5))\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/695.png')\n```\nChoices:['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Foggy', 'Wind', 'Thunderstorms']\nStudent's Response:Thunderstorms\n",
    "Question Text:\n: Is 'Modern' architecture style has more designs than 'Renaissance'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\narchitecture_styles = ['Gothic', 'Renaissance', 'Modern', 'Art Deco']\ndesigns = [20, 35, 45, 30]\ncolors = ['#a8dc32', '#8933c7', '#850a1b', '#ffca1b']\nhatches = ['..', '//', '\\\\\\\\', '--']\n\n# Adjust figure size\nplt.figure(figsize=(10,6))\n\n# Bar Chart\nfor i in range(len(architecture_styles)):\n    plt.bar(architecture_styles[i], designs[i], color=colors[i], hatch=hatches[i])\n\n# Labels and Title\nplt.xlabel('Architecture Style')\nplt.ylabel('Number of Designs')\nplt.title('Number of Designs By Architecture Style')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/696.png')\n\n# Show Plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHas Russia sent more satellites than USA?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data in grouped categories, rounded to nearest 5\nUSA = {'Satellites': 180, 'Probes': 75}\nRussia = {'Satellites': 155, 'Probes': 70}\n\n# Setting the positions and width for the bars\npos = list(range(len(USA))) \nwidth = 0.4 \n    \n# Plotting the bars\nfig, ax = plt.subplots(figsize=(10,5))\n\nplt.bar(pos, USA.values(), width, alpha=0.7, color='#25026f', label=list(USA.keys())[0])\nplt.bar([p + width for p in pos], Russia.values(), width, alpha=0.7, color='#80cf2f', label=list(Russia.keys())[0])\n\n# Setting the x-axis labels\nax.set_xticks([p + 0.5 * width for p in pos])\nax.set_xticklabels(USA.keys())\n\n# Setting the chart's title and labels\nplt.ylabel('Quantity')\nplt.xlabel('Exploration Type')\nplt.title('Space Exploration')\n\nplt.legend(list(['USA', 'Russia']), loc='upper right')\nplt.grid()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/698.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes City A have higher burglary incidents than City B?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncrime_types = ['Assault', 'Burglary', 'Robbery']\ncity_a = [50, 55, 60]\ncity_b = [65, 70, 75]\n\nx = np.arange(len(crime_types))\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nrects1 = ax.bar(x - 0.35/2, city_a, 0.35, label='City A')\nrects2 = ax.bar(x + 0.35/2, city_b, 0.35, label='City B')\n\nax.set_ylabel('Number of Incidents')\nax.set_title('Crime Rate Comparison between City A and City B')\nax.set_xticks(x)\nax.set_xticklabels(crime_types)\nax.legend()\n\ndef autolabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  \n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/699.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the Beagle more popular than the Rottweiler based on this chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ndog_breeds = ['Golden Retriever', 'Beagle', 'Dachshund', 'French Bulldog', 'Rottweiler']\npopularity_in_thousands = [85, 60, 75, 110, 95]\n\n# Tick locations\nlocation = [i for i in range(len(dog_breeds))]\n\nhatches = ['-\\\\', '+', '.', 'x*', '||']\n\nplt.figure(figsize=(10,6))\n\nbars = plt.barh(location, popularity_in_thousands, tick_label=dog_breeds, color='cornflowerblue')\n\n# Apply different hatches to each bar\nfor bar, hatch in zip(bars, hatches*len(bars)):\n    bar.set_hatch(hatch)\n\nplt.title('Popularity of Dog Breeds (in thousands)')\nplt.xlabel('Popularity')\nplt.ylabel('Dog Breed')\n\n# Layout before saving\nplt.tight_layout()\n\n# Save\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/700.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the Service sector in Country 1 contribute more to the economy than the Industry sector in Country 2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Agriculture', 'Industry', 'Services']\ncountries = ['Country_1', 'Country_2']\nvalues = [[15, 40], [35, 25], [50, 35]]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Colors\ncolors = ['#5550be', '#62fabe']\n\n# Stacked bar chart\nfor i in range(len(countries)):\n    plt.bar(countries, values[i], bottom = [sum(values[j][k] for j in range(i)) for k in range(len(countries))], color = colors[i % len(colors)], edgecolor = 'white')\n\n# Labels\nplt.xlabel('Countries')\nplt.ylabel('Economy Contribution (%)')\nplt.title('Economic sector contribution by country')\nplt.legend(categories)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/701.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the bar chart, which wildlife conservation effort has received the least funding?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# Prepare data\ncategories = ['Tiger Preservation', 'Elephant Protection', 'Bird Species Recovery']\nvalues = [15, 25, 10]\n\n# Create horizontal bar chart\nax.barh(categories, values, color=['red', 'green', 'blue'])\n\n# Set labels and title\nax.set_xlabel('Funding in millions ($)')\nax.set_title('Wildlife Conservation Efforts')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/703.png')\nplt.show()\n```\nChoices:['Tiger Preservation', 'Elephant Protection', 'Bird Species Recovery']\nStudent's Response:Bird Species Recovery\n",
    "Question Text:\nThe question related to this chart could be: \"What is the percentage of the public opinion poll for the 'Housing' category?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The 10 categories, in this case various public opinion polls.\ncategories = ['Environment', 'Healthcare', 'Immigration', 'Economy', 'Education', 'Infrastructure', 'Defense', 'Foreign Policy', 'Job Market', 'Housing']\n\n# The stacked bar data, rounded to nearest 5\ndata_totals = [50, 40, 60, 45, 65, 55, 70, 50, 40, 60]\n\n# The individual stack data, rounded to nearest 5\ndata_a = [10, 10, 20, 15, 20, 20, 30, 20, 10, 20]\ndata_b = [i-j for i, j in zip(data_totals, data_a)]\n\n# Different colors for each stack \ncolors = ['#947a34', '#6777c1']\n\n# Hatches for each stack\nhatches = ['.', '*']\n\n# To avoid word overlap, we make the figure size sufficiently large\nplt.figure(figsize=(12, 6))\n\n# Plotting the stacked bar chart\nplt.bar(categories, data_a, color=colors[0], hatch=hatches[0])\nplt.bar(categories, data_b, color=colors[1], hatch=hatches[1], bottom=data_a)\n\n# Labeling the axes \nplt.xlabel('Public Opinion Polls')\nplt.ylabel('Percentage')\nplt.title('Public Opinion Polls on Various Topics')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/704.png')\n\nplt.show()\n```\nChoices:['15%', '20%', '30%', '60%']\nStudent's Response:60%\n",
    "Question Text:\nBased on the bar chart, in which year does Twitter have the least number of users (in millions)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values\nusers_facebook = [50, 55, 60, 75, 80]\nusers_twitter = [40, 35, 40, 50, 65]\n\n# Bar positions\nbarWidth = 0.25\nbr1 = range(len(users_facebook))\nbr2 = [x + barWidth for x in br1]\n\n# Create bars\nplt.figure(figsize=(10, 5)) # To avoid word overlap \nplt.bar(br1, users_facebook, color='r', width=barWidth, edgecolor='black', label='Facebook')\nplt.bar(br2, users_twitter, color='b', width=barWidth, edgecolor='black', label='Twitter')\n\n# Adding labels\nplt.xlabel('Years from 2020', fontweight='bold')\nplt.ylabel('Users (in Millions)', fontweight='bold')\nplt.xticks([r + barWidth/2 for r in range(len(users_facebook))], ['2020', '2021', '2022', '2023', '2024'])\n\n# Adding title and legend\nplt.title('Comparison of Facebook and Twitter users over time')\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/706.png') # Save the figure \n\nplt.show()\n```\nChoices:['2020', '2021', '2022', '2023', '2024']\nStudent's Response:2021\n",
    "Question Text:\nDoes SpaceX have more launches in 'Rovers' than 'Blue Origin'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#bar chart data\ncategories = ['Space Stations', 'Rovers', 'Telescopes', 'Interstellar Probes', 'Lunar Landers']\nblue_origin = [10, 20, 15, 5, 10]\nspacex = [15, 30, 10, 5, 15]\n\nx = range(len(categories)) \n\nfig, ax = plt.subplots(figsize=(15, 7))\n\n# plotting bars for each category\nplt.bar(x, blue_origin, width=0.4, label='Blue Origin', color='#98975a', align='center')\nplt.bar(x, spacex, width=0.4, label='SpaceX', color='#ddff25', bottom=blue_origin, align='edge')\n\n# setting labels and titles\nplt.ylabel('Launches')\nplt.title('Space Launches by Category and Company')\nplt.xticks(x, categories)\nplt.legend()\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/707.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDoes the 'Poetry' category have less books written by male authors compared to those written by female authors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Poetry', 'Drama', 'Fantasy', 'Science Fiction', 'Mystery']\nvalues1 = [40, 70, 65, 85, 90]\nvalues2 = [60, 30, 35, 15, 10]\ncolors = ['#d9f7e8', '#9c9d13', '#d6649f', '#b58d7b', '#c32da9']\n\nfig, ax = plt.subplots(figsize=(9, 6))\nbar1 = plt.bar(categories, values1, color=colors[0], edgecolor='white')\nbar2 = plt.bar(categories, values2, bottom=values1, color=colors[1], edgecolor='white')\n\nplt.xlabel('Literature Categories', fontsize=12)\nplt.ylabel('Number of Books', fontsize=12)\nplt.title('Distribution of Book Types', fontsize=15)\n\nplt.legend([bar1, bar2], ['Male Authors', 'Female Authors'])\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/708.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich genre has exactly 35 books?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n\ncategories = ['Mystery', 'Romance', 'Science Fiction', 'Fantasy', 'Biography']\nvalues = [20, 45, 35, 50, 25] # Rounded to nearest 5\ncolors = ['#2c4f69' for _ in categories]\nhatches = ['//' for _ in categories]\n\n\nplt.figure(figsize=[10,8])\nplt.barh(categories, values, color=colors, hatch=hatches[0])\n\n\nplt.xlabel('Number of Books')\nplt.ylabel('Genre')\nplt.title('Number of Books per Genre')\n\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/709.png')\n\n\nimport matplotlib.pyplot as plt\n\ncategories = ['Mystery', 'Romance', 'Science Fiction', 'Fantasy', 'Biography']\nvalues = [20, 45, 35, 50, 25] # Rounded to nearest 5\ncolors = ['#2c4f69' for _ in categories]\nhatches = ['//' for _ in categories]\n\nplt.figure(figsize=[10,8])\nplt.barh(categories, values, color=colors, hatch=hatches[0])\n\nplt.xlabel('Number of Books')\nplt.ylabel('Genre')\nplt.title('Number of Books per Genre')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/709.png')\n```\nChoices:['Mystery', 'Romance', 'Science Fiction', 'Fantasy', 'Biography']\nStudent's Response:Science Fiction\n",
    "Question Text:\nWhat region has the least number of foreign tourists?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories\ncategories = ['Asia', 'Europe', 'Americas', 'Africa', 'Oceania']\n\nN = len(categories)\n\n# tourism values (these values are in millions)\nlocal_tourists = [345, 320, 250, 150, 70]\nforeign_tourists = [235, 200, 180, 80, 30]\n\nind = [x for x, _ in enumerate(categories)]\n\nplt.bar(ind, local_tourists, width=0.8, label='Local Tourists', color='skyblue', edgecolor='grey', hatch='||')\nplt.bar(ind, foreign_tourists, width=0.8, label='Foreign Tourists', color='navy', edgecolor='grey', hatch='//', bottom=local_tourists)\n\nplt.xticks(ind, categories)\nplt.ylabel(\"Number of Tourists (in millions)\")\nplt.xlabel(\"Region\")\nplt.legend(loc=\"upper right\")\nplt.title(\"Tourism by Region\")\n\nplt.grid(True)\n\nplt.gcf().set_size_inches(15, 10)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/710.png')\nplt.show()\n```\nChoices:['Asia', 'Europe', 'Americas', 'Africa', 'Oceania']\nStudent's Response:'Oceania'\n",
    "Question Text:\nFrom the bar chart, what political topic has the least public support?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting data and labels\ntopics = ['Gun Control', 'Environment', 'Healthcare', 'Education', 'Immigration']\nvalues = [20, 25, 30, 35, 40]\ncolors = ['#3de330', '#3334bf', '#87fb62', '#cf1144', '#f5b642']\n\n# Creating figure\nfig = plt.figure(figsize =(10, 5))\n\n# Creating the bar chart\nplt.bar(topics, values, color = colors)\n\n# Adding labels and title\nplt.ylabel('Support %')\nplt.title('Politics topics and their public support')\nplt.ylim(0,50)\n\n# Saving the chart \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/711.png')\nplt.show()\n```\nChoices:['Gun Control', 'Environment', 'Healthcare', 'Education', 'Immigration']\nStudent's Response:Gun Control\n",
    "Question Text:\nAre there more Cars than Bears in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntoys = ['Bears', 'Dolls', 'Puzzles', 'Cars']\ncounts = [10, 20, 15, 25]\n\nfig = plt.figure(figsize=(8, 6))\nplt.bar(toys, counts, color='#6091a0')\n\nplt.xlabel('Type of Toys')\nplt.ylabel('Number of Toys')\nplt.title('Number of Different Types of Toys')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/712.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nLooking at the bar chart 'Employment Distribution', which job category has the highest number of employees?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Employment data\ncategories = ['Engineering', 'Education', 'Healthcare']\nvalues = [20, 25, 15]\n\n# Bar color\ncolors = ['#a8f03b', '#2193d8', '#769ca0']\n\n# Hatches\nhatches = ['o', '\\\\', '/o']\n\n# Bar chart\nplt.figure(figsize=[10,6])\nbars = plt.bar(categories, values, color=colors)\n\n# Adding hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Labels and titles\nplt.xlabel('Job Categories')\nplt.ylabel('Employees (in thousands)')\nplt.title('Employment Distribution')\n\n# Saving figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/713.png')\n\nplt.show()\n```\nChoices:['Engineering', 'Education', 'Healthcare']\nStudent's Response:Education\n",
    "Question Text:\nWhich category of toys are most sold among boys?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Declare the categories and their values\ncategories = ['Dolls', 'Cars', 'Blocks', 'Puzzles']\nmen_values = [20, 30, 25, 35]\nwomen_values = [25, 20, 30, 30]\n\n# Specify the colors and hatches\ncolors = ['#9031db', '#323541', '#b18805', '#adb505']\nhatches = ['oo', '||', '+', 'xx']\n\n# Create the x locations for the groups\nx = np.arange(len(categories))\n\n# Create the width of the bars\nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Create the bars for men and women\nrects1 = ax.bar(x - width/2, men_values, width, label='Boys', color=colors, hatch=hatches[0])\nrects2 = ax.bar(x + width/2, women_values, width, label='Girls', color=colors, hatch=hatches[1])\n\n# Add the labels, title, and legend\nax.set_ylabel('No. of Toys Sold')\nax.set_title('Toys Sold by Type and Gender')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/714.png') \nplt.show()\n```\nChoices:['Dolls', 'Cars', 'Blocks', 'Puzzles']\nStudent's Response:Puzzles\n",
    "Question Text:\nIn the forecast for the next month, which type of weather has the least number of days?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nweather = ['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy']\ndays = [15, 10, 20, 5, 25, 10]\ncolor = '#cd277d'\nhatches = ['-', '..']\n\nplt.figure(figsize=(10,6))\nbars = plt.barh(weather, days, color=color)\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\nplt.xlabel('Days')\nplt.ylabel('Weather Types')\nplt.title('Weather Forecast for Next Month')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/715.png')\nplt.show()\n```\nChoices:['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy']\nStudent's Response:Snowy\n",
    "Question Text:\nIn which medical specialty is the number of specialists the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Medicine related categories and their corresponding numbers\ncategories = ['Cardiology', 'Neurology', 'Pulmonology', 'Immunology', 'Gastroenterology']\nvalues = [20, 25, 30, 40, 35]\n\n# Plotting the bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(categories, values, color=['#42f1cd', '#d6993a', '#3bdce2', '#3fb3ff', '#4ee917'])\nplt.title(\"Number of Specialists in Different Fields of Medicine\")\nplt.xlabel(\"Medical Specialties\")\nplt.ylabel(\"Number of Specialists\")\nplt.xticks(rotation=45)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/716.png')\nplt.show()\n```\nChoices:['Cardiology', 'Neurology', 'Pulmonology', 'Immunology', 'Gastroenterology']\nStudent's Response:Immunology\n",
    "Question Text:\nWhich environmental issue has the least level of concern according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\ncategories = ['Air pollution', 'Water contamination', 'Deforestation', 'Overpopulation', 'Waste disposal', 'Climate change']\nvalues = [30, 45, 50, 20, 40, 60] \nhatches = ['*', '\\\\|', 'O']\ncolors=['blue', 'cyan', 'green', 'yellow', 'orange', 'red']\n\n# set up the figure size\nplt.figure(figsize=(15,6))\n\n# create bars\nfor i in range(len(categories)):\n    plt.bar(categories[i], values[i], color=colors[i], hatch=hatches[i % len(hatches)])\n\n# labels and titles\nplt.xlabel('Categories')\nplt.ylabel('Level of Concern (from 100 maximum)')\nplt.title('Environmental Issues')\n\n# saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/717.png')\n\nplt.show()\n```\nChoices:['Air pollution', 'Water contamination', 'Deforestation', 'Overpopulation', 'Waste disposal', 'Climate change']\nStudent's Response:Overpopulation\n",
    "Question Text:\nHow many slices of pizza does the chart suggest are consumed on average weekly?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify data\nfood = ['Pizza']\nconsumption = [35]\n\n# Create bar chart\nplt.figure(figsize=(10,2))\nplt.barh(food, consumption, color='skyblue', edgecolor='black')\nplt.title('Average Weekly Consumption of Pizza')\nplt.xlabel('Consumption in Slices')\nplt.xticks(range(0, 51, 5))\nplt.grid(axis='x')\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/718.png')\nplt.show()\n```\nChoices:[15, 25, 35, 45]\nStudent's Response:35\n",
    "Question Text:\n: Are there more paintings in the category \"Contemporary\" than in the category \"Baroque\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Renaissance', 'Baroque', 'Romanticism', 'Realism', 'Impressionism', \n              'Modernism', 'Abstract Expressionism', 'Pop Art', 'Minimalism', 'Contemporary']\n                             \nvalues1 = [15, 25, 35, 30, 50, 75, 80, 60, 35, 90]\nvalues2 = [20, 30, 40, 45, 55, 70, 85, 65, 40, 95]\nvalues3 = [10, 15, 20, 25, 30, 45, 50, 35, 20, 80]\n                             \nhatches = ['O', '..', '-', '|', '\\\\|', 'O.', '.', 'o', '/', '--']\n\nfig, ax = plt.subplots(figsize=(20,10))\n\nbar_width = 0.25\nbar1 = ax.bar([i - bar_width for i in range(10)], values1, bar_width, color='b', hatch=hatches[1])\nbar2 = ax.bar([i for i in range(10)], values2, bar_width, color='r', hatch=hatches[4])\nbar3 = ax.bar([i + bar_width for i in range(10)], values3, bar_width, color='g', hatch=hatches[-1])\n\nax.set_ylabel('Number of Paintings')\nax.set_title('Paintings per Art Period')\nax.set_xticks([i for i in range(10)])\nax.set_xticklabels(categories)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/719.png')\n```\nChoices:['yes', 'no']\nStudent's Response:Let's compare the heights of the bars for the categories \"Contemporary\" and \"Baroque\". In the chart, norms are decided by grouping bars, a higher bar indicates more paintings in that respective category. Notice that the bar for the \"Contemporary\" category is taller than that for the \"Baroque\" category.\n",
    "Question Text:\nWhat is the physical health score in the month of April?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Pre-defining data\nmonths = ['January', 'February', 'March', 'April', 'May', 'June']\nphysical_health_scores = [60, 65, 70, 75, 80, 85]\nmental_health_scores = [70, 75, 80, 65, 70, 75]\n\nbarWidth = 0.25\n\nr1 = np.arange(len(physical_health_scores))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(12,7))\n\nplt.bar(r1, physical_health_scores, color='b', width=barWidth, edgecolor='grey', label='Physical Health')\nplt.bar(r2, mental_health_scores, color='c', width=barWidth, edgecolor='grey', label='Mental Health')\n\n# Adding xticks\nplt.xlabel('Months', fontweight='bold', fontsize = 15)\nplt.ylabel('Health Scores', fontweight='bold', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(physical_health_scores))], \n           ['January', 'February', 'March', 'April', 'May', 'June'])\n\nplt.legend()\nplt.title('Health Scores by month', fontweight='bold', fontsize = 16)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/722.png')\nplt.show()\n```\nChoices:['60', '65', '70', '75', '80']\nStudent's Response:75\n",
    "Question Text:\nIs Thermal Power the source with highest units according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# labels and data\nlabels = ['Hydro Power', 'Wind Power', 'Solar Power', 'Nuclear Power', 'Thermal Power']\ndata = [50, 60, 35, 75, 90]\nhatches = ['x*', '//', '\\\\\\\\', 'oo', '**']\n\n# Create plot\nfig, ax = plt.subplots(figsize=(10, 6))\n\nbarcontainers = ax.barh(labels, data, color='lightgrey', align='center', hatch=hatches[0])\n\n# Add hatches to each bar\nfor i, thisbar in enumerate(barcontainers.patches):\n    thisbar.set_hatch(hatches[i])\n\n# Set x-label, y-label, and title\nax.set_xlabel('Energy Source Units')\nax.set_ylabel('Energy Sources')\nax.set_title('Different Energy Sources and Their Units')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/723.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich toy has the highest quantity?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ntoys = ['Soft Teddy', 'Lego Set', 'RC Car', 'Board Game', 'Action Figure']\nquantities = [20, 25, 15, 30, 25]\n\nplt.figure(figsize=[10,5])\n\nhatches = ['\\\\\\\\']\nfor bar, hatch in zip(plt.bar(toys, quantities), hatches*len(toys)):\n    bar.set_hatch(hatch)\n\nplt.title('Toy Popularity')\nplt.xlabel('Toys')\nplt.ylabel('Quantity')\nplt.xticks(rotation=45)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/724.png')\nplt.show()\n```\nChoices:['Soft Teddy', 'Lego Set', 'RC Car', 'Board Game', 'Action Figure']\nStudent's Response:Board Game\n",
    "Question Text:\nWhich genre has 25 albums?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ngenres = ['Jazz', 'Classical', 'Folk']\nvalues = [25, 40, 50]\n\nfig, ax = plt.subplots(figsize=(8, 6))\n\nbars = plt.bar(genres, values, color=['#8228c7', '#8bf0d1', '#ca3932'])\n\nax.bar_label(bars)\n\nplt.xlabel('Music Genre')\nplt.ylabel('Number of Albums')\nplt.title('Music Albums Across Different Genres')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/725.png')\nplt.show()\n```\nChoices:['Jazz', 'Classical', 'Folk']\nStudent's Response:Jazz\n",
    "Question Text:\nAccording to the bar chart, how many more Elephant species have been saved than Tiger species due to conservation efforts?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Tigers', 'Elephants']\nvalues = [15, 25]\n\n# Create the bar chart\nfig, ax = plt.subplots(figsize=(10,5))\nbars = ax.barh(categories, values, color='#bf4758', hatch='-\\\\')\n\n# Set the title and labels\nax.set_xlabel('Number of Species Saved')\nax.set_ylabel('Wildlife Species')\nax.set_title('Number of Wildlife Species Saved by Conservation Efforts')\n\n# Set the x-axis ticks to multiples of 5\nax.set_xticks(range(0, max(values)+5, 5))\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/726.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['5', '10', '15', '20']\nStudent's Response:10\n",
    "Question Text:\nDid Manufacturing contribute more to the economy than Agriculture?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Agriculture', 'Manufacturing']\nvalues = [10, 15]\n\nfig, ax = plt.subplots(figsize=(8, 4))\n\nbars = plt.barh(categories, values, hatch='+o', color='lightblue', edgecolor='blue')\nax.set_xlabel('Percentage Contribution to Economy (%)')\nax.set_title('Economic Contributions')\n\nfor bar in bars:\n  width = bar.get_width()\n  ax.text(width+0.5, \n          bar.get_y() + bar.get_height() / 2, \n          f'{width}%', \n          ha = 'center', \n          va = 'center')\n\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/727.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the bar chart created, which language has the second highest popularity?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nlanguages = ['English', 'Spanish', 'French', 'German', 'Italian']\npopularity = [485, 405, 270, 185, 165]\ncolors = ['#b66525', '#92a8d1', '#034f84', '#f7cac9', '#f7786b']\n\n# creating grouped bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nbars = plt.bar(languages, popularity, color=colors)\n\n# adding data labels\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2, yval + 5, str(yval), ha='center', va='bottom')\n\n# adding labels and title\nplt.xlabel(\"Languages\")\nplt.ylabel(\"Popularity (millions)\")\nplt.title(\"Popularity of Various Languages\")\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/729.png')\nplt.show()\n```\nChoices:['English', 'Spanish', 'French', 'German', 'Italian']\nStudent's Response:Spanish\n",
    "Question Text:\nIs the category, 'Algae', represented by the blue-green bar in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Flowering Plants', 'Ferns', 'Mosses', 'Algae']\nvalues = [55, 40, 20, 30]  # Rounded values\n\n# Colors and hatches\ncolors = ['#30ae9d', '#58e028', '#502aa1', '#e008a2']\nhatches = ['+o', '/', '\\\\\\\\', None]\n\n# Ensure sufficient figure size\nplt.figure(figsize=(10, 6))\nbars = plt.bar(categories, values, color=colors)\n\n# Apply hatches to each bar\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Plant Categories')\nplt.xlabel('Categories')\nplt.ylabel('Estimated number of species (thousands)')\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/730.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the population of animals in urban areas greater in Dogs than in Cats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Animals data\nanimals = ['Dog', 'Cat', 'Rabbit', 'Hamster', 'Bird']\nsets = ['Forest', 'Desert', 'Urban', 'Arctic', 'Grassland']\n\nforest = [20, 15, 30, 10, 25]\ndesert = [5, 0, 5, 0, 5]\nurban = [35, 40, 15, 10, 10]\narctic = [0, 0, 0, 0, 0]\ngrassland = [10, 15, 20, 35, 40]\n\nbarWidth = 0.35\nr1 = range(len(forest))\nr2 = [x + barWidth for x in r1]\n\nfig, ax = plt.subplots(figsize=(10,7))\n\nax.bar(r1, forest, color='#8274a3', width=barWidth, edgecolor='gray', label='Forest')\nax.bar(r1, desert, bottom=forest, color='#c1bcef', width=barWidth, edgecolor='gray', label='Desert')\nax.bar(r1, urban, bottom=[i+j for i,j in zip(forest, desert)], color='#c3866b', width=barWidth, edgecolor='gray', label='Urban')\nax.bar(r1, arctic, bottom=[i+j+k for i,j,k in zip(forest, desert, urban)], color='#f51016', width=barWidth, edgecolor='gray', label='Arctic')\nax.bar(r1, grassland, bottom=[i+j+k+l for i,j,k,l in zip(forest, desert, urban, arctic)], color='#000080', width=barWidth, edgecolor='gray', label='Grassland')\n\nplt.xlabel('Animals', fontweight='bold')\nplt.ylabel('Population', fontweight='bold')\nplt.xticks([r + barWidth/2 for r in range(len(forest))], animals)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/731.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs Instagram the most popular platform among the three on the chart according to the user number (in millions)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Facebook', 'Instagram', 'Twitter']\ncolors = ['#4b6176', '#2e6176', '#1b6176']\nhatches = ['O', '///', '//']\n\n# The values for three categories, picked random round numbers and made sure they add up for the stacked chart\nfacebook_values = [60, 40, 50]\ninstagram_values = [50, 35, 40]\ntwitter_values = [45, 40, 35]\n\nfig, ax = plt.subplots()\n\n# We add the bars one by one in stack\nbar1 = ax.bar(categories, facebook_values, color=colors[0], hatch=hatches[0])\nbar2 = ax.bar(categories, instagram_values, color=colors[1], hatch=hatches[1], bottom=facebook_values)\nbar3 = ax.bar(categories, twitter_values, color=colors[2], hatch=hatches[2], bottom=[i+j for i,j in zip(facebook_values, instagram_values)])\n\nax.set_title('Social Media Users by Platform')\nax.set_ylabel('Number of Users (in millions)')\nax.set_xlabel('Social Media Platform')\nax.legend([bar1, bar2, bar3], ['Facebook', 'Instagram', 'Twitter'])\n\nplt.ylim(0, 200)  # this sets the y-axis limits\n\nplt.tight_layout() \n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/732.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\n: From the bar chart, does the Sedan category have a higher value than the Van category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to be visualized\ncategories = ['Sedan', 'SUV', 'Sport', 'Convertible', 'Truck', 'Van']\nvalues = [70, 85, 60, 50, 75, 65]\n\n# Define bar colors and hatches\ncolors = ['#b57322', '#11c249']\nhatches = ['OO', '-\\\\']\n\n# Create a new figure with width = 10 and height = 6\nplt.figure(figsize=[10, 6])\n\n# Plot each bar one at a time\nfor i in range(len(values)):\n    plt.barh(categories[i], values[i], color=colors[i%len(colors)], edgecolor='black', hatch=hatches[i%len(hatches)])\n\n# Add title and labels\nplt.title('Car Types and Corresponding Numbers')\nplt.xlabel('Number of Cars')\nplt.ylabel('Car Type')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/734.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHow many more \"Tablets\" were sold than \"Laptops\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Desktops', 'Laptops', 'Tablets', 'Smartphones']\nvalues = [20, 35, 40, 50]\ncolors = ['#a0d739', '#dabd6d', '#bdd5f5', '#c93669']\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Make the bar chart with rounded number values.\nax.bar(categories, values, color=colors)\n\nax.set_title('Number of Units Sold in Different Categories')\nax.set_xlabel('Categories')\nax.set_ylabel('Units Sold (in thousands)')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/735.png')\nplt.show()\n```\nChoices:['5 thousand', '10 thousand', '15 thousand', '20 thousand']\nStudent's Response:5 thousand\n",
    "Question Text:\nIn the bar chart, in which sport does the age group 18 to 30 have the most participants?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sports categories\nsports = ['Basketball', 'Football', 'Cricket', 'Hockey', 'Tennis', 'Baseball']\n\n# Participants in different age groups\nparticipants_under18 = [55, 70, 65, 40, 50, 60]\nparticipants_18to30 = [70, 85, 80, 55, 65, 75]\nparticipants_over30 = [30, 45, 40, 25, 35, 45]\n\nfig, ax = plt.subplots(figsize=(10, 7))  # setting up the overall figure size\n\nbarWidth = 0.5\n\n# Activities summed by age group\n# Position of the bars on the x-axis\nr1 = [0,1,2,3,4,5]\n\n# Creating under 18 bars\nplt.bar(r1, participants_under18, color='orange', edgecolor='grey', width=barWidth)\n# Creating 18-30 bars\nplt.bar(r1, participants_18to30, bottom=participants_under18, color='blue', edgecolor='grey', width=barWidth)\n# Creating over 30 bars\nplt.bar(r1, participants_over30, bottom=list(map(lambda x,y: x+y, participants_under18,participants_18to30)), color='green', edgecolor='grey', width=barWidth)\n\n# Adding xticks\nplt.xlabel('Sports', fontweight='bold')\nplt.ylabel('Participants', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(participants_under18))], sports)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/737.png')\n\nplt.show()\n```\nChoices:['Basketball', 'Football', 'Cricket', 'Hockey', 'Tennis', 'Baseball']\nStudent's Response:Football\n",
    "Question Text:\nDoes the number of domesticated Roses exceed the number of wild Roses?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# data\ncategories = ['Ferns', 'Mosses', 'Cacti', 'Succulents', 'Orchids', 'Roses', 'Lilies', 'Tulips', 'Violets']\nvalues1 = [30, 45, 60, 55, 50, 65, 75, 80, 70]\nvalues2 = [20, 15, 25, 30, 20, 15, 25, 20, 30]\nvalues = [values1, values2]\n\nfig, ax = plt.subplots(figsize=(10,7)) # size so labels don't overlap\n\n# loop over values and create bar chart \nfor i in range(2):\n    plt.bar(categories, values[i], bottom = [sum(values[j][k] for j in range(i)) for k in range(len(values[0]))], \n            hatch = ['**', 'o-'][i])\n\nax.set_ylabel('Number of Plants')\nax.set_title('Number of Different Types of Plants')\nax.legend(['Wild', 'Domesticated'])\n\nplt.xticks(rotation = 45) # rotate xticks for better visibility\nplt.tight_layout() # adjust subplot params so that subplots fits into figure area\n\npath = 'bar_charts/bar_charts_visual_linguistic/train/'\nif not os.path.exists(path):\n    os.makedirs(path)\n\nplt.savefig(path + '738.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nAre the average fees per semester for Public High School and Private High School equal?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#categories and their corresponding values\ncategories = [\"Private High School\", \"Public High School\", \"Private College\", \"Public College\"]\nvalues = [45, 75, 35, 70]\n\n# Create the horizontal bar chart\nplt.figure(figsize=(10,5))\nbarlist = plt.barh(categories, values, color=['#baf8ad', '#8737fe'])\nbarlist[0].set_color('#baf8ad')\nbarlist[1].set_color('#8737fe')\nbarlist[2].set_color('#baf8ad')\nbarlist[3].set_color('#8737fe')\n\n# Set chart title and labels\nplt.title('Average Fees Per Semester in $1000s')\nplt.xlabel('Fees in $1000')\n\n# Save the Plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/739.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn 2020, which crime category experienced an increase in crime rates as compared to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nplt.style.use('ggplot')\n\ncategories = ['Theft', 'Burglary', 'Assault', 'Robbery', 'Arson', 'Vehicle Theft', 'Larceny', 'Vandalism']\nvalues_2019 = [30, 45, 50, 35, 15, 40, 55, 20]\nvalues_2020 = [20, 35, 60, 40, 20, 55, 60, 25]\n\nx = np.arange(len(categories))  \nwidth = 0.35  \nfig, ax = plt.subplots(figsize=[15,10])\n\nrects1 = ax.bar(x - width/2, values_2019, width, label='2019', color='#205d20', hatch='x')\nrects2 = ax.bar(x + width/2, values_2020, width, label='2020', color='#196b6c', hatch='\\\\\\\\')\n\nax.set_xlabel('Categories')\nax.set_ylabel('Number of Crimes')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend(loc='upper right')\nax.set_title('Crime Rates')\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/740.png')\nplt.show()\n```\nChoices:['Theft', 'Burglary', 'Assault', 'Robbery', 'Arson', 'Vehicle Theft', 'Larceny', 'Vandalism']\nStudent's Response:Assault\n",
    "Question Text:\nWhat is the number of birds?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data to plot\nn_groups = 4\nanimals = ['Dogs', 'Cats', 'Birds', 'Fish']\nvalues = [10, 15, 20, 25]\n\n# create plot\nfig, ax = plt.subplots()\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n\nrects1 = plt.barh(index, values, bar_width,\nalpha=opacity,\ncolor='b',\nlabel='Animals')\n\nplt.xlabel('Number of Animals')\nplt.ylabel('Types of Animals')\nplt.title('Number of animals per type')\nplt.yticks(index, animals)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/741.png')\nplt.show()\n```\nChoices:[5, 10, 15, 20]\nStudent's Response:20\n",
    "Question Text:\nIs the score of Group3 in Football is higher than Group1 and Group2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib\n\n# Define the categories\nsports = ['Basketball', 'Baseball', 'Football', 'Hockey']\n\n# Define the group scores\ngroup_1_scores = [20, 25, 30, 35]\ngroup_2_scores = [40, 45, 50, 55]\ngroup_3_scores = [60, 65, 70, 75]\n\nbar_width = 0.25\n\n# Set the figure size\nplt.figure(figsize=(12,8))\n\n# Set the positions of the bars \nbar1_positions = range(len(group_1_scores))\nbar2_positions = [x + bar_width for x in bar1_positions]\nbar3_positions = [x + bar_width for x in bar2_positions]\n\n# Generate the bars\nplt.bar(bar1_positions, group_1_scores, color='#80a725', width=bar_width, edgecolor='grey', label='Group1')\nplt.bar(bar2_positions, group_2_scores, color='#ab4739', width=bar_width, edgecolor='grey', label='Group2')\nplt.bar(bar3_positions, group_3_scores, color='#2131b3', width=bar_width, edgecolor='grey', label='Group3')\n\n# Add the labels, title and legends\nplt.xlabel('Sports', fontweight='bold', fontsize=15)\nplt.ylabel('Scores', fontweight='bold', fontsize=15)\nplt.xticks([r + bar_width for r in range(len(group_1_scores))], sports)\nplt.title(\"Scores by Groups and Sports\", fontweight='bold', fontsize=16)\nplt.legend()\n\n# Save the output file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/742.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the bar chart, in which year did Organization A conduct 85 space missions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import date2num\nimport datetime\n\n# create grouped bar chart\nfig, ax = plt.subplots(figsize=(10,5))\n\n# rounded to nearest 5\nv1 = [15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\nv2 = [i+5 for i in v1]\nN = len(v1)\n\nind = range(N)\nwidth = 0.35  # width of the bars\n\np1 = ax.bar(ind, v1, width, color='#08e805', hatch='x*')\np2 = ax.bar([i+width for i in ind], v2, width, color='#08e805', hatch='*')\n\nax.set_title('Number of space missions by two organizations over time')\nax.set_xticks([i+width/2 for i in ind])\nax.set_xticklabels([('Year '+str(i)) for i in range(2000,2000+N)])\n\nax.legend((p1[0], p2[0]), ('Organization A', 'Organization B'))\nax.autoscale_view()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/743.png')\nplt.show()\n```\nChoices:['Year 2000', 'Year 2004', 'Year 2008', 'Year 2012', 'Year 2016']\nStudent's Response:'Year 2016'\n",
    "Question Text:\nHas the yield for all grains increased from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Corn', 'Wheat', 'Rice', 'Oats', 'Barley', 'Rye']\nyield_in_2015 = [80, 70, 95, 60, 75, 85]\nyield_in_2020 = [90, 75, 100, 70, 80, 90]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create bar chart\nbar_width = 0.35\nindex = [i for i,_ in enumerate(categories)]\n\nbar_2015 = ax.bar(index, yield_in_2015, bar_width, color='#8966d7', hatch='|',label='2015')\nbar_2020 = ax.bar([i+bar_width for i in index], yield_in_2020, bar_width, color='#fe50a5', hatch='*',label='2020')\n\n# Labeling\nax.set_xlabel('Grains')\nax.set_ylabel('Yield (in tons)')\nax.set_title('Agricultural yield in 2015 vs 2020')\nax.set_xticks([i+bar_width/2 for i in index])\nax.set_xticklabels(categories)\nax.legend()\n\n# Saving the plot\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/744.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the donation for Charity A in 2020 higher than in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncharities = ['Charity A', 'Charity B']\ncategory_labels = ['Donations 2019 ($000)', 'Donations 2020 ($000)']\ndonation_values = [[55, 60], [80, 100]]\n\nfig, ax = plt.subplots(figsize=(10,7))\n\nbar_width = 0.35\nopacity = 0.8\n\nr1 = [0,1]\nr2 = [x + bar_width for x in r1]\n\n# Create bars\nplt.bar(r1, donation_values[0], color='#4990d1', width=bar_width, edgecolor='white', label='2019')\nplt.bar(r2, donation_values[1], color='#e546c2', width=bar_width, edgecolor='white', label='2020')\n\n# Adding labels\nplt.ylabel('Donations in thousands $')\nplt.xlabel('Charities')\nplt.title('Charity donations Comparision for 2019 and 2020')\nplt.xticks([r + bar_width for r in range(len(donation_values[0]))], ['Charity A', 'Charity B'])\nplt.legend()\n\n# Saving file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/746.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat genre of PC games produced the most sales in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values\nvalues_pc_games = [75, 70, 60, 85]\nvalues_mobile_games = [58, 65, 60, 70]\n\n# Games Categories\ncategories = ['Action', 'Adventure', 'Strategy', 'RPG']\n\n# Set the figure size\nplt.figure(figsize=[10,8])\n\n# Range of categories\nbarWidth = 0.25\nr1 = range(len(values_pc_games))\nr2 = [x + barWidth for x in r1]\n\n# Create bar chart\nplt.bar(r1, values_pc_games, color='b', width=barWidth, edgecolor='grey', label='PC Games')\nplt.bar(r2, values_mobile_games, color='r', width=barWidth, edgecolor='grey', label='Mobile Games')\n\n# Adding labels\nplt.xlabel('Game Genres', fontweight='bold')\nplt.ylabel('Sales in million (2020)', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(values_pc_games))], categories)\n\n# Adding Legends\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/748.png')\n\nplt.show()\n```\nChoices:['Action', 'Adventure', 'Strategy', 'RPG']\nStudent's Response:'RPG'\n",
    "Question Text:\nAccording to the bar chart, does the population in Asia increase from 2015 to 2030?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating the data \nCategories = ['2010', '2015', '2020', '2025', '2030']\nAfrica = [1005, 1050, 1200, 1300, 1375]\nAsia = [4205, 4375, 4425, 4525, 4575]\nEurope = [705, 700, 695, 685, 675]\nAmericas = [955, 1000, 1040, 1080, 1100]\n\n# Creating the bar plot\nbarWidth = 0.2\nr1 = range(len(Africa))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n\nplt.figure(figsize = (12, 9), dpi=80)\nplt.bar(r1, Africa, color = '#39dadc', width = barWidth, edgecolor = 'grey', label='Africa')\nplt.bar(r2, Asia, color = '#2d85b2', width = barWidth, edgecolor = 'grey', label='Asia')\nplt.bar(r3, Europe, color = '#c7d8d7', width = barWidth, edgecolor = 'grey', label='Europe')\nplt.bar(r4, Americas, color = '#6377bc', width = barWidth, edgecolor = 'grey', label='Americas')\n  \n# Adding labels\nplt.xlabel('Year', fontweight='bold', fontsize = 15)\nplt.ylabel('Population (millions)', fontweight='bold', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(Africa))], Categories)\n\nplt.title('Projected Population Growth By Continent')\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/750.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n'Which gaming device has the second highest number of users according to the bar chart?'\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n# Bar data\ncategories = ['PC', 'PS5', 'Xbox', 'Switch', 'Mobile']\nvalues = [25, 45, 30, 55, 50]\n\n# Set Figure size based on the labels\nplt.figure(figsize=[10,8])\n\n# Horizontal Bar Plot\nbar_plot = plt.barh(categories, values, color=['#8f4abc', '#2c546b', '#8f4abc', '#2c546b', '#8f4abc'])\n\n# Show values on bars\nfor i in range(len(values)):\n    plt.text(values[i], i, ' %d' % values[i], ha = 'center', va = 'center', color = 'black')\n\n# Labeling\nplt.xlabel('Number of Users in Millions')\nplt.ylabel('Gaming Device')\nplt.title('Number of users by Gaming Devices')\n\n# Save plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/751.png')\nplt.show()\n```\nChoices:['PC', 'PS5', 'Xbox', 'Switch', 'Mobile']\nStudent's Response:Switch\n",
    "Question Text:\nIs \"Support a Wealth Tax\" more supported by the Democrats than the Republicans?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Define categories and their values\ncategories = ['Favorable opinion of green energy', 'Believe in global warming', 'Support Medicare for all',\n              'Support increased minimum wage', 'Support tuition-free college', 'Support a Wealth Tax', 'Support legalizing marijuana']\nvalues_dem = [70, 80, 60, 65, 60, 60, 75]\nvalues_rep = [30, 20, 40, 35, 40, 40, 25]\n\n# Define hatches\nhatches = ['o-', '//', '\\\\\\\\|', '.']\n\nbar_width = 0.35\nindex = [i for i in range(7)]\n\nfig, ax = plt.subplots(figsize=(10, 7))\nbar1 = plt.bar(index, values_dem, bar_width, color='b', label='Democrats', hatch=hatches[0])\nbar2 = plt.bar(index, values_rep, bar_width, color='r', bottom=values_dem, label='Republicans', hatch=hatches[1])\n\nplt.xlabel('Policies')\nplt.ylabel('Percentage Support')\nplt.title('Public Opinion Polls')\nplt.xticks(index, categories, rotation='vertical')\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/752.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhich car brand had a decrease in sales from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncar_brands = ['Fiat', 'VW', 'BMW']\nsales_2019 = [20, 60, 50]\nsales_2020 = [30, 55, 45]\n\nx = range(len(car_brands))\n\nplt.figure(figsize=(8, 6))\nbar_width = 0.35\n\nplt.bar(x, sales_2019, bar_width, label=\"2019\", color='b')\nplt.bar(x, sales_2020, bar_width, label=\"2020\", color='g', bottom=sales_2019)\n\nplt.xlabel(\"Car Brands\")\nplt.ylabel(\"Sales (in thousands)\")\nplt.title(\"Sales of Selected Car Brands in 2019 and 2020\")\nplt.xticks(x, car_brands)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/753.png')\nplt.show()\n```\nChoices:['Fiat', 'VW', 'BMW']\nStudent's Response:'VW'\n",
    "Question Text:\nIs \"Air Pollution\" the category with the highest increase in concern level from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Air Pollution', 'Water Pollution', 'Soil Pollution', 'Population Increase', 'Climate Change']\n\nmen_means = [65, 40, 55, 80, 75]\nwomen_means = [50, 45, 50, 85, 70]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 5))\nbar1 = ax.bar(x - width/2, men_means, width, label='2019', color='#9234e7')\nbar2 = ax.bar(x + width/2, women_means, width, label='2020', color='#34e781')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Concern Level')\nax.set_title('Environmental Issues: Level of Concern')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/754.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nHow many times more offenses were reported for Drug Abuse than for Assault?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Burglary', 'Assault', 'Robbery', 'Vehicle Theft', 'Drug Abuse', 'Vandalism']\nvalues = [30, 25, 40, 50, 55, 45]\ncolors = ['#e26c77', '#5c29d0', '#95bf59', '#e26c77', '#5c29d0', '#95bf59']\nhatches = ['++', '', '', '++', '', '++']\n\nplt.figure(figsize=[20,10])\n\n# Create bar chart\nfor i in range(len(categories)):\n    plt.barh(categories[i], values[i], color=colors[i], hatch=hatches[i%len(hatches)])\n\n# Labels and title\nplt.xlabel('Number of offenses (in 1000)', fontsize=15)\nplt.ylabel('Offense Categories', fontsize=15)\nplt.title('Crime Rates', fontsize=20)\n\nplt.grid(axis='x')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/755.png')\n\nplt.show()\n```\nChoices:['1.2 times', '2.2 times', '1.5 times', '2 times']\nStudent's Response:2.2 times\n",
    "Question Text:\nIs 'Foggy' weather less frequent than 'Rainy' weather?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nweather_categories = ['Sunny', 'Cloudy', 'Rainy', 'Snowy', 'Windy', 'Foggy', 'Stormy']\nweather_values = [45, 50, 60, 10, 35, 30, 55]\ncolors = ['#b7e2eb', '#eab7c8', '#4d07b6', '#4d07b6', '#eab7c8', '#b7e2eb', '#4d07b6']\n\n# Define larger figure size to accommodate long category titles\nplt.figure(figsize=(10, 6))\n\n# Create bar chart\nplt.bar(weather_categories, weather_values, color=colors)\n\n# Add labels and title\nplt.ylabel('Occurrences')\nplt.xlabel('Weather Type')\nplt.title('Occurrences of Different Weather Types')\nplt.tight_layout()\n\n# Save the plot in specified file path\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/756.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn terms of total hours of sleep and exercise combined in a week, which team puts in more hours?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# We will create a bar chart for hours of exercise and hours of sleep for our analytical and creative staff members.\ncategories = ['Analytical Team', 'Creative Team']\nexercise = [15, 20]\nsleep = [30, 35]\n\nbar_width = 0.35\nopacity = 0.8\n\n# Plotting the chart\nfig, ax = plt.subplots(figsize=(8, 4))\n\nbar1 = plt.barh(categories, exercise, bar_width, color='#6c8fe3', label='Hours of Exercise')\nbar2 = plt.barh(categories, sleep, bar_width, left=exercise, color='#b48bff', label='Hours of Sleep')\n\n# Creating labels and title of the bar chart\nplt.ylabel('Team')\nplt.xlabel('Hours per Week')\nplt.title('Hours of Exercise vs Sleep per Team')\nplt.legend()\n\n# Setting the limit, labels, and title for the graphic\nplt.xlim(0, 60)\nax.set_xticks(range(0, 60, 5))\n\nplt.tight_layout()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/757.png')\n\nplt.show()\n```\nChoices:['Analytical Team', 'Creative Team']\nStudent's Response:Creative Team\n",
    "Question Text:\n: Is Spain visited by fewer tourists than Italy?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n  \n# Declaring the figure or the plot (y, x) or (width, height)\nplt.figure(figsize=[14, 10])\n\n# Data to be plotted\ncountries = ['USA', 'France', 'Spain', 'China', 'Italy']\nvisitors = [80, 90, 60, 70, 65]\ncolors = ['#517a4f', '#6cf548', '#c76131', '#afa583', '#baf5fd']\n  \n# Using bar() method to make the bar chart\nplt.bar(countries, visitors, color = colors)\n\n# Adding the aesthetics\nplt.xlabel('Countries')\nplt.ylabel('Number of Visitors (in millions)')\nplt.title('Number of Tourists Visiting Different Countries')\n  \n# Saving the figure.\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/758.png') \n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat tourism category has the highest number of total tourists?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Beaches', 'Mountains', 'Lakes', 'Deserts', 'Forests', 'Cities', 'Historical Sites', 'Rain forests', 'Glaciers']\nvalues_1 = [60, 75, 50, 70, 80, 100, 45, 65, 85]\nvalues_2 = [40, 25, 20, 15, 20, 25, 35, 20, 30]\n\nplt.figure(figsize=(12, 8))\nplt.barh(categories, values_1, color='#0bf506', label='Domestic Tourists')\nplt.barh(categories, values_2, left=values_1, color='#8fac13', label='International Tourists')\n\nplt.ylabel('Categories')\nplt.xlabel('Number of Tourists (in thousands)')\nplt.title('Tourism Categories by Type of Tourists (Domestic vs International)')\nplt.xticks(range(0, 130, 5))\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/759.png')\n```\nChoices:['Beaches', 'Mountains', 'Lakes', 'Deserts', 'Forests', 'Cities', 'Historical Sites', 'Rain forests', 'Glaciers']\nStudent's Response:'Cities'\n",
    "Question Text:\nWhat category of internet usage has the highest usage in hours?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Social Media', 'Web Browsing', 'Emails', 'Online Gaming', 'Video Streaming']\nvalues = [75, 95, 60, 85, 100]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Create a bar plot\nbars = plt.bar(categories, values, color='#67ffc5')\n\nax.set_xlabel('Internet Usage Categories')\nax.set_ylabel('Usage in Hours')\nax.set_title('Internet Usage in Different Categories')\n\n# Adding the text labels\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2.0, yval, int(yval), va='bottom')  # va: vertical alignment\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/760.png')\nplt.show()\n```\nChoices:['Social Media', 'Web Browsing', 'Emails', 'Online Gaming', 'Video Streaming']\nStudent's Response:'Video Streaming'.\n",
    "Question Text:\nDid World War II occur after the Digital Revolution?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\nevents = ['Industrial Revolution', 'World War I', 'Great Depression', 'World War II',\n          'Cold War', 'Digital Revolution', 'Globalization']\nyears = [1800, 1918, 1930, 1945, 1991, 2000, 2010]\n\n# Colors and hatches provided\ncolors = ['#c80a88', '#05cacd', '#2116ac', '#e5328c', '#f807bd', '#45e4cd']\nhatches = ['..', 'x', 'xx', 'O.', '*']\n\n# Create Bar Chart\nplt.figure(figsize=(10, 7))\nbars = plt.bar(events, years, color=colors, hatch=hatches[0])\n\n# Assigning different hatches to bars\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i % len(hatches)])\n\nplt.xlabel('Historical Events')\nplt.ylabel('Year')\nplt.title('Years of Important Historical Events')\nplt.xticks(rotation=45)\n\n# Saving the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/761.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nThe question related to the chart is: Which toy had the highest total sales over the two years and what was the total quantity sold?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntoys = ['Action Figures', 'Dolls', 'Board Games']\nquantity_sold_2019 = [20, 35, 50]\nquantity_sold_2020 = [30, 40, 30]\n\n# Plotting\nfig, ax = plt.subplots(figsize=(10, 7))   \nbar_width = 0.40\nbar1 = plt.bar(toys, quantity_sold_2019, color='#abfcb9', edgecolor='gray', hatch='O')\nbar2 = plt.bar(toys, quantity_sold_2020, bottom=quantity_sold_2019, color='#311c42', edgecolor='gray')\n\n# Labels\nplt.xlabel('Toys')\nplt.ylabel('Quantity Sold')\nplt.title('Toy Sales 2019 vs 2020')\nplt.legend([bar1, bar2], ['2019', '2020'])\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/762.png')\n\n# Show the chart\nplt.show()\n```\nChoices:['Action Figures, 60', 'Dolls, 95', 'Board Games, 50', 'Board Games, 80']\nStudent's Response:Board Games, 80\n",
    "Question Text:\nWas rainfall the main source of water in Africa?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Definition of lists with values\nrivers = [10, 20, 15, 25]    # in billion cubic meters\nlakes = [30, 15, 25, 35]    # in billion cubic meters\nrainfall = [35, 25, 40, 30]    # in billion cubic meters\ncategories = ['Africa', 'Asia', 'America', 'Europe'] # Water bodies\n\n# Set the figure size\nplt.figure(figsize=[12,8])\n\n# Define x locations for the groups\nbarWidth = 0.25\nr1 = range(len(rivers))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\n# Create blue bars (rivers)\nplt.bar(r1, rivers, width = barWidth, color = '#ca4fc8', edgecolor = 'grey', label='Rivers')\n\n# Create cyan bars (lakes)\nplt.bar(r2, lakes, width = barWidth, color = '#25e600', edgecolor = 'grey', label='Lakes')\n\n# Create green bars (rainfall)\nplt.bar(r3, rainfall, width = barWidth, color = '#34a2fe', edgecolor = 'grey', label='Rainfall')\n\n# General layout\nplt.xticks([r + barWidth for r in range(len(rivers))], categories)\nplt.ylabel('Water Source (in billion cubic meters)')\nplt.legend()\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/763.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich grade was received by the greatest number of students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ngrades = ['A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'F']\nvalues = [40, 35, 30, 25, 20, 15, 10, 5, 0]\ncolors = ['#8facf1', '#d37231', '#7cb260', '#dd6730', '#dbcf38', '#1ab654', '#757539', '#72a690', '#38dbf6']\n\nplt.figure(figsize=(10,6))\nplt.bar(grades, values, color=colors, width=0.6)\nplt.xlabel('Grades')\nplt.ylabel('Number of Students')\nplt.title('Number of Students in Each Grade')\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/764.png')\nplt.show()\n```\nChoices:['A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'F']\nStudent's Response:A\n",
    "Question Text:\nHow many more millions of users does Facebook have compared to Snapchat?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Social Media Categories and Values\ncategories = ['Facebook', 'Instagram', 'Twitter', 'Snapchat', 'LinkedIn', 'Pinterest']\nvalues = [200, 190, 175, 160, 125, 100]\n\ncolors = ['#361945', '#5e14ad', '#dca2ea', '#e1fd97', '#361945', '#5e14ad']\n\nplt.figure(figsize=[10,6])\n\n# Create a horizontal bar chart\nplt.barh(categories, values, color=colors)\n\nplt.xlabel('Number of Users (in millions)')\nplt.ylabel('Social Media Platforms')\nplt.title('Popularity of Various Social Media Platforms')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/766.png')\nplt.show()\n```\nChoices:['30 million', '40 million', '20 million', '50 million']\nStudent's Response:40\n",
    "Question Text:\nDid the `moon landing` event receive a `Historical Importance Score` of less than 85?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\n# create data\nhistorical_events = ['WW1 (1914-1918)', 'Roaring 20s', 'Great Depression', 'WW2 (1939-1945)', 'Cold War', 'Civil Rights Movement', 'Moon Landing', 'Fall of Berlin Wall', 'End of Apartheid']\nvalues = [[80, 85, 60, 65, 70, 65, 65, 60, 60], \n          [15, 10, 10, 20, 20, 20, 20, 20, 25], \n          [5, 5, 30, 15, 10, 15, 15, 20, 15]]\ncolors = ['#a06069', '#6dea87', '#de662d']\nhatches = ['xx', '/', '+o']\n          \n# create bar chart\nfig, ax = plt.subplots(figsize=(10, 5))\nbar_width = 0.5\nbar_l = [i+1 for i in range(len(historical_events))]\ntick_pos = [i+(bar_width/2) for i in bar_l]\n\n# stack bars\nbars = []\nfor i in range(len(values)):\n    bar = ax.bar(tick_pos, values[i], width=bar_width, label=historical_events[i], color=colors[i%len(colors)], alpha=0.75, hatch=hatches[i%len(hatches)])\n    bars.append(bar)\n\n# set labels\nax.set_ylabel(\"Historical Importance Score\")\nax.set_xlabel(\"Historical Events\")\nplt.xticks(tick_pos, historical_events, rotation=45)\n\n# make a legend\npatches = [mpatches.Patch(color=bar[0].get_facecolor(), hatch=bar[0].get_hatch(), label=historical_events[i]) for i, bar in enumerate(bars)]\nplt.legend(handles=patches)\n\n# save and display figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/768.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich car company sold the third highest number of cars according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories/labels of the chart(Car companies)\ncategories = ['Toyota', 'Volkswagen', 'Ford', 'Hyundai', 'Nissan', 'General Motor', 'Fiat', 'Honda', 'Peugeot', 'Suzuki']\n\n# Values for each category\nvalues = [525, 480, 775, 730, 645, 505, 560, 690, 575, 615]\n\ncolors=['#10ea62', '#f5bdf0', '#024582', '#a21e34', '#a3d177', '#48666a', '#17c980', '#f5bdf0', '#024582', '#10ea62']\n\n# Plotting the bar chart\nplt.figure(figsize=(10,7))\nplt.bar(categories, values,color=colors)\nplt.xlabel('Car Companies')\nplt.ylabel('Number of Cars Sold (In thousands)')\nplt.title('Number of Cars sold per Company')\nplt.xticks(rotation=45)\nplt.tight_layout()\n\n# Saving the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/769.png')\n\nplt.show()\n```\nChoices:['Toyota', 'Ford', 'Hyundai', 'Fiat', 'Nissan']\nStudent's Response:Ford\n",
    "Question Text:\nIs the category 'Health' receiving the highest amount of donation?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\ncategories = ['Animals', 'Education', 'Environment', 'Health', 'Global Issues', 'Arts & Culture', 'Poverty']\nvalues = [30, 45, 50, 70, 60, 55, 40]\ncolors = ['#5f7851', '#e1e86c', '#5f7851', '#e1e86c', '#5f7851', '#e1e86c', '#5f7851']\nhatches = ['o-', '+o', 'o', 'xx', 'o-', '+o', 'o']\n\n# Create bar chart\nplt.figure(figsize=[10,6])\nbars = plt.bar(categories, values, color=colors)\n\n# Applying hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Adding titles and labels\nplt.title('Charitable Donations by Category')\nplt.xlabel('Category')\nplt.ylabel('Donation Amount (in millions of USD)')\n\n# Save figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/770.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nDid the number of users on Facebook increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\ncategories = ['Facebook', 'Instagram', 'Twitter', 'LinkedIn', 'Snapchat']\nusers_2019 = [245, 100, 80, 50, 90]\nusers_2020 = [255, 110, 85, 60, 95]\n\n# List of colors and hatches\ncolor = ['#6b6823', '#1ab13b', '#f50286', 'orange', 'purple']\nhatches = ['++', '*', 'o-', '//', '\\\\\\\\']\n\n# Creating the bar chart\nfig, ax = plt.subplots(figsize=(10, 7))\n\nbar_2019 = ax.bar(categories, users_2019, color=color, edgecolor='black')\nbar_2020 = ax.bar(categories, users_2020, bottom=users_2019, color=color, hatch='-', edgecolor='black')\n\n# Adding hatches\nfor i in range(len(categories)):\n    bar_2019[i].set_hatch(hatches[i])\n    bar_2020[i].set_hatch(hatches[i])\n\n# Adding labels\nax.set_xlabel('Social Media Platforms')\nax.set_ylabel('Number of Users (in million)')\nax.set_title('Comparison of Social Media Users in 2019 and 2020')\n\n# Creating the legend\nax.legend((bar_2019[0], bar_2020[0]), ('2019', '2020'))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/771.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of Space Stations larger than the number of Mars Rovers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Apollo Missions', 'Satellites Launched', 'Space Shuttles', 'Space Stations', 'Asteroid Missions', 'Mars Rovers', 'Space Telescopes']\nvalues = [15, 60, 20, 10, 25, 5, 30]\ncolors = ['#518b83', '#3f2376', '#d36340', '#99ba67', '#d46835', '#9643eb', '#0e5467']\n\nplt.figure(figsize=(10,6))\nplt.barh(categories, values, color=colors)\nplt.xlabel('Number')\nplt.ylabel('Category')\nplt.title('Space Exploration Statistics')\nplt.grid(axis='x')\nplt.xticks(range(0, max(values) + 10, 5))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/772.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich region has the third-largest land area?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# 10 categories and their land areas in million sq. km (rounded)\ncategories = ['Africa', 'Antarctica', 'Asia', 'Australia', 'Europe', 'North America', 'South America', 'Greenland', 'New Zealand', 'Madagascar']\nvalues = [30, 14, 45, 8, 10, 25, 18, 2, 1, 1]\ncolors = ['#5aedc0', '#1dd3ea'] * 5\nhatches = ['O', '||', 'xx'] * 4\n\nfig, ax = plt.subplots(figsize=(10, 10))\nbars = ax.barh(categories, values, color=colors)\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n    \nax.set_xlabel('Land Area (million sq. km)')\nax.set_title('Land Area by Region')\n\nax.bar_label(bars)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/773.png')\nplt.show()\n```\nChoices:['Africa', 'Antarctica', 'Asia', 'Australia', 'Europe', 'North America', 'South America', 'Greenland', 'New Zealand', 'Madagascar']\nStudent's Response:North America\n",
    "Question Text:\nWhich social media platform has more users, TikTok or LinkedIn?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Facebook', 'YouTube', 'Instagram', 'Twitter', 'Snapchat', 'LinkedIn', 'TikTok'] \nvalues = [280, 200, 120, 85, 40, 35, 60]\ncolors = ['#f39568', '#da7842', '#cfae9f', '#71f4c5', '#8883ee', '#85a3b2', '#a1c45a']\n\nplt.figure(figsize=(10, 7))\n\nplt.barh(categories, values, color=colors)\n\nplt.xlabel('Millions of users')\nplt.ylabel('Social Media Platforms')\nplt.title('Comparison of Active Users on Different Social Media Platforms')\n\nfor i in range(len(values)):\n  plt.text(values[i], categories[i], str(values[i]))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/774.png')\nplt.show()\n```\nChoices:['TikTok', 'LinkedIn', 'They have an equal number of users', 'Cannot determine']\nStudent's Response:TikTok\n",
    "Question Text:\nDoes Spanish have more speakers than Hindi according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nlanguages = ['English', 'Spanish', 'Mandarin', 'Hindi', 'Arabic']\nspeakers = [1500, 460, 960, 600, 300] # Values in millions\n\n# Colors and Hatches\ncolors = ['#d008fd', '#51eb5f', '#085fd0', '#d08f08', '#ad08d0']\nhatches = ['/', '\\\\', '|', '-', '+']\n\n# Plotting\nplt.figure(figsize=(15,7)) # Ensures sufficiently large figure size\nbars = plt.bar(languages, speakers, color=colors, hatch=hatches[0])\n\n# Updating each bar with different hatch\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\nplt.title('Number of speakers in different languages')\nplt.xlabel('Languages')\nplt.ylabel('Number of speakers in millions')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/775.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nFrom the given bar chart, which music genre has the highest overall popularity across all three regions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlabels = ['Rock', 'Pop', 'Country', 'Rap', 'Jazz', 'Classical', 'Blues', 'Folk']\nvalues = [[10, 20, 50, 60, 45, 25, 35, 30], \n          [25, 35, 45, 10, 40, 20, 30, 20], \n          [35, 45, 30, 45, 35, 40, 20, 15]] # Assuming these are the popularity of music genres in 3 different regions.\ncolors = ['#af5938', '#340989', '#6430c8']\nhatches = ['+', 'OO', '|', '--', '\\\\', '++', '**']\n\nx = range(len(labels))\nwidth = 0.2\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nfor i in range(3):\n    ax.bar([p + width*i for p in x], values[i], width=width,\n           color=colors[i % len(colors)], \n           hatch=hatches[i % len(hatches)], \n           label='Region {}'.format(i+1))\n\nax.set_xlabel('Music Genre')\nax.set_ylabel('Popularity')\nax.set_title('Popularity of Music Genres by Region')\nax.set_xticks([p + width for p in x])\nax.set_xticklabels(labels)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/776.png')\nplt.show()\n```\nChoices:['Rock', 'Pop', 'Country', 'Rap', 'Jazz', 'Classical', 'Blues', 'Folk']\nStudent's Response:Country\n",
    "Question Text:\nWhich gaming category has popularity that lies between 50 million and 60 million players?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Initialize the figure\nplt.figure(figsize=(10,8))\n\n# Define the categories and values\ncategories = [\n    'FPS Games', \n    'Open-World Games', \n    'Sports/E-Sports Games', \n    'Racing Games', \n    'Role-Playing Games', \n    'Puzzle Games',\n    'Simulation Games',\n    'Action/Adventure Games',\n    'Strategy Games'\n]\nvalues = [50, 75, 85, 45, 70, 40, 60, 80, 55]\n\n# Colors and hatching styles\ncolors = ['#cf2d8b', '#20e54c', '#6ea63f', '#d22700', '#881289', '#d65ba4', '#33c1bb', '#87db83', '#5a7eb1']\nhatches = ['//', '\\\\', '++', 'O.', 'x*', '--', 'o', '||', '\\\\|']\n\n# Create the bar chart\nfor i in range(9):\n    plt.barh(categories[i], values[i], color=colors[i], hatch=hatches[i])\n\n# Labels and title\nplt.xlabel('Number of Players (in millions)')\nplt.title('Popularity of Different Game Categories')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/778.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['FPS Games', 'Open-World Games', 'Sports/E-Sports Games', 'Racing Games', 'Role-Playing Games', 'Puzzle Games', 'Simulation Games', 'Action/Adventure Games', 'Strategy Games']\nStudent's Response:Strategy Games.\n",
    "Question Text:\nWhat is the percentage of land used for Agriculture?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values\nvalues = [70, 30]\n\n# Labels\nstack_labs = ['Agricultural', 'Residential']\n\n# Figure Size\nfig = plt.figure(figsize=[10,6])\n\n# Bar chart creation\nplt.bar('Land', values, color=['#45cae6', 'white'], edgecolor='black', tick_label=stack_labs)\n\n# Labeling the Y-axis\nplt.ylabel('Land Usage (%)')\n\n# Title of the Chart\nplt.title('Land Usage Comparison')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/779.png')\n\nplt.show()\n```\nChoices:['70%', '30%', '25%', '35%']\nStudent's Response:70%\n",
    "Question Text:\nIs the interest level in Augmented Reality the highest among all the categories?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Artificial Intelligence', 'Data Science', 'Web development', 'Cybersecurity', \n              'Robotics', 'Cloud Computing', 'SEO', 'Block Chain', 'Augmented Reality']\nvalues = [50, 45, 40, 35, 30, 55, 60, 65, 70]\ncolors = ['#397120', '#6629d7', '#a300a9', '#af7304', '#b9f101', '#d0b05f', '#af0d4d', '#397120', '#6629d7']\n\n# Create bar chart\nplt.figure(figsize=(15, 10))\nplt.bar(categories, values, color=colors)\nplt.xlabel('Technology Field')\nplt.ylabel('Interest Level')\nplt.title('Interest Level in Various Technology Fields')\nplt.xticks(rotation = 45)\nplt.ylim([0, 100])\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/780.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the 'Action Figures' category the category with the highest number of toys according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ntoys = ['Dolls', 'Puzzles', 'Action Figures', 'Musical Toys', 'Educational Toys',\n        'Construction Sets', 'Art & Crafts', 'Board Games', 'Outdoor Toys']\ntoys_count = [20, 30, 35, 40, 45, 50, 55, 60, 65]\ncolors = ['#256d02', '#e41313', '#392f37', '#a77cfe', '#11a1e9', '#0ae356', '#3bc3ba']\nhatches = ['*-', 'O', 'O|', 'O.', 'o']\n\n# Create a new figure with a specific size\nplt.figure(figsize=(15, 8))\n\nbars = plt.bar(toys, toys_count, color = colors[:len(toys_count)], hatch = hatches[0])\n\n# Set a different hatch for each bar\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n    \nplt.title('Number of Toys by Category')\nplt.xlabel('Toy Category')\nplt.ylabel('Number of Toys')\nplt.xticks(rotation=45) # Rotate x-axis labels to avoid overlap\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/781.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the weather condition that occupies the least % of the year according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Sunny', 'Cloudy', 'Windy', 'Rainy', 'Snowy', 'Foggy', 'Stormy', 'Hail', 'Sleet']\nvalues = [75, 30, 45, 40, 15, 50, 25, 10, 5]\ncolors = ['#6d347b']*9\nhatches = ['\\\\', 'O.', 'o-', 'O', '|*', '**', '||', 'x']\n\nplt.figure(figsize=[15,10])\nbars = plt.bar(categories, values, color=colors)\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Weather Conditions \u2013 % of Year')\nplt.xlabel('Type of Weather')\nplt.ylabel('% of Year')\nplt.xticks(rotation=45)\nplt.grid(axis='y')\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/782.png')\n\nplt.show()\n```\nChoices:['Sunny', 'Cloudy', 'Windy', 'Rainy', 'Snowy', 'Foggy', 'Stormy', 'Hail', 'Sleet']\nStudent's Response:'Sleet'\n",
    "Question Text:\nWhat is the difference between the annual consumption and annual conservation for freshwater in terms of billions of liters?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories and their values\nwater_types = ['Freshwater', 'Saltwater']\nconsumption_values = [95, 65]  # values in billions of liters\nconservation_values = [50, 75]  # values in billions of liters\n\nbar_width = 0.25\n\n# Position of bars on x-axis\nr1 = [i for i, _ in enumerate(water_types)]\nr2 = [x + bar_width for x in r1]\n\n# Make the plot\nplt.figure(figsize=(10,6))\nplt.bar(r1, consumption_values, width=bar_width, color='b', edgecolor='grey', yerr=15, capsize=7, hatch='-', label='Annual Consumption')\nplt.bar(r2, conservation_values, width=bar_width, color='r', edgecolor='grey', yerr=15, capsize=7, label='Annual Conservation')\n\n# Adding xticks\nplt.xlabel('Water Types', fontweight='bold')\nplt.xticks([r + bar_width for r in range(len(consumption_values))], water_types)\nplt.ylabel('Billions of Liters')\nplt.title('Annual Consumption vs Conservation based on Water Types')\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/784.png')\nplt.show()\n```\nChoices:['5 billion liters', '15 billion liters', '30 billion liters', '45 billion liters', '60 billion liters']\nStudent's Response:45\n",
    "Question Text:\nIs the maximum score for Group 1 (35) achieved in the 'Role-Play' category?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Action', 'Adventure', 'Role-Play', 'Strategy']\ngroup1 = [20, 25, 30, 35]\ngroup2 = [15, 20, 35, 30]\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nrects1 = ax.bar(x - width/2, group1, width, label='Group 1')\nrects2 = ax.bar(x + width/2, group2, width, label='Group 2')\n\n# Add some text for labels, title and custom x-axis tick labels\nax.set_xlabel('Gaming Categories')\nax.set_ylabel('Scores')\nax.set_title('Scores by Gaming Category and Group')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nfig.tight_layout()\nplt.grid(axis='y')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/786.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nQuestion: Which is the third leading cause of death in the world according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlabels = ['Cardiovascular Diseases', 'Cancer', 'Respiratory Infections', 'Lower Respiratory Infections', 'Unintentional Injuries', 'Alzheimer Disease and Dementia', 'Diabetes', 'Kidney Disease', 'Liver Disease', 'Influenza and Pneumonia']\nvalues = [45, 40, 35, 30, 25, 20, 15, 10, 5, 0]\nhatches = ['--', '.', '/o', 'o-', '\\\\|', '||', 'O', '|', 'xx', '/']\n\nplt.figure(figsize=(10, 8))\nbars = plt.barh(labels, values, color='#0b1c2e')\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Rate per 100,000')\nplt.title('Top 10 Leading Causes of Death in the World')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/787.png')\n\nplt.show()\n```\nChoices:['Cardiovascular Diseases', 'Respiratory Infections', 'Lower Respiratory Infections', 'Unintentional Injuries', 'Alzheimer Disease and Dementia']\nStudent's Response:Respiratory Infections\n",
    "Question Text:\nIs the count of pigeons less than the count of eagles in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nbirds = ['Pigeon', 'Sparrow', 'Hummingbird', 'Parrot', 'Owl', 'Eagle', 'Falcon', 'Dove', 'Peacock', 'Swan']\ncounts = [20, 45, 30, 35, 40, 60, 55, 50, 15, 40]\ncolors = ['#31eb17', '#2ac2a9', '#963fba', '#d964b7', '#f441ff', '#2a2da8', '#31eb17', '#2ac2a9', '#963fba', '#2a2da8']\n\n# Creating the bar graph\nplt.figure(figsize=(10,5))\nplt.bar(birds, counts, color=colors)\n\n# Labeling the graph\nplt.xlabel('Birds')\nplt.ylabel('Count')\nplt.title('Bird Count')\nplt.tight_layout()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/788.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich region has the smallest number of Flower species?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\nregions = ['Region1', 'Region2', 'Region3', 'Region4']\nflowers = [15, 10, 20, 10]\ntrees = [20, 15, 15, 30]\n\nplt.figure(figsize=[10,8])\n\n# Create bottom bars (here: flowers)\nplt.bar(regions, flowers, color='#7afbad')\n\n# Create stacked bars (here: trees), on top of the first bars (flowers)\nplt.bar(regions, trees, bottom=flowers, color='#add8e6')\n\nplt.xlabel('Regions')\nplt.ylabel('Species Count')\nplt.title('Number of Flower and Tree Species per Region')\nplt.xticks(rotation='horizontal')\n\n# Create a directory for saving the file\nos.makedirs(os.path.dirname('bar_charts/bar_charts_visual_linguistic/train/'), exist_ok=True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/789.png')\n\nplt.show()\n```\nChoices:['Region1', 'Region2', 'Region3', 'Region4']\nStudent's Response:'Region4'\n",
    "Question Text:\nIs the interest level (Bytes) for \"Data Science\" more than \"Cybersecurity\" in this bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ntech_categories = ['Artificial Intelligence', 'Cybersecurity', 'Data Science', 'Internet of Things', 'Blockchain', 'Augmented Reality']\nvalues = [50, 30, 45, 35, 40, 45]\ncolors = ['#e8cf5e', '#468263']*3\nhatches = ['O', 'o']*3\n\n# Create bar chart\nplt.figure(figsize=(12,7))\nbars = plt.bar(tech_categories, values, color=colors, hatch=hatches[0])\n\n# Adding hatches to bars\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i%len(hatches)])\n\n# Labeling\nplt.title('Technology Topics Interest')\nplt.xlabel('Technology Categories')\nplt.ylabel('Interest Level(Bytes)')\n\n# Saving the figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/790.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich category has lesser number of units compared to the other categories in Space Exploration?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Mars Rovers', 'Satellites', 'Space Stations']\nvalues = [20, 35, 40]\ncolors = ['#acda5c', '#a98df3', '#f38c1e'] \n\n# Create bar chart\nplt.figure(figsize=[10,5])\nplt.barh(categories, values, color=colors)\n\n# Labels and Title\nplt.xlabel('Number of Units')\nplt.ylabel('Categories')\nplt.title('Space Exploration')\nplt.grid(axis='x')\n\n# Save Fig \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/791.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Mars Rovers', 'Satellites', 'Space Stations']\nStudent's Response:'Mars Rovers'\n",
    "Question Text:\nFrom the 1970s to 1980s, which continent experienced the greatest population growth?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Pre-defined data\ncategories = ['1950s', '1960s', '1970s', '1980s']\npopulation_growths = {'Americas': [30, 50, 70, 80], 'Asia': [60, 80, 120, 150], 'Africa': [20, 30, 60, 80]}\ncolors = {'Americas': '#8e2665', 'Asia': '#581d23', 'Africa': '#23644d'}\nhatches = {'Americas': 'O', 'Asia': '--', 'Africa': ''}\n\n# Create the bars\nbottom = [0, 0, 0, 0]\nfor continent, growths in population_growths.items():\n    plt.bar(categories, growths, bottom=bottom, color=colors[continent], hatch=hatches[continent])\n    bottom = [i+j for i, j in zip(bottom, growths)]\n\n# Set chart labels and title\nplt.xlabel(\"Decades\")\nplt.ylabel(\"Population Growth (Millions)\")\nplt.title(\"Population Growth by Decades\")\n\n# Save and show the bar chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/792.png')\nplt.show()\n```\nChoices:['Americas', 'Asia', 'Africa']\nStudent's Response:Asia\n",
    "Question Text:\nDoes the budget of 'Television' advertising exceed the budget of 'Social Media' advertising?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating a dictionary of data\ndata = {'Radio': 35, 'Television': 60, 'Newspaper': 25, 'Social Media': 45}\n\n# Specifying the colors\ncolors = ['#250148', '#15ce0d']\n\n# Creating the bar chart\nfig, ax = plt.subplots(figsize=(10, 8))  # Larger figure size for readability\nbars = plt.barh(list(data.keys()), list(data.values()), color=colors)\n\n# Adding value labels\nfor bar in bars:\n    width = bar.get_width()\n    plt.text(width-5, bar.get_y()+0.4, str(int(width)), color='white', fontweight='bold')\n\n# Adding title and labels\nplt.title('Advertising budget across different channels')\nplt.xlabel('Budget (in $ thousands)')\nplt.ylabel('Channels')\n\n# Rotating the x axis labels if necessary\nplt.xticks(rotation='horizontal')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/793.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the popularity value of Action movies less than that of War movies?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the movie categories and the corresponding values\nmovies = [\"Action\", \"Adventure\", \"Comedy\", \"Drama\", \"Horror\", \"Mystery\", \"Romance\", \"Sci-Fi\", \"Thriller\", \"War\"]\nvalues = [45, 30, 50, 55, 40, 35, 25, 40, 30, 50]\n\ncolors = ['#5f7e19', '#8b4951', '#9e958d', '#af6886', '#3eca72', '#e3b5f3', '#44a6af', '#2410ab']\nhatches = ['xx', '/', '+o', '|', '\\\\']\n\n# Create a figure with sufficiently large size to avoid word overlap\nplt.figure(figsize=(16, 10))\n\nfor i in range(len(movies)):\n    plt.barh(movies[i], values[i], color=colors[i%len(colors)], hatch=hatches[i%len(hatches)])\n\nplt.title(\"Movies Popularity\")\nplt.xlabel(\"Popularity (Round Number)\")\nplt.ylabel(\"Categories\")\nplt.tight_layout()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/794.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the bar chart, which property type has more units sold?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\ncategories = ['Residential Property', 'Commercial Property']\nvalues = [200, 165]\n\nfig = plt.figure(figsize = (10, 5))\n\n# Creating the bar plot\nplt.bar(categories, values, color =['#5e4a3e', '#e5f6fd'])\nplt.xlabel(\"Type of Property\")\nplt.ylabel(\"Units Sold\")\nplt.title(\"Units sold by Property Type\")\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/795.png')\nplt.show()\n```\nChoices:['Residential Property', 'Commercial Property']\nStudent's Response:Residential Property\n",
    "Question Text:\nDoes the bar chart show that drawing is the least popular hobby among the listed ones?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Gardening', 'Reading', 'Running', 'Swimming', 'Cooking', 'Drawing']\nhobbies = [20, 45, 25, 35, 40, 30]\ncolors = ['#5653a1', '#f807f1', '#392b2b', 'g', 'b', 'y']\nhatches = ['OO', '/', '\\\\\\\\', 'oo', '|', 'x']\n\nfig, ax = plt.subplots(figsize=(10,7))\n\nbars = plt.bar(categories, hobbies, color=colors, edgecolor='black')\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Hobbies')\nplt.xlabel('Categories')\nplt.ylabel('Number of people')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/796.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which sport the combined number of players and fans is the greatest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nsports = ['Basketball', 'Football', 'Baseball', 'Soccer', \n          'Cycling', 'Swimming', 'Wrestling', 'Boxing']\nplayers = [70, 80, 25, 60, 30, 10, 35, 15]\nfans = [50, 40, 30, 55, 20, 35, 45, 40]\n\nbar_width = 0.35\n\n# Colors\ncolors = ['#9e0cd7', '#9b3853', '#492c75', '#8ba43d', '#c03e36', '#ee9080']\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10, 7))\nbar1 = ax.bar(sports, players, color=colors[0], edgecolor='grey', width=bar_width)\nbar2 = ax.bar(sports, fans, color=colors[1], edgecolor='grey', width=bar_width, bottom=players)\n\n# Adding labels\nax.set_xlabel('Sports', fontsize=15)\nax.set_ylabel('Numbers (in thousands)', fontsize=15)\nax.set_title('Numbers of Players and Fans per Sport', fontsize=20)\nax.legend((bar1[0], bar2[0]), ('Players', 'Fans'))\n\n# Save the figure as PNG file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/797.png')\nplt.show()\n```\nChoices:['Basketball', 'Football', 'Baseball', 'Soccer', 'Cycling', 'Swimming', 'Wrestling', 'Boxing']\nStudent's Response:Football\n",
    "Question Text:\nDoes the category 'Renaissance' have more paintings than 'Cubism'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Renaissance', 'Impressionism', 'Cubism', 'Abstract']\ncolors = ['#f551a0', 'b', 'r', 'y']\n\nvalues1 = [20, 40, 35, 50]\nvalues2 = [15, 30, 25, 40]\n\nplt.figure(figsize=(10,7))\n\nplt.bar(categories, values1, color=colors)\nplt.bar(categories, values2, bottom=values1, color=colors)\n\nplt.xlabel('Art Movements')\nplt.ylabel('Number of Paintings')\nplt.title('Paintings by Art Movement')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/798.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nDid the percentage of PC gamers increase from 2018 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Predefined values, rounded\npc_gamers_percent = [50, 65, 55, 70]\nconsole_gamers_percent = [50, 35, 45, 30]\nyears = ['2018', '2019', '2020', '2021']\nhatches = ['+', '||']\n\nfig, ax = plt.subplots(figsize=(10, 7))\nbar_width = 0.65\n\n# First bar (PC Gamers)\nbar1 = plt.bar(years, pc_gamers_percent, color='g', edgecolor='black', hatch=hatches[0], width=bar_width)\n\n# Second bar (Console Gamers)\nbar2 = plt.bar(years, console_gamers_percent, bottom=pc_gamers_percent, color='b', edgecolor='black', hatch=hatches[1], width=bar_width)\n\nax.set_xlabel('Years')\nax.set_ylabel('Percentage of Gamers (%)')\nax.set_title('PC vs Console Gamers Over Time (2018-2021)')\nplt.xticks(years)\nplt.legend((bar1[0], bar2[0]), ('PC Gamers', 'Console Gamers'))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/799.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the bar chart, is Water Pollution causing the most impact as per the Environmental Impact Indicator?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for each category\nvalues = [30, 50, 75] \n\n# Name of each category\ncategories = ['Deforestation', 'Air Quality Degradation', 'Water Pollution'] \n\n# Setting colors for each bar\nbar_colors = ['#0813d2', '#37a33e', '#a31e60']\n\n# Setting hatch patterns for each bar\nbar_hatches = ['*', '+', '/']\n\nplt.figure(figsize=(10,7))\n\n# Creating the horizontal bar chart\nbars = plt.barh(categories, values, color=bar_colors)\n\n# Adding hatch patterns to each bar\nfor bar, pattern in zip(bars, bar_hatches):\n    bar.set_hatch(pattern)\n\nplt.xlabel('Environmental Impact Indicator')\nplt.title('The Impact of Different Environmental Issues')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/800.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nAccording to the bar chart, which is the most popular genre among people?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ncategories = ['Pop', 'Rock', 'Jazz', 'Classical']\nvalues = [20, 15, 25, 30]\n\n# Colors\ncolors = ['#7c6dda', '#6a39e7', '#c614af', '#af4685']\n\n# Create bar chart\nplt.figure(figsize=(10, 5))\nplt.barh(categories, values, color=colors)\n\n# Setting titles and labels\nplt.title('Popular Music Genres')\nplt.xlabel('Number of People (in millions)')\nplt.ylabel('Genres')\n\n# Set limits and ticks for easy readability\nplt.xticks(range(0, 36, 5))\n\n# Save chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/801.png')\nplt.show()\n```\nChoices:['Pop', 'Rock', 'Jazz', 'Classical']\nStudent's Response:Classical\n",
    "Question Text:\nWhich city had the smallest number of visitors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories and their values\ndestinations = ['Paris', 'New York', 'Tokyo', 'London', 'Sydney']\nvisitors = [35, 50, 45, 40, 55]\n\n# creating the bar chart\nplt.figure(figsize=(10, 5))\nplt.bar(destinations, visitors, color = 'blue')\n\n# labeling the chart\nplt.title('Number of International Visitors', fontsize = 16)\nplt.xlabel('Destinations', fontsize = 12)\nplt.ylabel('Visitors in Millions', fontsize = 12)\n\n# saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/803.png')\n\nplt.show()\n```\nChoices:['Paris', 'New York', 'Tokyo', 'London', 'Sydney']\nStudent's Response:'Paris'\n",
    "Question Text:\nWas more time spent on Cardio than weightlifting in the given fitness activity?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlabels = ['Time Spent on Cardio', 'Time Spent on Weightlifting']\nvalues = [60, 30]\n\nplt.figure(figsize=(10, 6))\n\nplt.barh(labels, values, color=['#a3f7f1', '#fcb103'])\n\nplt.xlabel('Time in Minutes')\nplt.title('Amount of Time Spent on Different Fitness Activities')\n\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/804.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the chart, does the \"Shepherd\" breed have higher female population than male population?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and Data\ndogs = ['Labrador', 'Shepherd', 'Bulldog', 'Terrier']\ndog_data = [[20, 25, 15, 20], [15, 30, 20, 35]]\n\n# Position of bars on x-axis\nind = [x for x, _ in enumerate(dogs)]\n\n# Figure size\nplt.figure(figsize=(10, 7))\n\n# Stacked Bar plot\nplt.bar(ind, dog_data[0], width=0.8, label='Male', color='#a1fb52', bottom=dog_data[1])\nplt.bar(ind, dog_data[1], width=0.8, label='Female', color='#320fb6')\n\nplt.xlabel(\"Dog Breed\")\nplt.ylabel(\"Count\")\nplt.title(\"Distribution of Dog Breeds by gender\")\n\n# xticks\nplt.xticks(ind, dogs)\n\n# Finding the best position for legends and putting it\nplt.legend(loc=\"upper right\")\n\n# save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/805.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes Surrealism category have the highest number or paintings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\ncategories = ['Renaissance', 'Baroque', 'Realism', 'Impressionism', 'Cubism', 'Abstract', 'Surrealism']\nvalues = [20, 35, 25, 30, 40, 45, 50]\ncolors = ['#e439c4', '#1a64bb', '#4e7b70', '#729273', '#c4bbda', '#456196', '#729273']\nhatches = ['*-', '+', '/o', 'O.', 'o', '+', '*-']\n\n# Create the bar chart\nplt.figure(figsize=(10,7))\nbars = plt.bar(categories, values, color=colors)\n\n# Adding hatches to the bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Number of Paintings Across Different Styles')\nplt.xlabel('Painting Styles')\nplt.ylabel('Number of Paintings')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/806.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs China's population close to 1400 million in the created chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncountries = [\"United States\", \"China\", \"India\", \"Russia\", \"Brazil\"]\npopulation = [330, 1395, 1366, 145, 211]\n\n# Bar chart\nplt.figure(figsize=(12,6))\nplt.bar(countries, population, color='green')\nplt.ylabel('Population (in millions)')\nplt.title('Population of Various Countries')\nplt.grid(True)\n\n# Save\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/808.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the water usage for cleaning more than drinking in both houses?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Drinking', 'Cleaning']\n\ncate1_values = [25, 30]\ncate2_values = [35, 45]\n\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(10,5))\n\nbar1 = ax.bar(categories, cate1_values, bar_width, label='House 1')\nbar2 = ax.bar(categories, cate2_values, bar_width, bottom=cate1_values, label='House 2')\n\nax.set_xlabel('Water Usage Categories')\nax.set_ylabel('Water Usage (in litres)')\nax.set_title('Water Usage in Different Categories for Two Different Houses')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/809.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the popularity of Dachshund increase from 2019 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# category data\ncategories = ['German Shepherd', 'Golden Retriever', 'Bulldog', 'Beagle', 'Poodle', 'Rottweiler', 'Yorkshire Terrier', 'Boxer', 'Dachshund']\n\n# bar value data\ncat1_values = [45, 40, 35, 30, 25, 20, 15, 10, 5]\ncat2_values = [5, 10, 15, 20, 25, 30, 35, 40, 45]\ncat3_values = [25, 30, 35, 40, 45, 50, 55, 60, 65]\n\nx = np.arange(len(categories))  # the label locations\n\n# adjust figure size to make room for the long labels\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set bar width and position\nwidth = 0.3\nbar1 = ax.bar(x - width, cat1_values, width, label='Dog Breed Popularity 2019', color='#468d31')\nbar2 = ax.bar(x, cat2_values, width, label='Dog Breed Popularity 2020', color='#04f353')\nbar3 = ax.bar(x + width, cat3_values, width, label='Dog Breed Popularity 2021', color='#24f78a')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Dog Breeds')\nax.set_ylabel('Popularity Index')\nax.set_title('Popularity of Different Dog Breeds over the years')\nax.set_xticks(x)\nax.set_xticklabels(categories, rotation = 45, ha=\"right\")\nax.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/811.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid 'Solar' production of energy in '2020' surpass 'Hydro' production of energy in '2015'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# data generation\ncategories = ['Solar', 'Hydro', 'Thermal', 'Nuclear', 'Wind', 'Biogas']\nn_categories = len(categories)\n\nvalues_2010 = np.array([5, 15, 25, 35, 30, 15]) * 5\nvalues_2015 = np.array([10, 20, 30, 35, 25, 20]) * 5\nvalues_2020 = np.array([20, 25, 35, 34, 25, 20]) * 5\n\nbarWidth = 0.35\n\nfig, ax = plt.subplots(figsize=(10,7))\n\n# Create a bar plot for each year\nbar1 = plt.bar(np.arange(n_categories), values_2010, color='#8f2c7b', width=barWidth)\nbar2 = plt.bar(np.arange(n_categories), values_2015, bottom=values_2010, color='#e505f7', width=barWidth)\nbar3 = plt.bar(np.arange(n_categories), values_2020, bottom=values_2010+values_2015, color='#a5d977', width=barWidth)\n\n# Create the tick labels\nplt.xlabel('Energy Sources')\nplt.ylabel('Energy Produced (GWh)')\nplt.xticks(np.arange(n_categories), categories, rotation=45)\nplt.title('Energy Production from Various Sources over the Years')\nplt.legend([bar1, bar2, bar3], ['2010', '2015', '2020'])\n\n# output the image to file\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/812.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nDoes Solar Energy produce more than Oil Energy according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Assigning values for different types of energy sources\nenergy_sources = {\"Solar\": 35, \"Wind\": 70, \"Oil\": 90, \"Coal\": 100, \"Hydro\": 65,  \"Nuclear\": 55}\n\n# Figure size to accommodate long labels\nplt.figure(figsize=(10,6))\n\n# Creating horizontal bar chart\nplt.barh(list(energy_sources.keys()), list(energy_sources.values()), color = 'teal')\nplt.xlabel('Energy Produced (in Million BTUs)') # x-axis label\nplt.ylabel('Energy Sources') # y-axis label\nplt.title('Energy Source Production') # Chart title\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/814.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs New York the city with the most population in the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ncities_population = {'New York City': 18500, 'Los Angeles': 16500, 'Chicago':14000, 'Houston': 12500}\ncolors = ['#c0e1ca', '#198395']\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nax.barh(list(cities_population.keys()), list(cities_population.values()), color=colors)\n\nax.xaxis.set_major_locator(ticker.MultipleLocator(500))\n\nplt.xlabel('Population (thousand)')\nplt.ylabel('Cities')\nplt.title('Population of Cities in the USA')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/816.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich programming language has the lowest popularity according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Python', 'JavaScript', 'C++', 'Java', 'Swift', 'C#', 'PHP']\nvalues = [70, 55, 35, 50, 20, 45, 40]\nhatches = ['x', '//', '', '*', 'o', '\\\\\\\\', '+']\n\nplt.figure(figsize=(10,7))\nbars = plt.bar(languages, values, color='mistyrose')\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n    \nplt.xlabel('Languages')\nplt.ylabel('Popularity (in thousands)')\nplt.title('Popularity of Programming Languages')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/819.png')\nplt.show()\n```\nChoices:['Python', 'JavaScript', 'C++', 'Java', 'Swift', 'C#', 'PHP']\nStudent's Response:Swift\n",
    "Question Text:\nIs the population in the swamp area higher than in the mountainous area?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Forest', 'Desert', 'Swamp', 'Mountainous', 'Prairie', 'Coastal', 'Urban']\narea_in_thousands_sq_km = [150, 85, 55, 95, 75, 100, 120]\npopulation_in_millions = [210, 20, 55, 45, 100, 180, 300]\n\nlabels = categories\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(12,7))\n\nbar1 = ax.bar(labels, area_in_thousands_sq_km, bar_width,label='Area in thousands (sq km)')\nbar2 = ax.bar(labels, population_in_millions, bar_width,bottom=area_in_thousands_sq_km,\n             label='Population in millions')\n\nax.set_ylabel('Values')\nax.set_title('Land: Area and Population Comparison')\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/820.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total area (in million hectares) of the 'Leased' land for Forestland?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Farmland', 'Forestland', 'Wetland', 'Grassland']\nvalues1 = [45, 70, 35, 55]  # in millions of hectares\nvalues2 = [50, 25, 40, 30]  # in millions of hectares\nind = range(len(categories))  # the x locations for the groups\nwidth = 0.5  # the width of the bars\n\n# Configure plot\nfig, ax = plt.subplots(figsize=(8, 6))\nbars1 = ax.bar(ind, values1, width, color='#603450', edgecolor='black', hatch='.')\nbars2 = ax.bar(ind, values2, width, bottom=values1, color='#7af9b5', edgecolor='black', hatch='*')\n\n# Configure labels, title, axes, legend etc\nax.set_ylabel('Area (Million hectares)')\nax.set_xlabel('Land type')\nax.set_title('Comparison of Land Types')\nax.set_xticks(ind)\nax.set_xticklabels(categories, rotation='horizontal')\nax.legend((bars1[0], bars2[0]), ('Owned', 'Leased'))\n\n# Saving the plot in a path\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/821.png')\n\nplt.show()\n```\nChoices:['75 million hectares', '95 million hectares', '25 million hectares', '50 million hectares']\nStudent's Response:'25 million hectares'\n",
    "Question Text:\nWhich bird has the highest count in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Topics and values\nbirds = ['Sparrow', 'Cardinal', 'Blue Jay', 'Starling', 'Canary',\n         'Night Owl', 'Barred Owl', 'Cuckoo', 'Rainbow Lorikeet']\nvalues = [60, 30, 75, 45, 80, 35, 90, 65, 40]\n\n# Colors\ncolors = ['#b855ec', '#19d6b5']*len(birds)\ncolors = colors[:len(birds)] # make sure we have the same number of colors as data points\n\n# Plotting the bar chart\nplt.figure(figsize=(15, 7))\nplt.barh(birds, values, color=colors)\nplt.xlabel('Count')\nplt.title('Birds')\nplt.xticks(range(0, 100, 10))\nplt.grid(axis='x')\nplt.tight_layout()\nplt.savefig(\"bar_charts/bar_charts_visual_linguistic/train/822.png\")\nplt.show()\n```\nChoices:['Sparrow', 'Cardinal', 'Blue Jay', 'Starling', 'Canary', 'Night Owl', 'Barred Owl', 'Cuckoo', 'Rainbow Lorikeet']\nStudent's Response:Barred Owl\n",
    "Question Text:\nDoes the bar chart show that more people follow an unhealthy diet than a healthy diet?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Health Category']\nbar_width = 0.25\n\nvalues1 = [45]\nvalues2 = [15]\n\ncategories_index = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\nrects1 = plt.bar(categories_index, values1, color='#0ea1d5', hatch='o', label='Healthy Diet')\nrects2 = plt.bar(categories_index, values2, color='orange', hatch='o', bottom=values1, label='Unhealthy Diet')\n\nplt.xticks(categories_index, categories)\nplt.xlabel('Categories', fontsize=15)\nplt.ylabel('Number of People', fontsize=15)\nplt.title('Health Analysis', fontsize=20)\nplt.legend()\n\nfor rects in [rects1, rects2]:\n    for rect in rects:\n        height = rect.get_height()\n        plt.text(rect.get_x() + rect.get_width()/2., height, \n                '%d' % int(height), ha='center', va='bottom')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/823.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich industry has the highest income for 'Highest Income Workers' sector?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import MultipleLocator\n\n# Income rounded by categories for three different groups: [Lowest Income Workers, Middle Income Workers, Highest Income Workers]\ncategories = ['Agriculture', 'Automobile', 'IT', 'Construction', 'Education', 'Healthcare', 'Leisure', 'Real Estate', 'Utilities']\nlowest_income = [15, 20, 25, 20, 15, 20, 15, 20, 25]\nmiddle_income = [30, 35, 40, 35, 30, 35, 30, 35, 40]\nhighest_income = [45, 50, 55, 50, 45, 50, 45, 50, 55]\n\nbarWidth = 0.25\nr1 = list(range(len(lowest_income)))\nr2 = [r + barWidth for r in r1]\nr3 = [r + barWidth for r in r2]\n\nfig = plt.figure(figsize=(10, 5))\n\nplt.bar(r1, lowest_income, color='#654701', width=barWidth, edgecolor='white', label='Lowest Income')\nplt.bar(r2, middle_income, color='#6f7bcd', width=barWidth, edgecolor='white', label='Middle Income')\nplt.bar(r3, highest_income, color='#b40f34', width=barWidth, edgecolor='white', label='Highest Income')\n\nplt.xlabel('Industry', fontweight='bold', fontsize=15)\n\nplt.xticks([r + barWidth for r in list(range(len(categories)))], categories)\n\nplt.yticks(list(range(0, 60, 5)))\n\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/824.png')\n\nplt.show()\n```\nChoices:['Agriculture', 'Automobile', 'IT', 'Construction', 'Education', 'Healthcare', 'Leisure', 'Real Estate', 'Utilities']\nStudent's Response:'IT'\n",
    "Question Text:\nHow many pieces of fish were caught in the lake?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# your data\ncategories = ['Lake', 'Sea', 'River']\nvalues = [20, 25, 15] # rounded to nearest 5\nhatches = ['|*', 'OO', '']\n\n# figure size\nplt.figure(figsize=(10, 6))\n\n# create bar chart\nbars = plt.bar(categories, values, color='skyblue')\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# add title and labels\nplt.title('Fishing Statistics')\nplt.xlabel('Water Type')\nplt.ylabel('Number of Fish Caught')\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/825.png')\nplt.show()\n```\nChoices:['15', '20', '25']\nStudent's Response:20\n",
    "Question Text:\nIs 'Grasses' the category with the highest number of species?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the plant categories and their corresponding values\nplants = ['Ferns', 'Conifers', 'Grasses', 'Flowers', 'Fruits', 'Vegetables', 'Herbs', 'Vines']\nvalues = [75, 65, 80, 70, 50, 85, 55, 60]\n\n# Colors for the bars\ncolors = ['#d48a3b', '#9a3537', '#738f2a', '#d1e024', '#56fa1f', '#95a5a6', '#e74c3c', '#34495e']\n\n# Create a figure of appropriate size\nplt.figure(figsize=(10, 8))\n\n# Create the bar chart\nbars = plt.bar(plants, values, color=colors)\n\n# Add title and labels\nplt.title('Number of Plant Species in Different Categories')\nplt.xlabel('Plant Categories')\nplt.ylabel('Number of Species')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/826.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich architecture style has more designs than buildings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncategories = ['Renaissance', 'Gothic', 'Modern', 'Contemporary']\nquestion_one_scores = [15, 20, 30, 25]\nquestion_two_scores = [10, 25, 20, 35]\nhatches = ['o', '*']\n\nlabels = categories\nx = np.arange(len(labels))  \nwidth = 0.35  \n\nfig, ax = plt.subplots(figsize=(10,6))\nbars1 = ax.bar(x - width/2, question_one_scores, width, hatch=hatches[0], label='Buildings')\nbars2 = ax.bar(x + width/2, question_two_scores, width, hatch=hatches[1], label='Designs')\n\nax.set_xlabel('Architecture Styles')\nax.set_ylabel('Scores')\nax.set_title('Scores by Architecture Styles and Categories')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/828.png')\nplt.show()\n```\nChoices:['Renaissance', 'Gothic', 'Modern', 'Contemporary']\nStudent's Response:Contemporary\n",
    "Question Text:\nIs 'Reading' a more popular hobby than 'Fishing' according to the data?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nhobbies = ['Reading', 'Gardening', 'Cycling', 'Camping', 'Swimming', 'Photography', 'Dancing', 'Painting', 'Fishing', 'Baking']\nvalues = [40, 50, 25, 30, 60, 45, 55, 50, 35, 40]\ncolors = ['#cf8e7d', '#b60f55', '#6ff073', '#ab07e3', '#7fc18d', '#cf8e7d', '#b60f55', '#6ff073', '#ab07e3', '#7fc18d']\nhatches = ['o', '-', 'o', '-', 'o', '-', 'o', '-', 'o', '-']\n\n# Create horizontal bar chart\nplt.figure(figsize=(10,8))\nbars = plt.barh(hobbies, values, color=colors, edgecolor='black')\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i])\n\n# Add labels\nplt.xlabel('Value')\nplt.ylabel('Hobbies')\nplt.title('Hobbies Bar Chart')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/829.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the usage of cars more than the usage of planes?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntransportation_modes = [\"Cars\", \"Bicycles\", \"Trains\", \"Planes\"]\nusage = [40, 15, 25, 20]\n\n# Create bar chart\nfig, ax = plt.subplots(figsize=(10,6))  # Set up figure and axis with appropriate size\nbars = ax.bar(transportation_modes, usage, color='purple')\n\n# Labeling\nax.set_title(\"Usage of Different Modes of Transportation\")\nax.set_xlabel(\"Mode of Transportation\")\nax.set_ylabel(\"Usage (%)\")\nplt.xticks(rotation=20)\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/830.png')\n\nplt.show();\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Facebook the social media platform with the least number of users among these three?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\ncategories = ['Facebook', 'Twitter', 'Instagram']\nvalues = [275, 320, 290]\ncolors = ['#81d596', '#069946', '#c7e256']\nhatches = ['x', '', '']\n\n# create figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# create horizontal bars\nbars = plt.barh(categories, values, color=colors)\n\n# add hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# set labels\nplt.xlabel('Number of Users (millions)')\nplt.ylabel('Social Media Platforms')\nplt.title('Numbers of users for various social media platforms')\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/831.png')\n\n# display\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the value for \"Sci-Fi\" genre greater than or equal the value for \"Fantasy\" genre?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify data for the bar chart  \ncategories = [\"Fantasy\", \"Mystery\", \"Drama\", \"Adventure\", \"Romance\", \"Sci-Fi\", \"Historical\"]\nvalues = [35, 25, 40, 30, 45, 50, 35]\ncolors = ['#988541', '#dcccb3', '#6ae458', '#988541', '#dcccb3', '#6ae458', '#988541']\nhatches = ['*-']\n\n# Do some calculations for the width and margin of the bar chart\nwidth = 0.5   \nmargin = 0.5   \n\n# Create a new figure with a custom size\nplt.figure(figsize=(10,7))\n\n# Create the bar chart\nfor i in range(len(categories)):\n    plt.bar(i+1, values[i], width, color=colors[i%len(colors)], \n            hatch=hatches[i%len(hatches)])\n\n# Add labels and title \nplt.xlabel('Genres') \nplt.ylabel('Number of Books') \nplt.title('Number of Books in 7 Literature Genres') \n\n# Specify the positions and labels of the X-axis ticks for better visualization\nplt.xticks([i+1 for i in range(len(categories))], categories)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/833.png') \n\n# Show the result \nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich level of education has the largest number of students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and corresponding values\ncategories = ['Elementary School', 'Middle School', 'High School', 'College', 'Grad School', 'PhD']\nvalues = [40, 55, 25, 50, 15, 10]\n\n# Colors\ncolors = ['#72998f', '#f23914', '#7b8d2e', '#8a4a79', '#d33be6']\n\nplt.figure(figsize=(10, 8))\n\n# Create horizontal bar chart\nbars = plt.barh(categories, values, color=colors)\n\nplt.title('Number of Students in Different Levels of Education (in thousands)')\nplt.xlabel('Number of Students (thousands)')\nplt.ylabel('Education Level')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/834.png')\nplt.show()\n```\nChoices:['Elementary School', 'Middle School', 'High School', 'College', 'Grad School', 'PhD']\nStudent's Response:Middle School\n",
    "Question Text:\n: Is the frequency of Emergency Room Visits less than the frequency of Annual Checkups?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define categories and their values\ncategories = ['Annual Checkups', 'Emergency Room Visits', 'Prescription Medications', 'Physical Therapy', 'Pediatric Care', 'Senior Care']\nvalues = [20, 15, 35, 40, 25, 45]\n\n# Define colors and hatches\ncolors = ['#dd1ccf', '#c29bb6', '#50d863', '#c11ce2', '#50d863', '#c11ce2']\nhatches = ['O|', 'o-', '//', 'O', '-', '+o']\n\n# Create figure and bar chart\nplt.figure(figsize=(10, 6))\nbars = plt.bar(categories, values, color=colors, align='center')\n\n# Apply hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Add title and labels to the chart\nplt.title('Medical Service Frequency')\nplt.xlabel('Medical Services')\nplt.ylabel('Frequency')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/836.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the category 'Automobiles' the highest retail sales among all categories?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nx = ['Grocery', 'Electronics', 'Apparels', 'Automobiles']\ny = [45, 65, 60, 70]\n\n# Figure size\nplt.figure(figsize=(10, 6))\n\ncolors = ['#3c25f1', '#223980', '#54d66a', '#cc9cd7']\n\nplt.bar(x, y, color = colors)\nplt.title('Retail Sales by Category')\nplt.xlabel('Retail Categories')\nplt.ylabel('Sales (in millions of dollars)')\nplt.grid(True)\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/837.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich charity has the highest total donation amount?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncharities = ['Charity1', 'Charity2', 'Charity3', 'Charity4', 'Charity5', 'Charity6', 'Charity7', 'Charity8', 'Charity9', 'Charity10']\namounts = [[20, 35, 25, 40, 20, 45, 25, 35, 30, 40], [15, 25, 30, 35, 15, 30, 20, 10, 25, 35], \n           [20, 30, 35, 25, 20, 35, 25, 30, 35, 15], [15, 20, 15, 30, 25, 35, 30, 15, 20, 25]]\ncolors = ['#318fd6', '#e232c0', '#2254c6', '#636051']\n\n# Figure size\nplt.figure(figsize=(12, 10))\n\n# Stacked bar chart\nbars = plt.bar(range(len(charities)), amounts[0], color=colors[0])\nfor i in range(1, len(amounts)):\n    bars = plt.bar(range(len(charities)), amounts[i], bottom=[sum(amounts[j][k] for j in range(i)) for k in range(len(charities))], color=colors[i])\n\nplt.xlabel('Charities')\nplt.ylabel('Amounts in $')\nplt.title('Donation Amounts in Different Charities')\nplt.xticks(range(len(charities)), charities, rotation=45)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/838.png') \nplt.close()\n```\nChoices:['Charity1', 'Charity2', 'Charity3', 'Charity4', 'Charity5', 'Charity6', 'Charity7', 'Charity8', 'Charity9', 'Charity10']\nStudent's Response:The amount for each charity can be calculated by summing up the donations from different sources. This can be done by summing up the values in each column of the data. Once the sum for each charity is calculated, we compare these sums to find the charity with the highest total donation.\n",
    "Question Text:\nWhich category received the highest total poll percentage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Healthcare', 'Environment', 'Education', 'Economy', 'Defense',\n              'Immigration', 'Law & Order', 'Foreign Policy', 'Infrastructure', 'Social Issues']\nvalues1 = [35, 40, 45, 30, 35, 30, 50, 25, 20, 55]\nvalues2 = [15, 10, 10, 15, 15, 20, 10, 15, 30, 5]\nvalues3 = [25, 25, 20, 30, 25, 15, 15, 35, 25, 15]\n\nind = np.arange(len(categories))    \nwidth = 0.35      \n\nfig, ax = plt.subplots(figsize=(10, 7))\n\np1 = ax.bar(ind, values1, width, color='#0371f4', hatch=hatches[0])\np2 = ax.bar(ind, values2, width, bottom=values1, color='#d99c28', hatch=hatches[1])\np3 = ax.bar(ind, values3, width, bottom=np.array(values1)+np.array(values2), color='#60e41c', hatch=hatches[2])\n\nax.axhline(0, color='grey', linewidth=0.8)\nax.set_ylabel('Poll Percentage')\nax.set_title('Public Opinion Polls')\nax.set_xticks(ind)\nax.set_xticklabels(categories, rotation = 45, ha=\"right\")\nax.legend((p1[0], p2[0], p3[0]), ('Group1', 'Group2', 'Group3'))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/839.png') \nplt.show()\n```\nChoices:['Healthcare', 'Environment', 'Education', 'Economy', 'Defense', 'Immigration', 'Law & Order', 'Foreign Policy', 'Infrastructure', 'Social Issues']\nStudent's Response:Social Issues\n",
    "Question Text:\nWhich medium saw the highest increase in advertising spend from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['TV', 'Radio', 'Social Media', 'Print', 'Outdoor', 'Search Engine', 'Email', 'PR', 'Word-of-Mouth']\nvalues_2020 = [350, 305, 450, 175, 200, 345, 225, 215, 190]\nvalues_2021 = [385, 310, 485, 180, 210, 365, 230, 220, 195]\nbar_width = 0.35\nopacity = 0.8\n\n# Figure creation\nfig, ax = plt.subplots(figsize=(12, 7))\n\n# Bar plotting\nbar_2020 = plt.bar(categories, values_2020, color='b', alpha=opacity, hatch='||', label='2020')\nbar_2021 = plt.bar(categories, values_2021, color='r', alpha=opacity, hatch='oo', label='2021',bottom=values_2020)\n\n# Labels, Title, Legend\nplt.xlabel('Advertising Mediums')\nplt.ylabel('Advertising Spend (in $M)')\nplt.title('Advertising Spend by Mediums')\nplt.legend()\n\n# Axis\nplt.xticks(rotation=30, ha='right')\n\n# Save the chart\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/840.png')\nplt.show()\n```\nChoices:['TV', 'Radio', 'Social Media', 'Print', 'Outdoor', 'Search Engine', 'Email', 'PR', 'Word-of-Mouth']\nStudent's Response:'Social Media'\n",
    "Question Text:\nWhat is the total sum of land in millions of hectares for both countries in the 'Agricultural Land' category?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nland_categories = ['Forest Land', 'Agricultural Land', 'Residential Land', 'Industrial Land', 'Communal Land', 'Wetlands']\nvalues1 = [45, 50, 40, 55, 60, 50]\nvalues2 = [50, 55, 45, 60, 65, 60]\n\nx = np.arange(len(land_categories))\n\nfig, ax = plt.subplots()\nbar1 = ax.bar(x - 0.2, values1, 0.4, label='Country A')\nbar2 = ax.bar(x + 0.2, values2, 0.4, label='Country B')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Land Categories')\nax.set_ylabel('Value in millions of hectares')\nax.set_title('Land Distribution in Country A and Country B')\nax.set_xticks(x)\nax.set_xticklabels(land_categories, rotation=45)\n\nax.legend()\n\nfig.tight_layout()\nfig.set_size_inches(10, 6)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/842.png')\nplt.show()\n```\nChoices:['95 million hectares', '105 million hectares', '110 million hectares', '120 million hectares']\nStudent's Response:105\n",
    "Question Text:\nDoes the 'FIFA World Cup' have the highest popularity among the listed sports?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsports = ['Basketball', 'American Football', 'Baseball', 'Tennis', 'FIFA World Cup']\nsports_popularity = [45, 70, 40, 65, 95]\n\nplt.figure(figsize=(10,5))\n\nbar_chart = plt.bar(sports, sports_popularity, color='#4f0543')\n\nplt.xlabel('Sports')\nplt.ylabel('Popularity (in millions)')\nplt.title('Popularity of Various Sports')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/843.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes 'Earthquakes' has higher frequency than 'Cyclones/Hurricanes'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Floods', 'Earthquakes', 'Volcanic Eruptions', 'Tsunamis', 'Landslides', 'Wildfires', 'Cyclones/Hurricanes', 'Droughts', 'Heatwaves', 'Coldwaves']\nvalues = [40, 70, 25, 20, 30, 60, 50, 35, 55, 45]\ncolors = ['#708180', '#8fdb10', '#609da4', '#cf2fbe', '#3dc917', '#577bae', '#609da4', '#3dc917', '#708180', '#cf2fbe']\n\n# Create figure\nplt.figure(figsize=(10, 8))\n\n# Add horizontal bar chart\nplt.barh(categories, values, color=colors)\n\n# Set labels and title\nplt.xlabel('Disaster Frequency')\nplt.ylabel('Disasters')\nplt.title('Natural Disasters Frequency')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/844.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of Renaissance paintings higher than Modern paintings in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define data\ncategories = ['Renaissance', 'Modern', 'Contemporary']\nvalues = [50, 35, 45]\n\n# create bar chart\nplt.figure(figsize=(10, 7))\nplt.bar(categories, values, color=['#1f77b4', '#ff7f0e', '#2ca02c'])\n\n# add labels\nplt.title('Number of Paintings in Different Periods')\nplt.xlabel('Periods')\nplt.ylabel('Number of Paintings')\nplt.grid(True)\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/845.png')\n\n# show the chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn 2019, which type of disaster had the highest occurrence?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport pandas as pd\n\n# data to plot\nn_disasters = ['Earthquake', 'Tornado', 'Flood']\nn_2017 = [25, 40, 30]\nn_2018 = [20, 35, 25]\nn_2019 = [30, 45, 35]\n\ndf = pd.DataFrame([n_2017, n_2018, n_2019],\n                  columns=n_disasters, index=[2017, 2018, 2019])\n\nbar_colors = ['#b78b7b', '#cca1c2', mcolors.CSS4_COLORS['slategrey']] # three colors for three types of disasters\n\ndf.plot(kind='bar', color=bar_colors, figsize=(10,7), edgecolor='black')\n\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Number of Disasters', fontsize=12)\nplt.title('Number of Natural Disasters per year', fontsize=15)\nplt.xticks(rotation=0)\nplt.grid(False)\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/846.png')\nplt.show()\n```\nChoices:['Earthquake', 'Flood', 'Tornado']\nStudent's Response:'Tornado'\n",
    "Question Text:\nIs 'Coding' the hobby with the 35 participants?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the hobbies and their values\nhobbies = ['Reading', 'Gardening', 'Cooking', 'Coding', 'Swimming', 'Hiking', 'Cycling', 'Photography', 'Traveling', 'Fishing']\nvalues = [45, 50, 40, 60, 55, 45, 50, 35, 60, 50]\n\ncolors = ['#207940', '#2e998c', '#b59a68', '#207940', '#2e998c', '#b59a68', '#207940', '#2e998c', '#b59a68', '#207940']\n\n# Create the bar chart\nplt.figure(figsize=(10, 8))\nplt.barh(hobbies, values, color=colors)\n\nplt.title('Hobbies')\nplt.xlabel('Participants')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/847.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich festival has the highest attendance according to the bar chart above?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfestivals = ['Day of the Dead', 'Mardi Gras', 'Diwali', 'Hanami', 'Burning Man', 'Saint Patrick\u2019s Day', 'Carnival', 'Oktoberfest']\npeople_in_millions = [5, 15, 20, 5, 10, 20, 30, 25] \n\nplt.figure(figsize=[20, 10]) \n\ncolors=['#b6db74', '#676871', '#4445d4', '#c464ad','#b6db74', '#676871', '#4445d4', '#c464ad']\n\nplt.bar(festivals, people_in_millions, color=colors)\n\nplt.xlabel('Festivals')\nplt.ylabel('Attendance in Millions')\nplt.title('Festival Attendance')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/849.png')\n\nplt.show()\n```\nChoices:['Day of the Dead', 'Mardi Gras', 'Diwali', 'Hanami', 'Burning Man', 'Saint Patrick\u2019s Day', 'Carnival', 'Oktoberfest']\nStudent's Response:Carnival\n",
    "Question Text:\nDid the 'Penthouse' category have the most number of houses available?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their values\ncategories = ['Studio', '1 Bedroom', '2 Bedrooms', '3 Bedrooms', 'Bachelor Pad',\n              'Penthouse', 'Loft', 'Townhome', 'Condominium', 'Retirement Home']\nvalues = [20, 30, 45, 35, 25, 55, 40, 50, 45, 30]\n\n# Bar chart colors\nbar_color = '#d01a71'\n# Hatches\nhatches = ['-', 'OO', '*-', 'O', '//', 'O.']\n\nfig, ax = plt.subplots(figsize=(15, 10))  # Defining the plot\n\n# Creating the horizontal bar chart\nbars = plt.barh(categories, values, color=bar_color)\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i % len(hatches)])\n\nplt.xlabel('Number of Houses Available')  # X-axis Label\nplt.ylabel('Housing Category')  # Y-axis Label\nplt.title('Housing Availability')  # Title of the bar chart\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/850.png') \nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the second most prevalent land type around the world as per the graph?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Forest', 'Desert', 'Tundra', 'Grassland', 'Mountain', 'Wetland']\ncolors = ['#37c870', '#9597d5', '#79be12', '#c9fbfe', '#e3a205', '#bbb446']\n\n# Values are in million square kilometers\nland_type = [100, 80, 50, 65, 35, 25]\n\n# Create a figure with sufficient size to avoid word overlap\nplt.figure(figsize=(10,7))\n\n# Create a bar chart\nbar_chart = plt.bar(categories, land_type, color=colors)\n\nplt.title('Distribution of Land Types Around The World', fontsize=16)\nplt.ylabel('Area (million sq. km)', fontsize=12)\nplt.xlabel('Land Type', fontsize=12)\nplt.ylim(0, 110)\n\n# Save Figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/851.png')\n\nplt.show()\n```\nChoices:['Forest', 'Desert', 'Tundra', 'Grassland', 'Mountain', 'Wetland']\nStudent's Response:'Desert'\n",
    "Question Text:\nWhat was the rating of the movie 'The Dark Knight'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Variables\nmovies = ['Pulp Fiction', 'Fight Club', 'The Dark Knight',\n          'Inception', 'Interstellar', 'The Matrix']\nrating = [90, 85, 100, 90, 95, 80]  # rounded to nearest 5\ncolors = ['#51d4ed', '#3e7f23', '#fe69ed', '#51d4ed', '#3e7f23', '#fe69ed']\nhatches = ['O|', '+', 'o-', '+', 'o-', 'O|']\n\n# Set the figure size to handle long labels\nplt.figure(figsize=(10, 6))\n\n# Plot\nbars = plt.bar(movies, rating, color=colors)\n# Adding the hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set the title and labels\nplt.title('Movie Ratings')\nplt.xlabel('Movies')\nplt.ylabel('Ratings')\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/852.png')\n\nplt.show()\n```\nChoices:['80', '85', '90', '95', '100']\nStudent's Response:100\n",
    "Question Text:\nBy how many units has the count of Dolphins increased from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nCategory = ['Elephants', 'Lions', 'Bears', 'Wolves', 'Dolphins', 'Whales', 'Tigers', 'Leopards']\nYear_2010 = [50, 75, 80, 95, 30, 65, 100, 70]\nYear_2020 = [35, 85, 70, 95, 40, 75, 90, 75]\n\n\nx = np.arange(len(Category))\nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(12,7))\n\nrects1 = ax.bar(x - width/2, Year_2010, width, label='2010', color='#c898c4')\nrects2 = ax.bar(x + width/2, Year_2020, width, label='2020', color='#d5d2a2')\n\nax.set_ylabel('Number of Animals')\nax.set_title('Wildlife Conservation from 2010 to 2020')\nax.set_xticks(x)\nax.set_xticklabels(Category)\nax.legend()\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/853.png')\nplt.show()\n```\nChoices:[0, 5, 10, 15, 20]\nStudent's Response:10\n",
    "Question Text:\nWhich language has the closest number of primary and secondary speakers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Languages and their corresponding number of speakers in millions\n# (data rounded to the nearest 5 million)\nlanguages = ['English', 'Mandarin Chinese', 'Hindi', 'Spanish']\nnum_speakers = [1500, 2000, 1250, 550]\n\n# Secondary Language speakers\nsecondary_speakers = [825, 1850, 500, 1000]\n\nx = range(len(languages))\n\nplt.figure(figsize=(10,8))\nplt.bar(x, num_speakers, width=0.4, label='Primary Language Speakers', color='skyblue', align='center')\nplt.bar(x, secondary_speakers, width=0.4, label='Secondary Language Speakers', color='darkblue', align='edge')\n\nplt.xlabel('Languages')\nplt.ylabel('Number of Speakers (in millions)')\nplt.title('Number of Primary vs. Secondary Language Speakers')\nplt.xticks(x, languages, rotation='horizontal')\nplt.legend()\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/855.png')\nplt.show()\n```\nChoices:['English', 'Mandarin Chinese', 'Hindi', 'Spanish']\nStudent's Response:Mandarin Chinese\n",
    "Question Text:\nIs 'Men' score in 'Basketball' higher than 'Women'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Basketball', 'Football', 'Swimming', 'Tennis', 'Hockey', 'Cricket']\nmen_scores = [50, 45, 35, 40, 55, 30]\nwomen_scores = [35, 50, 45, 30, 40, 55]\n\nx = np.arange(len(labels))  \nwidth = 0.35  \n\nfig, ax = plt.subplots(figsize = (10, 5))\n\nrects1 = ax.bar(x - width/2, men_scores, width, label='Men', color='#2b4129')\nrects2 = ax.bar(x + width/2, women_scores, width, label='Women', color='#14c97f')\n\nax.set_ylabel('Scores')\nax.set_title('Scores by Group and Gender in Different Sports')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n# this function has been added to add labels the bars\ndef autolabel(rects):\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  \n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/856.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the total area in thousands of hectares used for the wheat cultivation in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Corn cultivation', 'Wheat cultivation']\nvalues1 = [20, 30]  # In thousands of hectares\nvalues2 = [35, 45]  # In thousands of hectares\n\nplt.figure(figsize=(10,7))\n\nbarWidth = 0.5\n\nplt.bar(categories, values1, color='#f2507f', width=barWidth, hatch='**', label='2019')\nplt.bar(categories, values2, color='#f61aa0', width=barWidth, bottom=values1, hatch='*', label='2020')\n\nplt.xlabel('Cultivation type')\nplt.ylabel('Area (In Thousands of Hectares)')\nplt.title('Area of Different Cultivations in 2019 and 2020')\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/857.png')\nplt.show()\n```\nChoices:['70', '75', '85', '65']\nStudent's Response:75\n",
    "Question Text:\nDid the revenue from the 'Grocery' category show an increasing trend from 2018 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Grocery', 'Clothing', 'Electronics', 'Furniture', 'Sporting Goods', 'Toys', 'Jewelry', 'Cosmetics', 'Health Care', 'Books']\n\nvalues1 = [20, 30, 50, 60, 45, 55, 35, 40, 65, 50]\nvalues2 = [55, 65, 80, 40, 50, 45, 75, 80, 50, 50]\nvalues3 = [60, 70, 75, 85, 90, 80, 90, 85, 80, 75]\n\ncolors = ['#c4f0b4', '#19621f', '#9d47b0', '#8983b1', '#1a949e']\n\nfig, ax = plt.subplots(figsize=(10,6))\n\nax.bar(categories, values1, color=colors[0], label='2018')\nax.bar(categories, values2, bottom=values1, color=colors[1], label='2019')\nax.bar(categories, values3, bottom=[i+j for i,j in zip(values1, values2)], color=colors[2], label='2020')\n\nax.set_ylabel('Revenue in $ (in Thousands)')\nax.set_xlabel('Retail Categories')\nax.set_title(\"Yearly Revenue of Different Retail Categories\")\nax.legend()\n\nplt.xticks(rotation=45)\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/858.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Action' movie category more watched than 'Horror' movie category according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to plot\nmovies = ['Comedy', 'Action', 'Romance', 'Horror', 'Sci-Fi']\nviewers = [45, 70, 60, 50, 40]  # These are all rounded to nearest 5\n\ncolors = ['#8bf2dd', '#c399fb', '#5c7b22', '#fc8671', '#eaebab']\nhatches = ['|*', '-', '//', 'o', 'x']\n\n# Assume viewers are in thousands\n\n# Create horizontal bars\nplt.barh(movies, viewers, color=colors, hatch=hatches[0])\n\n# Create names on the y-axis\nplt.yticks(range(len(movies)), movies)\n\n# Add title and axis names\nplt.title('Number of Viewers by Movie Category')\nplt.xlabel('Number of viewers (in 1000s)')\nplt.ylabel('Movie Category')\n\n# Change figure size for long labels\nplt.gcf().set_size_inches(10, 8)\n\nplt.tight_layout()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/859.png')\n\n# Show graphic\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Vegetables' the most consumed food category according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create the data\nfood_categories = ['Fruits', 'Vegetables', 'Meat', 'Dairy', 'Grains']\nvalues = [30, 45, 25, 40, 35]\n\n# Create a figure of size 10x7\nplt.figure(figsize=(10, 7))\n\n# Create the bar chart\nbars = plt.barh(food_categories, values, color='#b7fa4c')\n\n# Set the title and labels\nplt.title('Food Categories Consumption')\nplt.xlabel('Consumption (in kg)')\nplt.ylabel('Food Categories')\n\n# Save the image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/860.png')\n\n# Show the chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the average wind speed higher on Sunday than the average rainfall?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Categories - these could be months or specific days for instance.\ncategories = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\nrainfall = [12, 3, 19, 20, 12, 24, 4]  # Amount of rainfall (mm)\ntemperature = [16, 18, 20, 16, 23, 15, 9]  # Average temperature (\u00b0C)\nwind_speed = [24, 15, 18, 16, 15, 19, 27]  # Average wind speed in (km/h)\n\nx = np.arange(len(categories))  # the label locations\nwidth = 0.25  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 6))\nrects1 = ax.bar(x - width, rainfall, width, label='Rainfall (mm)', color='#5ab800', hatch='*')\nrects2 = ax.bar(x, temperature, width, label='Temperature (\u00b0C)', color='#5a2957', hatch='//')\nrects3 = ax.bar(x + width, wind_speed, width, label='Wind Speed (km/h)', color='#dc554f', hatch='O')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_title('Weather parameters recorded for a week')\nax.set_xlabel('Days of Week')\nax.set_ylabel('Values')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/861.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDo people spend more hours on gym workouts than home workouts according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Gym Workouts', 'Home Workouts']\nvalues = [30, 15]\n\nplt.figure(figsize = (10, 5))\n\nbars = plt.bar(categories, values, color=['#0b2fe0', '#56afff'])\n\nplt.xlabel('Workout Types')\nplt.ylabel('Hours Per Week')\nplt.title('Weekly hours spent on different types of workouts')\n\nfor bar in bars:\n    yval = bar.get_height()\n    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, int(yval), ha='center', va='bottom')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/862.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Agriculture' category of the Economy represented with a value greater than 'Construction' category in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Economy categories and their corresponding values\neconomy_categories = ['Agriculture', 'Manufacturing', 'Construction', 'Retail Trade', 'Transportation', \n                      'Information', 'Finance and Insurance', 'Real Estate']\nvalues = [15, 30, 10, 20, 25, 30, 35, 40]\ncolors = ['#25d202', '#409218', '#25d202', '#409218', '#25d202', '#409218', '#25d202', '#409218']\nhatches = ['|*', '/o', '-\\\\', 'O|', 'xx', 'o', '*']\n\nplt.figure(figsize=(12, 8)) # so the labels don't overlap\n\n# Generating the bar chart\nbars = plt.barh(economy_categories, values, color=colors)\n# Apply hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title(\"Economy categories with their values\")\nplt.xlabel('Value')\nplt.ylabel('Economy Categories')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/863.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nFrom this bar chart, which mode of travel is used for longest distances?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntravel_modes = ['Car', 'Bicycle', 'Airplane', 'Boat']\ndsl_ = [20, 5, 35, 15]\n\nplt.figure(figsize=(10, 6))\n\n# Create horizontal bars\nbar_colors = ['#5a42e4', '#286ca4', '#5a42e4', '#286ca4']\nbar_hatches = ['O', '', 'O', '']\nfor i, mode in enumerate(travel_modes):\n    plt.barh(mode, dsl_[i], color=bar_colors[i], hatch=bar_hatches[i])\n\n# Create labels\nplt.xlabel('Distance (in 1000 km)')\nplt.title('Travel Distances Covered by Different Modes of Travel')\n\n# Save the figure to a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/864.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Car', 'Bicycle', 'Airplane', 'Boat']\nStudent's Response:Airplane\n",
    "Question Text:\nDoes \"Sunny Days\" occur more than 50% of the time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create some data\ncategories = ['Sunny Days', 'Rainy Days', 'Cloudy Days', 'Snowy Days']\nvalues = [20, 25, 15, 5] # in percentages rounded to the nearest 5\n\n# Create a bar chart\nplt.figure(figsize=(10, 5))\nbars = plt.barh(categories, values, color='skyblue', edgecolor='black', hatch='o-')\n\n# Adding a different hatch pattern to every other bar\nfor i, bar in enumerate(bars):\n    if i % 2:\n        bar.set_hatch('*')\n\n# Add labels, title, etc to improve readability\nplt.xlabel('Percentage of Time (%)')\nplt.ylabel('Weather Category')\nplt.title('Distribution of Different Weather Categories')\nplt.grid(axis='x')\n\n# Finally, save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/865.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the \"Single Family\" category the one with the least sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Single Family', 'Multi Family', 'Apartment', 'Condominium', 'Townhouse']\nvalues = [25, 45, 60, 35, 55]\ncolors = ['#625602', '#4e92c3', '#dddb4e', '#3e628c', '#3e628c']\nhatches = ['/', '', '', '/', '/']\n\nfig, ax = plt.subplots(figsize=(10, 10))  \nbars = plt.barh(categories, values, color=colors)\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nax.set_xlabel('Sales (in Millions)')\nax.set_title('Real Estate Sales by Property Type')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/866.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the highest index score among the health categories?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Exercise', 'Diet', 'Rest', 'Mental Health', 'Check-Ups']\nvalues = [85, 75, 80, 65, 90]\ncolors = ['#b5f8f4', '#738a93', '#bd611a', '#de5a8a', '#4fb302']\n\n# Creating the chart\nplt.figure(figsize=(10, 6))  \nplt.barh(categories, values, color=colors)\n\nplt.title('Health Habits Index')\nplt.xlabel('Index')\nplt.ylabel('Categories')\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/868.png')\nplt.show()\n```\nChoices:['Exercise', 'Diet', 'Rest', 'Mental Health', 'Check-Ups']\nStudent's Response:Check-Ups\n",
    "Question Text:\nFrom the bar chart, what is the GDP (in trillion $) of China?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the data\nlabels = ['GDP (Trillion $)', 'Unemployment Rate (%)']\nUSA_values = [21, 4]\nChina_values = [14, 4]\n\nx = range(len(labels))\n\n# Creating the bar chart\nfig, ax = plt.subplots(figsize = (10,6))\n\nplt.bar(x, USA_values, width=0.4, align='center', color='#fd4e3f', label='USA')\nplt.bar(x, China_values, width=0.4, align='edge', color='#add8e6', label='China')\n\n# Adding labels and title\nax.set_xlabel('Economic Indicators')\nax.set_ylabel('Values')\nax.set_title('USA vs China Economy')\n\nax.set_xticks(x)\nax.set_xticklabels(labels)\n\nax.legend()\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/869.png')\n\nplt.show()\n```\nChoices:['10', '14', '18', '20']\nStudent's Response:14\n",
    "Question Text:\nFrom the bar chart, which breed of cat typically weighs 15 pounds and has a lifespan of 15 years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\ncats = ['Persian', 'Siamese', 'Maine Coon', 'Ragdoll', \n        'Bengal', 'Sphynx', 'British Shorthair']\ncat_weights = [15, 10, 20, 15, 15, 10, 12]\ncat_lifespans = [15, 20, 15, 20, 12, 15, 20]\n\n# Creating figure\nfig = plt.figure(figsize = (10, 5)) \n\n# Creating axes instance\nax = plt.axes()\n\n# Creating the bar plot\nplt.bar(cats, cat_weights, color ='#1b67a0', width = 0.4, hatch='+o')\nplt.bar(cats, cat_lifespans, color ='#a01b6e', width = 0.4, hatch='x')\n\n\nax.set_title('Comparison of weights and lifespans of different cat breeds')\nax.set_xlabel('Cat breeds')\nax.set_ylabel('Weights and Lifespans (in years)')\nplt.legend(['Weigths', 'Lifespans'])\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/870.png')\nplt.show()\n```\nChoices:['Persian', 'Ragdoll', 'Bengal', 'Maine Coon']\nStudent's Response:Persian\n",
    "Question Text:\nIs the number of lions greater than the number of elephants?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Declare data\nanimals = ['Elephants', 'Dolphins', 'Lions', 'Kangaroos', 'Penguins', 'Bears']\nnumbers = [25, 30, 15, 20, 35, 40]\ncolors = ['#105a94', '#686b48', '#1a8101', '#105a94', '#686b48', '#1a8101']\nhatches = ['x*', 'O.', '//', '|', '*', '.']\n\n# Create horizontal bar chart\nplt.figure(figsize=[10,8])\nbars = plt.barh(animals, numbers, color=colors)\n\n# Add hatches\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n\nplt.xlabel('Numbers')\nplt.ylabel('Animals')\nplt.title('Number of Animals')\n\n# Save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/871.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the 'Shooter' genre category has the highest average play time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories and their values \ncategories = ['Action', 'Adventure', 'Role-Playing', 'Shooter', 'Strategy']\nvalues = [30, 40, 20, 50, 35]\n\nplt.figure(figsize=(10, 6))\n\n# create bar chart using specific color\nplt.bar(categories, values, color='#df306d')\n\nplt.title('Average Play Time by Game Genre')\nplt.xlabel('Game Genre')\nplt.ylabel('Average Play Time (Hours)')\nplt.grid(True)\n\n# save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/872.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHave there been more floods in 2021 than wildfires?\nFigure Code:\n```\n# import necessary libraries\nimport matplotlib.pyplot as plt\n\n# given data\ncategories = ['Earthquakes', 'Floods', 'Wildfires']\nvalues_2019 = [15, 25, 30]\nvalues_2020 = [20, 20, 35]\nvalues_2021 = [10, 30, 25]\nbar_width = 0.25\n\n# setting figure size\nplt.figure(figsize=[10,8])\n\n# setting bar positions\nbar1 = range(len(categories))\nbar2 = [i + bar_width for i in bar1]\nbar3 = [i + bar_width for i in bar2]\n\n# drawing bars\nplt.bar(bar1, values_2019, color='#079551', width=bar_width, label='2019')\nplt.bar(bar2, values_2020, color='#61b102', width=bar_width, label='2020')\nplt.bar(bar3, values_2021, color='#35ba0e', width=bar_width, label='2021')\n\n# adding labels\nplt.xlabel('Types of Natural Disasters')\nplt.ylabel('Number Of Disasters (rounded to nearest 5)')\nplt.title('Number of Natural Disasters From 2019 to 2021')\n\n# adding xticks \nplt.xticks([r + bar_width for r in range(len(categories))], categories)\n\n# display legend\nplt.legend()\n\n# saving figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/873.png')\n\n# showing plot\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nIn the stacked bar chart, how much more travel was there in 2020 than in 2019 in South America?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['North America', 'South America', 'Europe', 'Asia', 'Africa', 'Australia']\nyears_2019 = [25, 30, 35, 40, 45, 50]\nyears_2020 = [30, 35, 40, 45, 50, 55]\n\ncolors = ['#40b9bf', '#ffc658']\nhatches = ['\\\\|', '/']\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Stack bars for years 2019 and 2020\nax.bar(x, years_2019, color=colors[0], hatch=hatches[0], edgecolor='black')\nax.bar(x, years_2020, bottom=years_2019, color=colors[1], hatch=hatches[1], edgecolor='black')\n\n# Creating labels\nax.set_ylabel('Values')\nax.set_title('Travel in 2019 vs 2020')\nax.set_xticks(x)\nax.set_xticklabels(categories, rotation='vertical')\n\n# Display the figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/874.png')\nplt.show()\n```\nChoices:[5, 10, 15, 20]\nStudent's Response:Since we are looking for the increase in travel from 2019 to 2020 in the South America category, we can clearly see from the stacked bar chart that travel went from 30 (2019) to 35 (2020), meaning there was an increase of 5.\n",
    "Question Text:\nIs the number of Dogs more than the number of Cats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nanimals = ['Dogs', 'Cats', 'Birds']\nvalues = [20, 30, 15] \n\n# create the figure\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# plot stacked bar chart\nax.bar(animals, values, color='#f0fb33')\n\n# set title and labels\nax.set_title('Number of Animals')\nax.set_xlabel('Animals')\nax.set_ylabel('Number')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/875.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhat Festival has an attendance of 30 thousand people?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfestivals = ['Diwali', 'Christmas', 'Eid al-Fitr', 'Holi', 'Hanukkah', 'Thanksgiving', 'Halloween', 'Easter', 'New Year', 'Baisakhi']\nattendance = [45, 70, 55, 60, 35, 65, 50, 40, 75, 30]\n\ncolors = ['#c0f025', '#c1e2d8', '#27149c', '#753f7a', '#c0f025', '#c1e2d8', '#27149c', '#753f7a', '#c0f025', '#c1e2d8']\n\nplt.figure(figsize=(15,8))   # defining figure size\n\nplt.bar(festivals, attendance, color=colors)\nplt.xlabel(\"Festivals\")   #x-axis label\nplt.ylabel(\"Attendance (in Thousands)\")   #y-axis label\nplt.title(\"Festival Attendance Chart\")  #chart title\nplt.grid(True)   #grid\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/877.png')\n\nplt.show()\n```\nChoices:['Diwali', 'Christmas', 'Eid al-Fitr', 'Baisakhi']\nStudent's Response:'Baisakhi'\n",
    "Question Text:\n: Is the investment in online advertising the highest among all advertising channels?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['TV', 'Radio', 'Newspaper', 'Magazine', 'Outdoor', 'Online', 'Social Media', 'Direct Mail', 'PR']\nvalues = [60, 40, 55, 30, 45, 85, 70, 50, 20]\nhatches = ['O', '|*', 'OO', '*-', '+o', '--', '*', '/']\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nbars = plt.bar(categories, values)\n\nfor bar, hatch in zip(bars, hatches):\n     bar.set_hatch(hatch)\n\nplt.xlabel('Advertising Channels')\nplt.ylabel('Investment in $ (x1000)')\nplt.title('Investment in Different Advertising Channels')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/878.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWas the total sale of the cars a round number?\n\nTo find this, we can calculate the total sales.\n\n```python\ntotal_sales = sum(sales)\n```\n\nIf the total sales is a multiple of 5, then it's a round number as our sales data are reported in thousands and are rounded to the nearest 5. \n\nSo, let's check if the total sales is divisible by 5.\n\n```python\nis_round_number = total_sales % 5 == 0\n```\n\nComparable to a step by step solution:\n\n- First we calculate the total sales. That gives us 40 + 75 + 95 + 85 + 50 + 35 = 380\n- Now we check if this number, 380, is divisible by 5\n- Since 380 % 5 == 0, it means it is divisible and hence a round number\n\nSo, for our question:\nAnswer: Yes\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for chart\nbrands = ['Audi', 'Mercedes', 'BMW', 'Volkswagen', 'Ferrari', 'Porsche']\nsales = [40, 75, 95, 85, 50, 35]\ncolors = ['#45f270', '#b67b9c', '#6c8114', '#548a5c', '#45f270', '#b67b9c']\n\n# Create a new figure with a custom size (width, height)\nfig = plt.figure(figsize=(10, 6))\n\nplt.barh(brands, sales, color=colors)\n\nplt.title('Car Sales')\nplt.xlabel('Sales (in thousands)')\nplt.ylabel('Brand')\n\n# Save plot as png image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/879.png')\n\nplt.show()\n\n\ntotal_sales = sum(sales)\n\n\nis_round_number = total_sales % 5 == 0\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes 'The Scream' have a popularity score of 50?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\npaintings = ['Mona Lisa', 'The Starry Night', 'The Scream', 'Guernica', 'The Persistence of Memory', 'American Gothic']\nvalues = [20, 35, 50, 45, 30, 40]\n\n# Plotting\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.bar(paintings, values, color='#76b142')\n\nax.set_xlabel('Paintings')\nax.set_ylabel('Popularity Score')\nax.set_title('Popularity of Various Paintings')\n\nplt.xticks(rotation=45)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/880.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid we sell more Model Cars than Rubber Ducks?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# We define the categories and their values\ntoys = [\"Rubber Duck\", \"Model Car\", \"Stuffed Bear\"]\nsales = [15, 20, 25]  \n\n# We set the figure size \nplt.figure(figsize=[10,8])\n\n# We give the bar chart a title\nplt.title(\"Sales of Different Toys\")  \n\n# We add the data\nbars = plt.bar(toys, sales, color=['#de016b', '#e1dbb3', '#8fafc0'], hatch = '/o')\n\n# We set hatches for each bar\nbars[0].set_hatch('/o')\nbars[1].set_hatch('x')\nbars[2].set_hatch('O')\n\n# We label the chart\nplt.xlabel('Types of Toys')\nplt.ylabel('Number of Toys Sold')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/881.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich species has got the highest wildlife conservation effort index according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data of 10 categories\ncategories = ['Tiger', 'Elephant', 'Rhino', 'Lion', 'Cheetah', 'Gorilla', 'Orangutan', 'Penguin', 'Polar Bear', 'Koala']\nvalues = [20, 40, 60, 35, 45, 25, 30, 70, 50, 40]\ncolors = ['#e64032', '#495e69', '#919cae', '#8caa6a', '#6b8136', '#ed54ed', '#6c1826', '#5e3f32', '#e64032', '#495e69']\n\n# Creating plot\nplt.figure(figsize=(10, 7))\nplt.barh(categories, values, color = colors)\n\n# Labeling the plot\nplt.xlabel('Wildlife Conservation Effort Index')\nplt.title('Index of Effort in Wildlife Conservation Per Species')\n\n# Saving the output\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/883.png')\n\nplt.close()\n```\nChoices:['Tiger', 'Elephant', 'Rhino', 'Lion', 'Cheetah', 'Gorilla', 'Orangutan', 'Penguin', 'Polar Bear', 'Koala']\nStudent's Response:'Penguin'\n",
    "Question Text:\nIs the 'Swimming' activity less popular amongst both 'Men' and 'Women' than 'Running' and 'Cycling'?\nFigure Code:\n```\n# required libraries\nimport matplotlib.pyplot as plt\n\ncategories = ['Running', 'Swimming', 'Cycling']\nmen_values = [20, 25, 30]\nwomen_values = [23, 28, 33]\n\n# figure size\nplt.figure(figsize=(10, 8))\n\n# plot bars in stack manner\nplt.bar(categories, men_values, color='r')\nplt.bar(categories, women_values, bottom=men_values, color='b')\n\nplt.xlabel('Fitness Activity')\nplt.ylabel('Number of Athletes')\nplt.title('Number of Athletes per Fitness Activity')\n\n# legend\nplt.legend(['Men', 'Women'], loc='upper right')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/886.png', dpi=300)\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the 'Fiction' genre have more books than the 'Non-Fiction' genre?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data of Books in Different Genres\ngenres = ['Fiction', 'Non-Fiction', 'Fantasy', 'Mystery', 'Romance', 'Sci-fi', 'Horror', 'Biographies', 'Autobiographies']\nbooks = [50, 40, 65, 35, 50, 45, 60, 30, 50]\n\n# Colors\ncolors = ['#4eed14', '#7e4340', '#ba13e7', '#a97fbd', '#917346', '#4eed14', '#ba13e7', '#7e4340', '#917346']\n\n# Hatches\nhatches = ['+o', 'x', '--', '*-', '', '+o', 'x', '--', '*-']\n\nplt.figure(figsize=(10,6))  # Set figure size if labels are long\n# Creating horizontal bar chart with hatches and colors\nfor i in range(len(genres)):\n    plt.barh(genres[i], books[i], color=colors[i % len(colors)], hatch=hatches[i % len(hatches)])\n\nplt.xlabel('Number of Books')  # x-axis label\nplt.ylabel('Genres')  # y-axis label\nplt.title('Number of Books in Different Genres')  # chart title\nplt.grid(True)  # Adding a grid\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/887.png')  # Save the plot\nplt.show()  # Show the plot\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich music genre has 40 albums according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories and values -- rounded to the nearest 5\ncategories = ['Rock', 'Pop', 'Jazz', 'Classical', 'Country', 'Hip-Hop']\nvalues = [45, 35, 50, 40, 30, 55]\n\n# hatches to be used\nhatches = ['oo', '-\\\\']\n\n# create bar chart\nfig, ax = plt.subplots(figsize=(10, 6))  # adjust size to prevent label overlap\nbars = ax.barh(categories, values, color='lightblue')\n\n# apply hatches\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i % len(hatches)])  # cycle through hatches\n\n# labels and title\nplt.xlabel('Number of Albums')\nplt.title('Number of Albums by Music Genre')\n\n# save figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/888.png')\n\n# display chart\nplt.show()\n```\nChoices:['Pop', 'Classical', 'Rock', 'Jazz']\nStudent's Response:Classical\n",
    "Question Text:\nIs the annual yield of Cereal Grains more than 60 million metric tons?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Cereal Grains', 'Vegetable Crops', 'Fruit Crops']\nvalues = [65, 55, 35]\ncolors = ['#f64e8e', '#0166fe', '#89d1df']\n\nplt.figure(figsize=(8, 6))\nplt.barh(categories, values, color=colors)\nplt.xlabel('Annual yield in millions (metric tons)')\nplt.ylabel('Type of Crop')\nplt.title('Annual yield of different agricultural crops')\nplt.xticks(range(0, 70, 5))  # to ensure axis marks every 5 numbers\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/889.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIn the category \"Pants\", which had a higher number of sales, men or women?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['T-Shirts', 'Jackets', 'Sweaters', 'Pants', 'Shorts', 'Underwear', 'Shoes', 'Socks', 'Accessories']\n\nmen_sales = [50, 60, 35, 70, 40, 55, 85, 30, 65]\nwomen_sales = [60, 45, 40, 55, 50, 65, 60, 75, 70]\n\nbarWidth = 0.35\nr1 = np.arange(len(men_sales))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10,7))\n\nplt.bar(r1, men_sales, color='#5d2d58', width=barWidth, edgecolor='grey', label='Men')\nplt.bar(r2, women_sales, color='#849158', width=barWidth, edgecolor='grey', label='Women')\n\nplt.xlabel('Categories', fontweight='bold', fontsize=15)\nplt.ylabel('Number of Sales', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth for r in range(len(men_sales))], categories)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/890.png')\nplt.show()\n```\nChoices:['Men', 'Women']\nStudent's Response:Men\n",
    "Question Text:\nWas the number of 'Motor Vehicle Theft' cases higher in 2020 as compared to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Murder', 'Robbery', 'Burglary', 'Assault', 'Drug Abuse', 'Motor Vehicle Theft', 'Arson', 'Fraud']\ncolors = ['#52929b', '#64e97a', '#926120', '#49a38c']\nhatches = ['*', 'O.']\nvalues1 = [20, 35, 30, 25, 60, 40, 10, 45]\nvalues2 = [15, 25, 40, 20, 50, 30, 15, 40]\n\nwidth = 0.8\nfig, ax = plt.subplots(figsize=(10,7))\n\nbar1 = ax.bar(categories, values1, width, color=colors[0], hatch=hatches[0])\nbar2 = ax.bar(categories, values2, width, bottom=values1, color=colors[1], hatch=hatches[1])\n\nax.set_ylabel('Number of Crimes (in thousands)')\nax.set_xlabel('Type of Crime')\nax.set_title('Crime Rates')\nax.legend((bar1[0], bar2[0]), ('2019', '2020'))\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/891.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the given grouped bar chart, what is the score given by women for Pizza?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Pizza']\nmen_means = [20]\nwomen_means = [25]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width/2, men_means, width, label='Men', hatch='x')\nrects2 = ax.bar(x + width/2, women_means, width, label='Women')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Food')\nax.set_ylabel('Scores')\nax.set_title('Food scores by group and gender')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/893.png')\n\nplt.show()\n```\nChoices:[15, 20, 25, 30]\nStudent's Response:25\n",
    "Question Text:\nWhich game has the highest sales represented in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ngames = ['Super Mario', 'Fortnite', 'Minecraft', 'COD Warzone', 'Valorant', 'FIFA 21', 'Zelda', 'Apex Legends', 'Among Us', 'PUBG']\nsales_in_millions = [50, 45, 160, 80, 25, 40, 30, 45, 50, 55]\ncolors = ['#f78dd7', '#d4e389', '#5a173d', '#6b791b', '#8871ad', '#baff2b', '#f78dd7', '#d4e389', '#5a173d', '#6b791b']\n\nplt.figure(figsize=(15,7))\nplt.barh(games, sales_in_millions, color=colors)\n\nplt.xlabel('Sales (in millions)')\nplt.ylabel('Games')\nplt.title('Bar Chart Showing Sales of Different Games')\nplt.grid(axis='x')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/894.png')\nplt.show()\n```\nChoices:['Super Mario', 'Fortnite', 'Minecraft', 'COD Warzone', 'Valorant']\nStudent's Response:Minecraft\n",
    "Question Text:\nDoes 'FarmLand' category have an area always lesser than 'WoodLand' category for the given data?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Stacked bar chart data\ncategories = ['WoodLand', 'WetLand', 'GrassLand', 'FarmLand']\nland_in_sq_km = {\n    'WoodLand': [150, 200, 175, 225],\n    'WetLand': [60, 75, 45, 50],\n    'GrassLand': [40, 55, 50, 35],\n    'FarmLand': [120, 135, 115, 160]\n}\n\nindices = range(len(categories))\n\nfig = plt.figure(figsize=(10, 7))\n\nplt.bar(indices, land_in_sq_km['WoodLand'], width=0.6, label='WoodLand', color='#78dfcd', bottom=[i+j for i,j in zip(land_in_sq_km['WetLand'], land_in_sq_km['GrassLand'])])\nplt.bar(indices, land_in_sq_km['WetLand'], width=0.6, label='WetLand', color='#14edc4', bottom=land_in_sq_km['GrassLand'])\nplt.bar(indices, land_in_sq_km['GrassLand'], width=0.6, label='GrassLand', color='#4e411d')\n\nplt.xticks(indices, categories)\n\nplt.ylabel('Area in Square km')\nplt.xlabel('Type of Land')\n\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/895.png')\n\n# Show the plot diagram\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the average score of Team_1 in Football?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sports data average rounded to nearest 5 for better visualization\nsports = ['Basketball', 'Baseball', 'Football', 'Swimming', 'Tennis', 'Cycling', 'Rugby', 'Hockey', 'Soccer', 'Golf']\nteam_scores = {'team_1': [85, 10, 25, 90, 60, 75, 50, 5, 35, 70],\n               'team_2': [75, 80, 35, 70, 90, 60, 55, 20, 30, 60],\n               'team_3': [80, 70, 40, 85, 85, 70, 45, 15, 40, 65],\n               'team_4': [90, 70, 30, 80, 70, 60, 50, 10, 30, 75]}\ncolors = ['#cdd004', '#1f41b6', '#d140ca', '#ffb785']\n\n# Create a grouped bar chart\nfig, ax = plt.subplots(figsize=(10, 8))\n\nwidth = 0.2  # Width of the bars\nidx = 0  # Index for colors\nfor team, scores in team_scores.items():\n    x = [i-0.3+0.2*idx for i in range(len(sports))]  # calculate x locations for current team's bars\n    ax.bar(x, scores, width, label=team, color=colors[idx])\n    idx += 1\n\n# Add labels, grid, etc.\nax.set_xticks(range(len(sports)))\nax.set_xticklabels(sports, rotation='vertical')\nax.set_xlabel('Sports')\nax.set_ylabel('Average Scores')\nax.legend()\nplt.grid(True, 'major', 'y', ls='--', lw=.5, c='k', alpha=.3)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/900.png')\nplt.show()\n```\nChoices:[10, 15, 25, 30, 35]\nStudent's Response:25\n",
    "Question Text:\nHas the \"Thriller\" category sold more books than the \"Romance\" category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data categorization\nCategories = [\"Romance\", \"Thriller\", \"Sci-Fi\", \"Fantasy\", \"History\"]\nColors = [\"#eb21d0\", \"#cabbd9\", \"#42f5e6\", \"#f54242\", \"#42f590\"]\nHatches = ['O', '-', '\\\\\\\\', '**', '|']\nBooks_Sold = [45, 50, 55, 70, 35]\nBooks_Borrowed = [65, 50, 35, 60, 40]\n\n# Bar chart\nplt.figure(figsize=[10, 8]) \n\nplt.bar(Categories, Books_Sold, color=Colors, hatch=Hatches[0], label=\"Sold\")\nplt.bar(Categories, Books_Borrowed, bottom=Books_Sold, color=Colors, hatch=Hatches[1], label=\"Borrowed\")\n\n# Adding attributes\nplt.xlabel(\"Book Category\")\nplt.ylabel(\"Number of Books\")\nplt.title(\"Literature Categories: Sold and Borrowed Books\")\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/901.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWas Biography the category with the highest number of books sold in BookStore1?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# categories for Books\ncategories = ['Biography', 'Fantasy', 'Sci-Fi', 'Mystery', 'Romance', 'Adventure']\n\n# group data (number of books sold in thousands)\ngroup1 = [55, 65, 45, 50, 60, 70]\ngroup2 = [60, 70, 80, 55, 65, 75]\n\n# bar width\nbar_width = 0.35\n\n# setting x axis for categories\nindex = np.arange(len(categories))\n\n# create bar chart\nplt.figure(figsize=(10, 6)) # to avoid word overlap\nbar1 = plt.bar(index, group1, bar_width, color='#20efdc', label='BookStore1')\nbar2 = plt.bar(index+bar_width, group2, bar_width, color='#123456', label='BookStore2')\n\nplt.xlabel('Book Categories')\nplt.ylabel('Books Sold (in thousands)')\nplt.title('Comparisons of Books Sold by Categories in Different Bookstores')\nplt.xticks(index + bar_width/2, categories)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/902.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich profession has the highest income?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories and values\ncategories = ['Engineer', 'Doctor', 'Farmer', 'Dancer', 'Musician', 'Artist', 'Athlete', 'Scientist', 'Teacher']\nvalues = [90, 85, 50, 55, 65, 60, 75, 80, 70]\n\n# Define the colors\ncolors = ['#f4fa55', '#666f4d', '#e24968', '#f4fa55', '#666f4d', '#e24968', '#f4fa55', '#666f4d', '#e24968']\n\n# Define the hatches\nhatches = ['x*', 'OO', 'x', 'o-', '\\\\|', '..', '++', '**', 'oo']\n\nfig, ax = plt.subplots(figsize=(12, 8))\nbars = plt.bar(categories, values, color=colors)\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel('Professions')\nplt.ylabel('Income (in K)')\nplt.title('Income by Profession')\nplt.legend(bars, categories, title=\"Professions\", title_fontsize='13', fontsize='10')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/903.png')\nplt.show()\n```\nChoices:['Engineer', 'Doctor', 'Farmer', 'Dancer', 'Musician', 'Artist', 'Athlete', 'Scientist', 'Teacher']\nStudent's Response:Engineer\n",
    "Question Text:\nWhat is the total number of plants in thousands for the 'Seedless vascular plants' category?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Ferns', 'Gymnosperms', 'Monocots', 'Dicots', 'Nonvascular', 'Seedless vascular plants']\nvalues = [20, 30, 25, 35, 10, 40]\nhatches = ['*', '**']\n\nplt.figure(figsize=(10, 6))\nbars = plt.bar(categories, values)\n\nfor i in range(0, len(bars), 2):\n    bars[i].set_hatch(hatches[0])\nfor i in range(1, len(bars), 2):\n    bars[i].set_hatch(hatches[1])\n\nplt.xlabel('Plant Type')\nplt.ylabel('Total number of plants in thousands')\nplt.title('Number of plants by type')\n\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/904.png')\nplt.show()\n```\nChoices:['10', '20', '30', '40', '50']\nStudent's Response:40\n",
    "Question Text:\nIs the number of Action Figures in stock higher than the number of Stuffed Animals and Board Games combined?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntoys = [\"Stuffed Animals\", \"Action Figures\", \"Board Games\"]\nnumbers = [45, 60, 30]\n\n# Establish the size of the figure.\nplt.figure(figsize=(10, 6))\n\n# Create bars\nbar_list = plt.bar(toys, numbers, color=['#2ed226', '#0f05b5', '#2ed226'])\n\n# Create names on the x-axis\nplt.xticks(toys)\n\n# Title and labels\nplt.title('Number of Toys in Stock')\nplt.xlabel('Toy Category')\nplt.ylabel('Number of Toys')\n\n# Show graphic\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/905.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the 'Violent Crime' category have the least crime rate?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create some data\ncrime_categories = ['Violent Crime', 'Property Crime', 'White-collar Crime']\ncrime_rates = [25, 45, 30]\n\n# Set the bar colors\ncolors = ['#a31d24', '#e8940c', '#febe76']\n\n# Increase the figure size for readability\nplt.figure(figsize=(10, 5))\n\n# Create the bar chart\nplt.bar(crime_categories, crime_rates, color=colors)\n\n# Add labels and title\nplt.xlabel('Type of Crime')\nplt.ylabel('Crime Rate (%)')\nplt.title('Crime Rates by Type')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/907.png')\n\n# Display the chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich type of housing has the highest rental prices in City B?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['1 BHK','2 BHK','3 BHK','4 BHK','5 BHK','6 BHK','Studio','Shared Room','Private Room','Entire House']\nvalues1 = [30, 50, 40, 65, 45, 50, 25, 35, 60, 70]\nvalues2 = [40, 60, 55, 70, 50, 60, 30, 40, 65, 75]\ncolors = ['#ef127d', '#f16be7', '#ee10fd', '#7c1c94']\nhatches = ['\\\\', '//', '/', '||', 'oo', '-\\\\', '*', '/o']\n\nbarWidth = 0.25\nbr1 = range(len(values1))\nbr2 = [_+barWidth for _ in br1]\n\nfig = plt.subplots(figsize =(14, 8))\n\nplt.bar(br1, values1, color =colors[0], width =barWidth, edgecolor ='grey', label ='City A', hatch=hatches[0])\nplt.bar(br2, values2, color =colors[3], width =barWidth, edgecolor ='grey', label ='City B', hatch=hatches[2])\n\nplt.xlabel('Type of Housing', fontweight ='bold')\nplt.ylabel('Rental Prices ($ per month)', fontweight ='bold')\nplt.xticks([r + barWidth for r in range(len(values1))], categories, rotation = 45)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/908.png')\nplt.show()\n```\nChoices:['1 BHK', '2 BHK', '3 BHK', '4 BHK', '5 BHK', '6 BHK', 'Studio', 'Shared Room', 'Private Room', 'Entire House']\nStudent's Response:'Entire House'\n",
    "Question Text:\nDoes 'Lakefront' have more reported incidents of 'Public Order Crimes' compared to 'Violent Crimes'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Northville', 'Eastside', 'Westend', 'Southtown', 'Central City', 'Lakefront', 'Sunnyside', 'Old Town', 'Downtown', 'New Town']\ncolors = ['#906c05', '#6a30d5', '#6463ab', '#088639', '#c69e45', '#a7f8b7', '#9aadf5', '#84982f']\nhatches = ['--', 'o-', '||', 'OO', '\\\\|', '\\\\', 'x']\n\nviolent = [35, 30, 40, 45, 50, 20, 25, 15, 35, 40]\nproperty = [50, 60, 55, 40, 45, 55, 40, 35, 60, 65]\npublic_order = [30, 35, 25, 35, 30, 40, 20, 40, 25, 30]\n\nbarWidth = 0.85\nplt.figure(figsize=(12, 7))\n\nbar1 = plt.bar(categories, violent, color=colors[0],\n               edgecolor='grey', hatch=hatches[0],\n\t\t\t   width=barWidth, label=\"Violent Crimes\")\nbar2 = plt.bar(categories, property, bottom=violent, color=colors[1],\n               edgecolor='grey', hatch=hatches[1],\n\t\t\t   width=barWidth, label=\"Property Crimes\")\nbar3 = plt.bar(categories, public_order, bottom=[i+j for i,j in zip(violent, property)],\n               color=colors[2], edgecolor='grey', hatch=hatches[2],\n\t\t\t   width=barWidth, label=\"Public Order Crimes\")\n\nplt.legend()\nplt.title('Crime Rates')\nplt.ylabel('Number of Incidents')\nplt.xticks(rotation='vertical')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/909.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDo men have higher overall scores than women across all education categories?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Public School', 'Private School', 'Home School']\n\nmen_means = [65, 70, 55]\nwomen_means = [60, 75, 60]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width/2, men_means, width, color='#77138f', label='Men')\nrects2 = ax.bar(x + width/2, women_means, width, label='Women')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Education Categories')\nax.set_ylabel('Scores')\nax.set_title('Scores by Education Category and Gender')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/910.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich grade has been awarded to the maximum number of students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The categories and their values\ngrades = ['A', 'B', 'C', 'D', 'F', 'Pass', 'Fail']\nvalues = [25, 40, 35, 25, 20, 60, 40]\n\nfig, ax = plt.subplots(figsize=(10,7)) \n\nax.barh(grades, values, color='green')\n\nax.set_xlabel('Number of Students')\nax.set_ylabel('Grades')\nax.set_title('Distribution of Grades')\n\nplt.grid(True)\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/911.png')\n\nplt.show()\n```\nChoices:['A', 'B', 'C', 'D', 'F', 'Pass', 'Fail']\nStudent's Response:'Pass'\n",
    "Question Text:\nDid the 'Trains' category have the second highest number of people?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n \n# Data Preparation\ncategories = ['Cars', 'Trains', 'Airplanes']\nvalues = np.array([[20, 30, 40], [10, 20, 70], [35, 35, 50]])\n\nind = [x for x, _ in enumerate(categories)]\n\nbar_width = 0.35\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Stacked bar chart\ncolors = ['#f77db9', '#aeb947', '#ffd270']\nfor i in range(values.shape[0]):\n    ax.bar(ind, values[i], bottom=np.sum(values[:i], axis=0), color=colors[i])\n\nax.set_xticks(ind)\nax.set_xticklabels(categories)\nplt.legend(('Person 1', 'Person 2', 'Person 3'))\n\nplt.title('Modes of Transport')\nplt.xlabel('Transportation Categories')\nplt.ylabel('Number of People')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/912.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the lowest amount of water collected from the Ocean source?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating a Grouped Bar Chart\ncategories = ['Rainfall', 'Tap', 'River', 'Lake', 'Ocean', 'Well', 'Bottled']\nvalues1 = [25, 5, 10, 20, 0, 15, 30]\nvalues2 = [30, 10, 15, 25, 5, 20, 35]\ncolors = ['#de413b', '#2ea9df', '#3cde41', '#a92e8e', '#2ea9df', '#7ca92e', '#c02b00']\nhatches = ['//', '--', '.', '/', '|', '*', '\\\\']\n\nbarWidth = 0.35  # Set width of bar\nfig = plt.subplots(figsize =(20, 15)) \n\n# Set position of bar on X axis\nbar1 = [i for i in range(len(values1))]\nbar2 = [i + barWidth for i in range(len(values2))]\n\n# First Bar Plot\nplt.bar(bar1, values1, color =colors, width = barWidth, \n        edgecolor ='grey', hatch=hatches[0])\n \n# Second Bar Plot\nplt.bar(bar2, values2, color =colors, width = barWidth, \n        edgecolor ='grey', hatch=hatches[1])\n\nplt.xlabel('Sources of Water', fontweight ='bold') \nplt.ylabel('Water Quantity in Litres', fontweight ='bold') \nplt.xticks([i + barWidth for i in range(len(values1))], categories)\n\nplt.title(\"Comparison of Water Quantity from Different Sources\")\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/914.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich category received the highest total donations (Food + Clothing + Education) given in thousands?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The amounts donated to different charities\nfood_donation = [20, 35, 30, 35, 45, 50]\nclothing_donation = [15, 25, 20, 35, 25, 35]\neducation_donation = [10, 30, 15, 40, 20, 45]\n\n# The categories of charities\ncharities = [\"Children\", \"Seniors\", \"Animals\", \"Education\", \"Health\", \"Others\"]\n\n# Set the bar width\nbar_width = 0.35\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(12,6))\n\n# Add bars for the food, clothing and education donations\np1 = plt.bar(charities, food_donation, bar_width, label='Food Donations', hatch='**')\np2 = plt.bar(charities, clothing_donation, bar_width, bottom=food_donation, label='Clothing Donations', hatch='O|')\np3 = plt.bar(charities, education_donation, bar_width, bottom=[i+j for i,j in zip(food_donation, clothing_donation)], label='Education Donations', hatch='x*')\n\n# Add some text for labels, title and axes ticks\nplt.ylabel('Donations in thousands')\nplt.title('Donations made to different charities')\nplt.legend()\n\n# Save the figure to the specified path\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/915.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Children', 'Seniors', 'Animals', 'Education', 'Health', 'Others']\nStudent's Response:'Others'\n",
    "Question Text:\nBy how many million did Samsung's sales increase from 2018 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# create sample categories and data\ncategories = ['Samsung', 'Apple', 'Huawei', 'Xiaomi', 'OPPO', 'Vivo']\nyears = ['2018', '2019', '2020']\n\n# round sales number data\nsales_2018 = [305, 210, 205, 125, 115, 105]\nsales_2019 = [315, 240, 220, 135, 125, 110]\nsales_2020 = [320, 270, 230, 145, 130, 120]\n\n# set figure size for labels\nfig, ax = plt.subplots(figsize=(12,7))\n\n# positioning bars\nbarWidth = 0.25\nr1 = [i - barWidth for i in range(len(sales_2018))]\nr2 = [i for i in range(len(sales_2018))]\nr3 = [i + barWidth for i in range(len(sales_2018))]\n\n# make the plot\nbar1 = ax.bar(r1, sales_2018, color='#34e615', width=barWidth, edgecolor='grey', label=years[0])\nbar2 = ax.bar(r2, sales_2019, color='#41fce5', width=barWidth, edgecolor='grey', label=years[1])\nbar3 = ax.bar(r3, sales_2020, color='#34e615', width=barWidth, edgecolor='grey', label=years[2])\n\n# add labels and title\nplt.ylabel('Sales (in millions)')\nplt.title('Phone sales by category from 2018 to 2020')\nplt.xticks(r2, categories, rotation=45)\n\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/916.png')\n```\nChoices:[10, 15, 20, 25]\nStudent's Response:15\n",
    "Question Text:\nDo Action Figures have the highest number of toys based on the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ntoys = ['Rubix Cube', 'Teddy Bear', 'Hot Wheels', 'Lego Blocks', 'Puzzle', 'Barbie', 'Action Figure', 'Board Games', 'Musical Toys', 'Educational Toys']\nvalues = [20, 45, 30, 35, 40, 50, 55, 25, 35, 50]\ncolors = ['#2cb798', '#9eb63b', '#ec91cd', '#d6813f', '#491d06']\n\nplt.figure(figsize=(12,8))\nplt.barh(toys,values,color=colors)\nplt.xlabel('Number of Toys')\nplt.ylabel('Types of Toys')\nplt.title('Different Categories of Toys and Their Numbers')\nplt.grid(axis='x')\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/917.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAccording to the bar chart, do Democrats have more support for Education than Republicans?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Data for the chart\nCategories = ['Tax', 'Education', 'Defence', 'Healthcare', 'Infrastructure', 'Immigration', 'Energy', 'Environment', 'Economy', 'Social Programs']\n\n# Values for each category\nDemocrats = [50, 70, 40, 75, 60, 65, 55, 70, 45, 75]\nRepublicans = [55, 65, 70, 55, 65, 70, 60, 50, 70, 55]\n\n# Colors and patterns\ncolors = ['#032ed2', '#5f96a6', '#3074f9', '#b6b81b']\nhatches = ['--', 'OO', '\\\\\\\\', '++', 'x*', '/o', '|*', '//', 'O|', 'oo']\n\nbarWidth = 0.3\nfig = plt.subplots(figsize =(14, 8))\n\n# Create bars for Democrats \nbar1 = plt.bar(Categories, Democrats, color =colors[0], width = barWidth, \nedgecolor ='grey', label ='Democrats', hatch =hatches[0], linewidth =2)\n\n# Create bars for Republicans\nbar2 = plt.bar(Categories, Republicans, color =colors[1], width = barWidth,\nedgecolor ='grey', label ='Republicans', hatch =hatches[1], linewidth =2)\n\n# Adding xticks \nplt.xlabel('Policy Areas', fontweight ='bold') \nplt.ylabel('Support (%)', fontweight ='bold') \nplt.xticks(rotation=45)\nplt.legend(['Democrats', 'Republicans'],loc=2)\nplt.title('Political Support For Various Policy Areas')\nplt.show()\n\n# Save the plot as a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/918.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the grade in English higher than the grade in Geography?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['English', 'Mathematics', 'Physics', 'Chemistry', 'Biology', 'Geography', 'History', 'Art', 'Music', 'Sports']\ngrades = [90, 85, 70, 75, 80, 60, 70, 85, 80, 90]\ncolors = ['#aa3b8b', '#95e316', '#7378a1', '#fa2cbd', '#aa3b8b', '#95e316', '#7378a1', '#fa2cbd', '#aa3b8b', '#95e316']\n\nplt.figure(figsize=(10,5))\nplt.bar(categories, grades, color=colors)\nplt.xlabel('Subjects')\nplt.ylabel('Grades')\nplt.title('Grades in different subjects')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/920.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nAccording to the bar chart, which energy source has the second highest quantity produced?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# energy sources and their respective amounts\nenergy_sources = ['Solar', 'Wind', 'Hydro', 'Nuclear', 'Coal']\nquantities = [25, 45, 40, 50, 30]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# defined colors and hatches\ncolors = ['#ef0964', '#ef0964', '#0B610B', '#0B233F', '#B43104']\nhatches = ['++', '\\\\\\\\', '\\\\\\\\', '++', '']\n\n# creating the bar chart\nfor i in range(len(energy_sources)):\n    ax.bar(energy_sources[i], quantities[i], color=colors[i], hatch=hatches[i])\n\n# setting the title and labels\nax.set_title('Energy Sources')\nax.set_xlabel('Type of Energy')\nax.set_ylabel('Quantity (in Gigawatts)')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/921.png')\nplt.show()\n```\nChoices:['Solar', 'Wind', 'Hydro', 'Nuclear', 'Coal']\nStudent's Response:Wind\n",
    "Question Text:\nBased on the bar chart, what is the projected global population growth from 2005 to 2040?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['2005', '2010', '2015', '2020', '2025', '2030', '2035', '2040']\nvalues = [700, 750, 800, 850, 900, 950, 1000, 1050]\ncolors = ['#aff8df']\nhatches = ['xx', 'x', 'x*', 'oo', 'OO']\n\n# Creating chart\nplt.figure(figsize=[10,5])\nbars = plt.bar(categories, values, color = colors * len(categories))\n\n# Applying hatches\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i%len(hatches)])\n\nplt.xlabel('Year')\nplt.ylabel('Population (in millions)')\nplt.title('Projected Global Population Growth')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/922.png')\nplt.show()\n```\nChoices:['Increase by 350 million', 'Increase by 250 million', 'Increase by 300 million', 'Increase by 400 million']\nStudent's Response:350\n",
    "Question Text:\nWhich language has the maximum number of users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create a data\nlanguages = [\"English\", \"French\", \"German\", \"Spanish\"]\nusers = [50, 45, 55, 60]\ndevelopers = [70, 50, 60, 55]\n\n# Bar width\nbarWidth = 0.25\n\n# Position of bars\nr1 = list(range(0,len(languages)))\nr2 = [x + barWidth for x in r1]\n\n# Use custom color scheme\ncolors = ['#9e182f', '#bea606']\n\n# Create bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(r1, users, color=colors[0], width=barWidth, edgecolor='grey', label='Users')\nplt.bar(r2, developers, color=colors[1], width=barWidth, edgecolor='grey', label='Developers')\n\n# Adding labels\nplt.xlabel('Languages', fontweight='bold')\nplt.ylabel('People (%)', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(languages))], languages)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/923.png')\nplt.show()\n```\nChoices:['English', 'French', 'German', 'Spanish']\nStudent's Response:English\n",
    "Question Text:\nWhat city has population closest to 2300 thousand?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# City and populations data\ncities = [\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\", \"Philadelphia\", \"San Antonio\"]\npopulations = [8500, 4000, 2700, 2300, 1700, 1600, 1500]\ncolor_map = ['#591e07', '#2978df', '#e438d6', '#f5ff97', '#3a9577', '#4e19a5', '#0a043c']\n\n# Creating the horizontal bar chart\nplt.figure(figsize=(10,8)) \nplt.barh(cities, populations, color = color_map)\n\n# Setting labels\nplt.xlabel(\"Population (in thousands)\")\nplt.ylabel(\"City\")\nplt.title(\"Population of Cities\")\n\n# Save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/924.png')\n\nplt.show()\n```\nChoices:['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio']\nStudent's Response:Houston\n",
    "Question Text:\nWhat was the sales difference between Game B in 2018 and 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set up the data\ngames = ['Game A', 'Game B', 'Game C', 'Game D', 'Game E', 'Game F', 'Game G', 'Game H', 'Game I', 'Game J']\nsales_2018 = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\nsales_2019 = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n\n# Set up the figure and axes\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Make the bars\nax.bar([i-0.2 for i in range(10)], sales_2018, 0.4, color='#d1c993', label='Sales 2018')\nax.bar([i+0.2 for i in range(10)], sales_2019, 0.4, color='#5fb6cb', label='Sales 2019')\n\n# Customize the chart\nax.set_xticks(range(10))\nax.set_xticklabels(games, rotation=45)\nax.set_ylabel('Sales (in thousands)')\nax.set_xlabel('Game Category')\nax.set_title('Comparison of Game Sales in 2018 and 2019')\nax.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/925.png')\n\nplt.show()\n```\nChoices:['5 thousand', '10 thousand', '15 thousand', '20 thousand']\nStudent's Response:10\n",
    "Question Text:\nDoes the production of Rice exceed the production of Corn?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# No random values, so providing our own\ncategories = ['Wheat', 'Rice', 'Corn', 'Barley', 'Soybeans', 'Sorghum', 'Oats', 'Cotton']\nvalues = [40, 60, 50, 35, 55, 50, 45, 50]\n\n# Creating the chart\nfig, ax = plt.subplots(figsize=(10, 8)) # size to avoid word overlap\nax.barh(categories, values, color='green')\n\n# Setting the labels and title\nax.set_xlabel('Production (in millions of tons)')\nax.set_title('Agricultural Production by Crop')\n\n# Saving the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/926.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nBy looking at the bar chart, which factor contributes most to Global Warming according to the data?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Solar Radiation', 'Ozone Depletion', 'Deforestation', 'Industrialization', \n              'Population Growth', 'Urbanization', 'Burning of Fossil Fuels', 'Farm Animals',\n              'Agricultural Practices', 'Waste Management']\nvalues = [55, 40, 75, 90, 85, 70, 95, 60, 80, 65] # hypothetical round values\n\n# Create figure and size it appropriately\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Create the bar chart\nbar_chart = ax.barh(categories, values, color='#a2e89e')\n\nax.set_xlabel('Contribution to Global Warming (%)')\nax.set_ylabel('Categories')\n\n# Set the title\nax.set_title('Contributions to Global Warming by Different Factors')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/927.png')\n\nplt.show()\n```\nChoices:['Solar Radiation', 'Ozone Depletion', 'Deforestation', 'Industrialization', 'Population Growth', 'Urbanization', 'Burning of Fossil Fuels', 'Farm Animals', 'Agricultural Practices', 'Waste Management']\nStudent's Response:Burning of Fossil Fuels\n",
    "Question Text:\nIn the stacked bar chart, which category of Space Exploration has entity 'Y' launched the least number of successful expeditions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# For each of the four categories (Rovers (5), Satellites (15), Human Missions (20), Telescopes (25))\n# This represent the number of successful space explorations for each category by two unknown entities 'X' and 'Y'\n\nx_values = ['Rovers', 'Satellites', 'Human Missions', 'Telescopes']\ny_values_x = [5,15,20,25]\ny_values_y = [10,5,15,20]\n\n# The figure size is set to sufficiently large to avoid word overlap.\n\nbarWidth = 0.35\nfig = plt.subplots(figsize =(12, 8))\n\nbr1 = range(len(y_values_x))\nbr2 = [x + barWidth for x in br1]\n\nplt.bar(br1, y_values_x, color ='#cb7f80', width = barWidth,\nedgecolor ='grey', label ='X')\nplt.bar(br2, y_values_y, color ='#f5079f', width = barWidth,\nedgecolor ='grey', label ='Y')\n\nplt.xlabel('Categories of Space Exploration', fontweight ='bold')\nplt.ylabel('Number of Successful Explorations', fontweight ='bold')\n\nplt.legend(['X', 'Y'])\n\nplt.xticks([r + barWidth for r in range(len(y_values_x))],\nx_values)\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/928.png')\nplt.show()\n```\nChoices:['Rovers', 'Satellites', 'Human Missions', 'Telescopes']\nStudent's Response:Satellites\n",
    "Question Text:\nWhat is the total number of paintings for the 'Realism' category shown in the chart, considering Sales, Auctions, and Exhibitions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Abstract', 'Realism', 'Cubism']\nsales = [35, 50, 45]\nauctions = [40, 45, 25]\nexhibitions = [30, 20, 15]\n\nbarWidth = 0.25\n\nr1 = np.arange(len(categories))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\nplt.figure(figsize = (12, 8))\n\nbars = plt.bar(r1, sales, color='#5b37d0', width=barWidth, edgecolor='grey', label='Sales', hatch='--')\nbars2 = plt.bar(r2, auctions, color='#23a4b3', width=barWidth, edgecolor='grey', label='Auctions', hatch='||')\nbars3 = plt.bar(r3, exhibitions, color='#a82cd2', width=barWidth, edgecolor='grey', label='Exhibitions', hatch='\\\\\\\\')\n\nplt.xlabel('Painting Style', fontsize = 15)\nplt.xticks([r + barWidth for r in range(len(categories))], categories)\nplt.ylabel('Number of Paintings', fontsize = 15)\nplt.title('Number of Paintings by Style and Type', fontsize = 18)\nplt.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/930.png')\nplt.show()\n```\nChoices:[55, 73, 88, 115]\nStudent's Response:115.\n",
    "Question Text:\nBy observing the bar chart, which country has higher GDP than Export?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Following the assumptions, below are the round numbers values for Economy values\nGDP_values = [50, 55, 60]\nExport_values = [45, 60, 55]\n\nbarWidth = 0.25\nr1 = range(len(GDP_values))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10, 5))\n\nplt.bar(r1, GDP_values, color='b', width=barWidth, edgecolor='grey', label='GDP')\nplt.bar(r2, Export_values, color='c', width=barWidth, edgecolor='grey', hatch=\"+o\", label='Export')\n\nplt.xlabel('Categories')\nplt.ylabel('Values in Billions')\nplt.title('Comparison of GDP and Export values in Economy')\nplt.xticks([r + barWidth for r in range(len(GDP_values))], ['Country A', 'Country B', 'Country C'])\n\nplt.legend(['GDP', 'Export'])\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/931.png')\nplt.show()\n```\nChoices:['Country B', 'Country C', 'Country A']\nStudent's Response:Country A, Country C\n",
    "Question Text:\nIs the number of Art Nouveau buildings more than the number of Greek Revival buildings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\ncategories = ['Renaissance', 'Gothic', 'Baroque', 'Romanesque', 'Neoclassical', 'Byzantine', 'Art Deco', 'Greek Revival', 'Palladian', 'Art Nouveau']\nvalues = [75, 80, 45, 60, 85, 50, 70, 65, 55, 90]\ncolors = ['#3483ad', '#a7ded4', '#397291'] * 4\nhatches = ['//', 'OO', ''] * 4\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Create horizontal bar chart\nbars = ax.barh(categories, values, color=colors, edgecolor='black')\n\n# Add hatches to bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Set labels\nax.set_xlabel('Average number of buildings')\nax.set_title('Number of buildings in different Architecture styles')\n\n# Remove top and right border\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/932.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the bar chart, did Motorola sell more units in 2019 compared to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\n# The data\ncategories = ['Samsung', 'Apple', 'Huawei', 'Xiaomi', 'Oppo', 'Vivo', 'Motorola', 'Google', 'Nokia']\nvalues_2019 = [300, 270, 240, 230, 200, 180, 170, 150, 100]\nvalues_2020 = [280, 260, 210, 220, 195, 160, 165, 140, 120]\n\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10,6))  # a new figure window\nax.bar(x, values_2019, width=0.4, color='#c8a872', align='center', hatch='O')\nax.bar(x, values_2020, width=0.4, color='#534741', align='edge', hatch='.')\n\nax.xaxis.set_major_locator(ticker.FixedLocator(x))\nax.xaxis.set_major_formatter(ticker.FixedFormatter(categories))\n\nplt.xlabel(\"Phone Brands\")\nplt.ylabel(\"Units Sold (in millions)\")\nplt.title(\"Comparison of Phone Brands sold in 2019 and 2020\")\nplt.legend([\"2019\", \"2020\"])\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/933.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat's the total number of Eagles spotted both in the City and the Country?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncategories = ['Parrot', 'Sparrow', 'Crow', 'Seagull', 'Pigeon', 'Dove', 'Eagle', 'Hawk']\ncolors = ['#843cba', '#88553a', '#4d7a4d', '#90e4c1', '#94d1bb', '#c3acca']\nvalues_a = [10, 20, 15, 25, 20, 30, 35, 40]\nvalues_b = [30, 20, 25, 20, 30, 15, 10, 20]\n\n# Create bar plots\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.bar(categories, values_a, color=colors[0], label='Birds Spotted in City')\nax.bar(categories, values_b, bottom=values_a, color=colors[2], label='Birds Spotted in Country')\n\n# Labeling\nax.set_title('Bird Categories and Spots')\nax.set_xlabel('Bird Type')\nax.set_ylabel('Number of Birds Spotted')\nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/935.png')\n\n# Show the figure\nplt.show()\n```\nChoices:[30, 45, 55, 75]\nStudent's Response:45\n",
    "Question Text:\nDid the sales of \"Antibiotics\" decrease from 2019 to 2020 according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data \ncategories = ['Antibiotics', 'Analgesics', 'Antimalarials', 'Antipsychotics']\nbar1_values = [30, 15, 20, 25]\nbar2_values = [25, 10, 15, 20]\n\n# Figure initialization\nfig, ax = plt.subplots(figsize=(10,7))\n\n# Stacked Bar Chart\nbar1 = ax.bar(categories, bar1_values, color='#b320c8', hatch='o', label='2019')\nbar2 = ax.bar(categories, bar2_values, color='#7de8f2', hatch='o', bottom=bar1_values, label='2020')\n\n# Labels\nax.set_xlabel('Medicine Categories')\nax.set_ylabel('Number of Sales(in thousands)')\nax.set_title('Medicine Category Sales 2019 V/S 2020')\nax.legend()\n\n# save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/936.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the chart, how many more people in City 1 use Cars as a mode of transportation compared to the people in City 2 using the same mode?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and their values\ntransportation_modes = [\"Bicycles\", \"Cars\", \"Motorbikes\", \"Buses\"]\ncity1_counts = [20, 65, 45, 30]\ncity2_counts = [15, 75, 40, 25]\n\nfig, ax = plt.subplots(figsize=(10,8))\n\nax.bar(transportation_modes, city1_counts, label=\"City 1\", hatch=\"+\")\nax.bar(transportation_modes, city2_counts, bottom=city1_counts, label=\"City 2\")\n\nax.set_xlabel(\"Modes of Transportation\")\nax.set_ylabel(\"Count\")\nax.set_title(\"Comparison of Transportation Modes in Two Cities\")\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/937.png')\nplt.show()\n```\nChoices:['5', '10', '15', '20']\nStudent's Response:\"-10\"\n",
    "Question Text:\nWhat is the total bird population during spring?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Pigeons', 'Sparrows', 'Hawks', 'Parrots', 'Crows']\nvalues1 = [20, 15, 10, 5, 25]\nvalues2 = [15, 20, 25, 10, 30]\nvalues3 = [5, 35, 20, 15, 15]\nvalues4 = [10, 10, 5, 20, 0]\nwidth = 0.35\nfig, ax = plt.subplots(figsize=(10,7))\n\nax.bar(categories, values1, width, label='Winter', color='#ba881e')\nax.bar(categories, values2, width, label='Spring', bottom=values1, color='#13e92b')\nax.bar(categories, values3, width, label='Summer', bottom=[i+j for i,j in zip(values1, values2)], color='#9452d3')\nax.bar(categories, values4, width, label='Autumn', bottom=[i+j+k for i,j,k in zip(values1, values2, values3)], color='#f891a8')\n\nax.set_ylabel('Population Count')\nax.set_title('Bird Population by Season')\nax.legend()\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/939.png')\nplt.show()\n```\nChoices:['80', '100', '105', '90']\nStudent's Response:100\n",
    "Question Text:\nWhich technology has the interest from companies of approximately 30%?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Set the values and categories\ntechnologies = ['Artificial Intelligence', 'Virtual Reality', 'Blockchain', '5G Technology']\nvalues = [20, 25, 30, 50]\nhatches = ['/', '..', '++', '*-']\n\n# Set the figure size to avoid label overlap\nplt.figure(figsize=(10, 6))\n\n# Create the bar chart\nbars = plt.bar(technologies, values, color='skyblue')\n\n# Apply the hatches to the bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\n# Add labels and title\nplt.xlabel('Technologies')\nplt.ylabel('Company Interest (%)')\nplt.title('Company Interest in Different Technologies')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/940.png')\n\nplt.show()\n```\nChoices:['Artificial Intelligence', 'Virtual Reality', 'Blockchain', '5G Technology']\nStudent's Response:'Blockchain'\n",
    "Question Text:\nWhich food category has the least quantity?\nFigure Code:\n```\n# required libraries\nimport matplotlib.pyplot as plt\n\n# categories\ncategories = ['Vegetables', 'Fruits', 'Bakery items', 'Meat products']\n\n# food quantities (rounded to the nearest 5)\nquantities = [20, 15, 25, 30]\n\n# colors for bars\ncolors = ['#faf102', '#0263f2', '#d3b26c', '#d15e06']\n\n# creating bar chart\nplt.figure(figsize=(12,6))\nplt.bar(categories, quantities, color=colors)\n\n# labeling the chart\nplt.xlabel('Food Categories')\nplt.ylabel('Quantity')\nplt.title('Different Food Categories and their Quantities')\n\n# saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/941.png')\n\n# displaying the chart\nplt.show()\n```\nChoices:['Vegetables', 'Fruits', 'Bakery items', 'Meat products']\nStudent's Response:'Fruits'\n",
    "Question Text:\nWhich style of painting had the higher total sales in both 2020 and 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Impressionist', 'Abstract']\n\ncolors = ['#490517', '#09a385']\n\nhatches = ['x', '']\n\nvalues1 = [50, 45]\nvalues2 = [60, 55]\n\nbar_width = 0.35\nopacity = 0.8\n\nfig, ax = plt.subplots()\n\nbar1 = plt.bar(categories, values1, bar_width, alpha=opacity, color=colors[0], hatch=hatches[0], label='Sale in 2020')\nbar2 = plt.bar(categories, values2, bar_width, alpha=opacity, color=colors[1], bottom=values1, hatch=hatches[1], label='Sale in 2021')\n\nplt.ylabel('Sales (in million USD)')\nplt.title('Painting Sales by Style and Year')\nplt.ylim(0, 120)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/942.png')\nplt.show()\n```\nChoices:['Impressionist', 'Abstract', 'Both had the same sales', 'Cannot determine']\nStudent's Response:From the chart, it can be observed that Abstract paintings had higher sales in both the years 2020 and 2021. \n",
    "Question Text:\nWhich of the following hobbies is the most popular?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nhobbies = ['Reading', 'Gardening', 'Cycling', 'Painting', 'Fishing', \n           'Cooking', 'Coding', 'Running', 'Photography']\nvalues = [45, 50, 55, 40, 35, 60, 50, 40, 45]\ncolors = ['#820857', '#9dfa29', '#f0e01f', '#a393df', '#58ec26', \n          '#784b5e', '#2b5eec', '#820857', '#9dfa29']\n\nplt.figure(figsize=(10,6))\nplt.bar(hobbies, values, color=colors)\nplt.xlabel('Hobbies')\nplt.ylabel('Number of People')\nplt.title('Popularity of Hobbies')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/943.png')\nplt.show()\n```\nChoices:['Reading', 'Gardening', 'Cycling', 'Painting', 'Fishing', 'Cooking', 'Coding', 'Running', 'Photography']\nStudent's Response:Cooking\n",
    "Question Text:\nWhich category has the least sales for men?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Shoes', 'Shirts', 'Pants', 'Accessories']\nmen = [20, 30, 15, 50]\nwomen = [25, 35, 20, 60]\n\n# Set the bar width\nbarWidth = 0.35\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=[10, 6])\n\n# Create men Bars\nax.bar(categories, men, color='#6e71f8', edgecolor='grey', width=barWidth)\n# Create women Bars\nax.bar(categories, women, bottom=men, color='#39f17c', edgecolor='grey', width=barWidth)\n\n# Adding labels\nplt.ylabel('Sales')\nplt.title('Sales categorised by Fashion items and Gender')\n\n# Show the graph\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/944.png')\nplt.show()\n```\nChoices:['Shoes', 'Shirts', 'Pants', 'Accessories']\nStudent's Response:Pants\n",
    "Question Text:\nBy how much more is the energy produced from Bio-energy sources than Solar energy sources?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nenergy_sources = ['Solar', 'Bio-energy']\nvalues = [20, 30]  # These are rounded values\n\nfig, ax = plt.subplots(figsize=(10, 6))  # Adjust figure size to avoid word overlap\n\n# Plotting\nbars = plt.barh(energy_sources, values, color=['#253be1', '#4fa37c'])\n\n# Adding value labels on bars\nfor bar in bars:\n    width = bar.get_width()\n    ax.text(width-1,\n            bar.get_y() + bar.get_height() / 2,\n            f'  {width} TW',\n            ha='center', va='bottom',\n            color='black')\n\nplt.title(\"Energy Sources\")\nplt.xlabel(\"Energy Production (TW)\")\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/946.png')  \nplt.show()\n```\nChoices:['5 TW', '10 TW', '15 TW', '20 TW']\nStudent's Response:10\n",
    "Question Text:\nIs 'Science Fiction' category has highest books sold?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = [\"Mystery\", \"Romance\", \"Science Fiction\", \"Fantasy\", \"Historical Fiction\"]\nvalues = [25, 35, 45, 40, 50]\ncolors = [\"#cc72ac\", \"#275358\", \"#cc72ac\", \"#275358\", \"#cc72ac\"]\nhatches = [\"o-\", \"\", \"o-\", \"\", \"o-\"]\n\nplt.figure(figsize=(10, 5))\n\nbars = plt.barh(categories, values, color=colors, edgecolor='black')\n\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.xlabel(\"Books Sold (in thousands)\")\nplt.title(\"Sales of Books in Different Categories\")\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/947.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n: \"Is the Laptop Computers category the most popular among the three?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Desktop Computers', 'Laptop Computers', 'Tablet Computers']\nvalues = [20, 25, 15]\ncolors = ['#16b710', '#d7adae', '#0567dd']\n\n# Plot\nplt.figure(figsize=(8, 4.5))\nplt.bar(categories, values, color=colors)\n\n# Labels and Titles \nplt.title('Types of Computers and Their Popularity')\nplt.xlabel('Types of Computers')\nplt.ylabel('Popularity (%)')\n\n# Save the chart as an image\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/949.png', dpi=300)\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich cat breed has a popularity score of 70 according to the bar graph?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the categories and their values\ncategories = ['Persian', 'Siamese', 'Maine Coon', 'Ragdoll', 'British Shorthair', 'Scottish Fold', 'Burmese', 'Bengal', 'Sphynx', 'Bengal']\nvalues = [15, 30, 45, 60, 25, 40, 55, 70, 25, 15]\n\n# Define the colors\ncolors = ['#53b0e4', '#c662ad', '#ed0319', '#81b2c2', '#1361e1', '#473359', '#45b514', '#8762da', '#75c460', '#8762da']\n\n# Create the figure and axis, setting the size to ensure no overlap\nfig, ax = plt.subplots(figsize=[10, 6])\n\n# Create a bar chart\nbars = ax.bar(categories, values, color=colors)\n\n# Add labels and title\nax.set_xlabel('Cat Breeds', fontsize=12)\nax.set_ylabel('Popularity Score', fontsize=12)\nax.set_title('Popularity of Different Cat Breeds', fontsize=15, fontweight='bold')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/950.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Persian', 'Siamese', 'Maine Coon', 'Ragdoll', 'British Shorthair', 'Scottish Fold', 'Burmese', 'Bengal', 'Sphynx']\nStudent's Response:Bengal\n",
    "Question Text:\nIs the Convertible category was the least sold car type?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Car categories\ncar_categories = ['Hatchback', 'Sedan', 'SUV', 'Convertible', 'Wagon', 'Coupe', 'Van', 'Pickup']\n# Sales figures rounded to the nearest 5\nsales_figures = [20, 35, 50, 25, 30, 45, 15, 40]\n# Colors\ncolors = ['#704be9', '#ff3596', '#919c76', '#27a7e0', '#00c3d8', '#518d68']\n\n# Apply colors to car categories\nfor i in range(len(car_categories)):\n    plt.bar(car_categories[i], sales_figures[i], color=colors[i%len(colors)])\n\nplt.title('Sales of Different Types of Cars')\nplt.xlabel('Car Type')\nplt.ylabel('Number of Cars Sold')\nplt.xticks(rotation=45)\n\n# save figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/952.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the bar chart, did Tsunamis occurrence increase from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Earthquakes', 'Volcanic Eruptions', 'Floods', 'Landslides', 'Tornadoes', \n              'Hurricanes', 'Droughts', 'Blizzards', 'Tsunamis', 'Wildfires']\ncolors = ['#630625', '#b8d946', '#87cc3c', '#a1986c', '#b8bc0d', '#94140f', '#0470ae']\nhatches = ['/', 'x', '*', '..', '+', 'o']\n\nnatural_disasters_2010 = [20, 5, 25, 30, 15, 10, 25, 20, 5, 30]\nnatural_disasters_2020 = [15, 10, 20, 35, 10, 15, 30, 25, 0, 35]\n\nx = np.arange(len(categories)) \nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(12,8))\nrects1 = ax.bar(x - width/2, natural_disasters_2010, width, label='2010', color=colors, hatch=hatches[0])\nrects2 = ax.bar(x + width/2, natural_disasters_2020, width, label='2020', color=colors, hatch=hatches[1])\n\nax.set_ylabel('Number of Incidents')\nax.set_title('Number of Natural Disasters in 2010 vs 2020')\nax.set_xticks(x)\nax.set_xticklabels(categories,rotation=45)\nax.legend()\n\nfig.tight_layout() \nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/954.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which category do Republicans have a higher percentage of public opinion than Democrats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npoll_categories = [\"Economic Affairs\", \"Social Policy\", \"Climate Change\", \"Foreign Policy\"]\npoll_results_democrat = [60, 45, 55, 50]\npoll_results_republican = [40, 50, 40, 45]\n\nbarWidth = 0.3\nr1 = range(len(poll_categories))\nr2 = [x + barWidth for x in r1]\n\nplt.figure(figsize=(10, 7))\nplt.bar(r1, poll_results_democrat, color='#f4876a', width=barWidth, edgecolor='grey', label='Democrats')\nplt.bar(r2, poll_results_republican, color='#703148', width=barWidth, edgecolor='grey', label='Republicans')\n\nplt.xlabel('Poll Categories', fontweight='bold', fontsize=15)\nplt.xticks([r + barWidth/2 for r in range(len(poll_categories))], poll_categories)\n\nplt.ylabel('Percentage of votes', fontweight='bold', fontsize=15)\nplt.title('Public Opinion Polls', fontweight='bold', fontsize=20)\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/955.png')\nplt.show()\n```\nChoices:['Economic Affairs', 'Social Policy', 'Climate Change', 'Foreign Policy']\nStudent's Response:\"Social Policy\"\n",
    "Question Text:\nDoes Farm B has more Pigs than Cows?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\nfarms = ['Farm A', 'Farm B', 'Farm C']\nchickens = [20, 25, 15]\ncows = [15, 20, 30]\npigs = [10, 15, 25]\n\nbarWidth = 0.35\n\n# Plotting data\nfig, ax = plt.subplots(figsize =(12, 8))\n\n# Create a bar with pre_score data,\n# in position pos,\nplt.bar(farms,\n        #using df['pre_score'] data,\n        chickens,\n        # of width\n        width = 0.4,\n        # with alpha 0.5\n        alpha = 0.5,\n        # with color\n        color ='b',\n        # with label the first value in first_name\n        label ='Chickens')\n\n# Create a bar with mid_score data,\n# in position pos + some width buffer,\nplt.bar(farms,\n        #using df['mid_score'] data,\n        cows,\n        # of width\n        width = 0.4,\n        # with alpha 0.5\n        alpha = 0.5,\n        # with color\n        color ='r',\n        # with label the second value in first_name\n        label ='Cows',\n        # with bottom the pre_score values\n        bottom = chickens)\n\n\n# Create a bar with post_score data,\n# in position pos + some width buffer,\nplt.bar(farms,\n        #using df['post_score'] data,\n        pigs,\n        # of width\n        width = 0.4,\n        # with alpha 0.5\n        alpha = 0.5,\n        # with color\n        color ='g',\n        # with label the third value in first_name\n        label ='Pigs',\n        # with bottom the mid_score values\n        bottom = [i+j for i,j in zip(chickens, cows)])\n\nplt.xlabel(\"Farms\")\nplt.ylabel(\"Number of Animals\")\nplt.title(\"Distribution of Animals on Different Farms\")\nplt.legend()\nplt.grid()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/957.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nAccording to the chart, which category has the highest number of purchases by men?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = [\"Shoes\", \"Bags\", \"Dresses\", \"Accessories\", \"Pants\"]\n\nmen = [15, 25, 10, 15, 30]\nwomen = [25, 15, 35, 20, 20]\nchildren = [25, 10, 5, 30, 20]\n\nbarWidth = 0.25\n\nr1 = np.arange(len(men))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\nplt.figure(figsize=(12,8))\n\nplt.bar(r1, men, color='#421839', width=barWidth, edgecolor='grey', label='Men')\nplt.bar(r2, women, color='#17bc16', width=barWidth, edgecolor='grey', label='Women')\nplt.bar(r3, children, color='#62f73f', width=barWidth, edgecolor='grey', label='Children')\n\nplt.xlabel('Categories',fontweight='bold', fontsize=12)\nplt.ylabel('Number of Purchases',fontweight='bold', fontsize=12)\nplt.xticks([r + barWidth for r in range(len(men))], categories)\nplt.title('Fashion Purchases by Category and Demographic')\n\nplt.legend()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/958.png')\nplt.show()\n```\nChoices:['Shoes', 'Bags', 'Dresses', 'Accessories', 'Pants']\nStudent's Response:Pants\n",
    "Question Text:\nWhat is the quantity of Dates listed in the Food bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define Foods and their quantity\nfoods = ['Apple', 'Banana', 'Cherry', 'Dates', 'Eggplant']\nquantity = [20, 25, 30, 35, 40]\n\n# Create a horizontal bar chart\nplt.figure(figsize=(10,6))\nplt.barh(foods, quantity, color='green', alpha=0.7)\nplt.xlabel('Quantity (Rounded to nearest 5)')\nplt.ylabel('Food')\nplt.title('Quantity of Different Types of Foods')\nplt.grid(True)\n\n# Save the chart\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/959.png')\nplt.show()\n```\nChoices:[20, 25, 30, 35, 40]\nStudent's Response:35\n",
    "Question Text:\nWhich animal group has the lowest population in Group 1?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Categories and values\ncategories = ['Dogs', 'Cats', 'Birds', 'Reptiles', 'Amphibians', 'Fish', 'Arachnids']\ngroup1_values = [25, 35, 20, 15, 10, 45, 5]\ngroup2_values = [50, 40, 30, 20, 10, 50, 10]\n\n# Range of x values\nx = range(len(categories))\n\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Bar charts\nrects1 = ax.bar(x, group1_values, width=0.35, align='center', color='#277160', label='Group 1')\nrects2 = ax.bar(x, group2_values, width=0.35, align='edge', color='#51612a', label='Group 2')\n\n# Labels, titles and custom x-axis tick labels\nax.set_ylabel('Population (thousand)')\nax.set_title('Population of different types of animals')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/961.png')\nplt.show()\n```\nChoices:['Arachnids', 'Amphibians', 'Fish', 'Dogs', 'Cats']\nStudent's Response:Arachnids\n",
    "Question Text:\nIs the population of USA larger than that of China?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting the figure size\nplt.figure(figsize=(10,7))\n\n# Data\ncountries = ['USA', 'China']\npopulation = [330, 1400]  # in millions, rounded to nearest 5\ngdp = [210, 160]  # in trillion dollars, rounded to nearest 5\n\nbarWidth = 0.2\n\n# Create population Bars\nplt.bar(countries, population, color='#86e175', edgecolor='grey', width=barWidth)\n# Create gdp Bars\nplt.bar(countries, gdp, bottom=population, color='#f9bc86', edgecolor='grey', width=barWidth)\n\nplt.ylabel(\"In Millions / Trillion Dollars\")\nplt.title(\"Comparison of Countries: Population and GDP\")\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/964.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs 'Drinking' the activity that uses the least amount of water?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nactivities = ['Drinking', 'Cooking', 'Bathing', 'Washing Dishes', 'Laundry', 'Gardening', 'Car Washing']\nwater_consumption = [1, 5, 25, 15, 40, 50, 35] # rounded to nearest 5 gallons\ncolors = ['#bbe05c', '#9d6bf7', '#32aaa0', '#dcbe31', '#59c4e6', '#cae00d', '#f97306']\n\nplt.figure(figsize=(10, 7))\n\nplt.barh(activities, water_consumption, color=colors)\n\nplt.xlabel('Water Consumption (in gallons)')\nplt.ylabel('Activities')\nplt.title('Water Consumption in Different Activities')\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/965.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas the number of Car Travel trips in 2020 greater than the number of Car Travel trips in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['Air Travel', 'Train Travel', 'Car Travel', 'Cruise Travel']\ngroup_A = [45, 30, 40, 35]\ngroup_B = [40, 35, 20, 25]\n\nx = np.arange(len(categories))\nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(10, 7))\nrects1 = ax.bar(x - width/2, group_A, width, label='2020', color='#ef3ee9')\nrects2 = ax.bar(x + width/2, group_B, width, label='2019', color='b')\n\nax.set_ylabel('Number of Trips')\nax.set_title('Number of Trips by Travel Category and Year')\nax.set_xticks(x)\nax.set_xticklabels(categories)\nax.legend()\n\nfig.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/967.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the 'Observed' value of impact due to 'Natural Disasters' greater than the 'Predicted' value?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\nn = 9\ncategories = ['Carbon Emissions', 'Ocean Warming', 'Glacial Melting', 'Natural Disasters', 'Marine Life Destruction', 'Rising Sea Levels', 'Air Pollution', 'Deforestation', 'Loss of Biodiversity']\nvalues1 = [45, 75, 85, 65, 55, 70, 75, 80, 65]\nvalues2 = [30, 25, 15, 35, 45, 30, 25, 20, 35]\n\n# Create bars\nplt.figure(figsize=(15,8))\nplt.bar(categories, values1, color='#0e4926', alpha=0.7, hatch = 'oo', label='Observed')\nplt.bar(categories, values2, bottom=values1, color='#1c4d58', alpha=0.7, hatch = '**', label='Predicted')\n\nplt.ylabel('Values (in Millions)')\nplt.xlabel('Categories of Global Warming')\nplt.xticks(rotation = 45)\nplt.title('Impact of Global Warming')\nplt.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/968.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs European travel the most popular according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntravels = ['Europe', 'Asia', 'Americas', 'Africa', 'Oceania']\nvalues = [80, 85, 70, 55, 20]\n\nplt.figure(figsize=(10,5))\n\n# Stack bar chart\nplt.bar(travels,values,color='lightblue')\n\nplt.xlabel('Continents')\nplt.ylabel('Number of Travels')\nplt.title('Travel by Continents')\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/969.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich store had the highest sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt \n  \n# Data to plot\nn_groups = 3\nstore_sales = (50, 40, 55)\n\n# Colors for bars\ncolors = ['#117742', '#4d00f0', '#4d00f0']\n\n# Create bars\nfig, ax = plt.subplots()\nindex = np.arange(n_groups)\nbar_width = 0.35\nopacity = 0.8\n \nbars = ax.barh(index, store_sales, bar_width, alpha=opacity, color=colors)\n\n# Add labels, title, and custom x-axis and y-axis\nax.set_xlabel('Sales in thousands')\nax.set_ylabel('Store')\nax.set_title('Sales by Retail Store')\nax.set_yticks(index)\nax.set_yticklabels(('Store A', 'Store B', 'Store C'))\n\n# Add text inside bars\nfor i in range(len(bars)):\n    plt.text(bars[i].get_x() + bars[i].get_width()/2., bars[i].get_y(),\n             '%d' % int(bars[i].get_width()), ha='center', va='bottom')\n\n# Make sure labels fit into the figure\nplt.tight_layout()\n\n# Save the figure to a file\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/971.png')\nplt.show()\n```\nChoices:['Store A', 'Store B', 'Store C']\nStudent's Response:'Store C'\n",
    "Question Text:\n: Is the population of China greater than 1400 million?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Countries and their respective populations (in millions) \n# We ensure we pick numbers rounded to nearest 5 to maintain simplicity\ncountries = ['USA', 'China', 'India']\npopulations = [325, 1395, 1390] # in millions\n\n# Creating bar graph\nplt.figure(figsize=(10, 7))\nplt.bar(countries, populations, color=['red', 'green', 'blue'])\n\n# Adding titles and labels\nplt.title('Population of Countries in 2021 (in Millions)', fontsize=14)\nplt.xlabel('Country', fontsize=12)\nplt.ylabel('Population (Millions)', fontsize=12)\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/972.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nAccording to the bar chart, which group produced the most number of Surrealism paintings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Date:\nlabels = ['Renaissance', 'Impressionism', 'Cubism', 'Surrealism']\n\n# Number of paintings\nmen_values = [45, 50, 55, 75]\nwomen_values = [60, 80, 55, 70]\nchildren_values = [40, 60, 30, 45]\n\nx = range(len(labels)) \n\nfig, ax = plt.subplots(figsize=(15, 8))\n\nrects1 = ax.bar(x, men_values, width=0.2, \n                color='#f3c077', hatch='|', label='Men')\nrects2 = ax.bar([p + 0.2 for p in x], women_values, width=0.2,\n                color='#48ac23', hatch='xx', label='Women')\nrects3 = ax.bar([p + 0.4 for p in x], children_values, width=0.2, \n                color='#83b313', hatch='+', label='Children')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Number of Paintings')\nax.set_title('Number of Paintings by Style and Group')\nax.set_xticks([p + 0.2 for p in x])\nax.set_xticklabels(labels)\nax.legend()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/973.png')\nplt.show()\n```\nChoices:['Men', 'Women', 'Children']\nStudent's Response:'Women'\n",
    "Question Text:\nWhat type of natural disaster resulted in a higher number of injury incidents compared to death incidents?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Earthquakes', 'Floods', 'Wildfires', 'Hurricanes', 'Volcanic Eruptions', 'Tornadoes', 'Landslides', 'Blizzards']\ncaused_deaths = [120, 150, 90, 100, 120, 105, 80, 70]\ncaused_injuries = [300, 400, 200, 180, 150, 90, 50, 60]\n\n# Create the figure and axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create the stacked bar chart\nax.bar(categories, caused_deaths, label='Caused Deaths', color='#d939a5')\nax.bar(categories, caused_injuries, bottom=caused_deaths, label='Caused Injuries', color='#4575b4')\n\n# Add labels and title\nax.set_ylabel('Number of Events')\nax.set_title('Natural Disasters')\nax.legend()\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/974.png')\nplt.show()\n```\nChoices:['Earthquakes', 'Floods', 'Wildfires', 'Hurricanes', 'Volcanic Eruptions', 'Tornadoes', 'Landslides', 'Blizzards']\nStudent's Response:'All of them'\n",
    "Question Text:\nAccording to the bar chart, which endangered wildlife species has the lowest population in the wild?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nspecies = [\"Elephants\", \"Tigers\", \"Pandas\", \"Sea turtles\", \"Polar bears\", \"Snow leopards\", \"Gorillas\", \"Orangutans\"]\npopulation_in_the_wild = [415, 360, 1800, 86000, 26000, 6000, 880, 104000]\n\n# Use hatches\nhatches = ['.', '+', '|', 'O|', '/o', '++', '-\\\\', 'o-']\n\n# Create figure and bar chart\nplt.figure(figsize=(10, 8))\nbars = plt.barh(species, population_in_the_wild, hatch=hatches[0])\n\n# Use different hatches for different bars\nfor i in range(len(bars)):\n    bars[i].set_hatch(hatches[i % len(hatches)])\n\n# Add labels and title\nplt.xlabel('Population in the wild')\nplt.title('Populations of Endangered Wildlife Species')\nplt.grid(True)\n\n# Save the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/975.png')\nplt.close()\n```\nChoices:['Elephants', 'Tigers', 'Pandas', 'Sea turtles', 'Polar bears', 'Snow leopards', 'Gorillas', 'Orangutans']\nStudent's Response:Gorillas\n",
    "Question Text:\nIn the bar chart 'Fishing Categories,' which fish species had the highest number of species caught?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nCategories = ['Salmon', 'Tuna', 'Trout', 'Catfish', 'Snapper']\nFishes = [10, 15, 25, 20, 30]\ncolors = ['#7f7019', '#24f2b7', '#0a7474', 'r', 'b']\nhatches = ['*-', '++', '..', 'o', 'O']\n\nplt.figure(figsize=(15, 10))\n\nbars = plt.barh(Categories, Fishes, color=colors)\n\nfor i, bar in enumerate(bars):\n    bar.set_hatch(hatches[i])\n\nplt.title('Fishing Categories')\nplt.xlabel('Number Of Species Caught')\nplt.ylabel('Species Of Fish')\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/977.png')\n\nplt.show()\n```\nChoices:['Salmon', 'Tuna', 'Trout', 'Catfish', 'Snapper']\nStudent's Response:Snapper\n",
    "Question Text:\nIs \"Bangkok\" the city with the highest number of visitors as per the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Variables\ncategories = ['Tokyo', 'Paris', 'London', 'Dubai', 'Singapore', 'New York', 'Kuala Lumpur', 'Istanbul', 'Delhi', 'Bangkok']\nvalues = [30, 45, 40, 35, 50, 25, 55, 50, 45, 60]\n\n# Creating Figure\nfig = plt.figure(figsize=(10, 5))\n\n# Creating Horizontal Bar Plot\nplt.barh(categories, values, color ='green')\n\nplt.xlabel('Number of Visitors (in million)')\nplt.title('Number of Visitors in Different Cities (Rounded to nearest 5 million)')\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/978.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the bar corresponding to 'Agriculture' the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncategories = ['Drinking', 'Agriculture', 'Industrial', 'Evaporation', 'Public Services']\nvalues = [30, 60, 50, 40, 15] \ncolors = ['#3823ed', '#2f7a61', '#3823ed', '#2f7a61', '#3823ed'] \nhatches = ['|*', '', '|*', '', '|*']\n\nplt.figure(figsize=(10,6))\n\nbars = plt.bar(categories, values, color=colors, hatch=hatches[0])\n\n# Setting hatches on bars\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Water Usage in Different Sectors')\nplt.xlabel('Sectors')\nplt.ylabel('Water Usage (in billion cubic meters)')\nplt.xticks(rotation=45)\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/979.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the 'Chicago' have the highest combined total of Violent and Property crime?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncities = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio']\nviolent_crime = [300, 350, 400, 375, 325, 425, 350]\nproperty_crime = [600, 585, 670, 550, 625, 650, 600]\n\nfig, axs = plt.subplots(figsize=(12, 6))\n\naxs.bar(cities, violent_crime, label='Violent Crime')\naxs.bar(cities, property_crime, bottom=violent_crime, label='Property Crime')\n\naxs.set_ylabel('Number of Crimes')\naxs.set_title('Crime Rates in Major U.S. Cities')\naxs.legend()\n\nplt.xticks(rotation=45)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/980.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich sport has the lowest number of participants?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Bar values\nsports = [ 'Basketball', 'Soccer', 'Baseball', 'Football', 'Tennis', 'Swimming' ]\nparticipants = [100, 150, 80, 200, 75, 130]\n\n# Bar colors and hatches\ncolors = ['#82516e', '#82516e', '#1d269b', '#1d269b', '#82516e', '#1d269b']\nhatches = ['\\\\\\\\', '.', '|*', '\\\\\\\\', '.', '|*']\n\n# Plot size\nplt.figure(figsize=[15,10])\n\nbars = plt.barh(sports, participants, color=colors, edgecolor='black')\n\n# Adding hatches\nfor bar, hatch in zip(bars, hatches):\n    bar.set_hatch(hatch)\n\nplt.title('Sports Participation')\nplt.xlabel('Number of Participants')\nplt.ylabel('Sports')\n\nplt.grid(visible=True, which='both', axis='x', color='w')\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/981.png')\nplt.show()\n```\nChoices:['Basketball', 'Soccer', 'Baseball', 'Football', 'Tennis', 'Swimming']\nStudent's Response:Tennis\n",
    "Question Text:\nWhat country had the highest number of tourists in 2022 according to this chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Bar values and labels\nvalues = [20, 55, 60, 45, 90, 75, 85, 70, 65]\nlabels = ['USA', 'China', 'France', 'Spain', 'Italy', 'Turkey', 'Germany', 'UK', 'Russia']\n\ncolors = ['#b6822e', '#51d17d', '#e17dbf', '#0f87f6', '#995df3', '#4f9783', '#1a62e7', '#88e01b', '#e3e817'] \n\n# Create figure\nplt.figure(figsize=[14,8])\n\n# Plotting\nplt.barh(labels, values, color = colors)\nplt.xlabel('Number of Tourists (in millions)')\nplt.title('Tourism by Country in 2022')\nplt.gca().invert_yaxis()  # reverse Y-axis\n\n# Saving the figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/984.png')\nplt.show()\n```\nChoices:['USA', 'China', 'France', 'Spain', 'Italy', 'Turkey', 'Germany', 'UK', 'Russia']\nStudent's Response:Italy\n",
    "Question Text:\nWhat is the population of Brazil (in millions, rounded to the nearest 5) according to the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\ncountries = ['China', 'India', 'United States', 'Indonesia', 'Pakistan', 'Brazil', 'Nigeria', 'Bangladesh']\npopulation_in_millions = [1405, 1366, 332, 273, 225, 213, 211, 166]\n\n# Round population to nearest 5\npopulation_in_millions_rounded = [round(num/5)*5 for num in population_in_millions]\n\n# Generate the plot\nplt.figure(figsize=(10, 6))\nplt.barh(countries, population_in_millions_rounded, color='purple')\nplt.xlabel('Population in Millions (rounded to nearest 5)')\nplt.ylabel('Countries')\nplt.title('Population of Countries in Millions (rounded to nearest 5)')\n\nplt.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/985.png')\n\nplt.show()\n```\nChoices:[200, 205, 215, 220]\nStudent's Response:215\n",
    "Question Text:\nIn the medicine category 'Dermatology', does the urban area have more patients than the rural area?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Medicine categories\ncategories = ['Allergy', 'Cardiology', 'Dermatology', 'Endocrinology', 'Gastroenterology', 'Neurology', 'Oncology', 'Urology']\n\n# Rounded values for each category\nvalues_urban = [20, 25, 15, 35, 30, 45, 50, 40]\nvalues_rural = [30, 40, 20, 25, 45, 30, 25, 35]\n\n# Designate hatches\nhatches = ['*', 'O', '*-', '++']\n\nN = len(categories)\n\nind = range(N)  # the x locations for the groups\nwidth = 0.5       # the width of the bars: can also be len(x) sequence\n\nf, ax = plt.subplots(figsize=(12,7))\n\n# Bar plots\np1 = ax.bar(ind, values_urban, width, color='lightblue', hatch=hatches[0])\np2 = ax.bar(ind, values_rural, width, bottom=values_urban, color='coral', hatch=hatches[2])\n\nax.set_ylabel('Number of Patients')\nax.set_title('Number of patients per medical category in urban and rural areas')\nax.set_xticks(ind, categories)\nax.set_xticklabels(categories)\n\nplt.xticks(rotation=30)\n\n#legend\nax.legend((p1[0], p2[0]), ('Urban', 'Rural'))\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/987.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich architectural style has approximately 75 buildings?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Art Deco', 'Modernism', 'Futurism', 'Constructivism', 'Deconstructivism', 'Postmodernism', 'Gothic Revival', 'Renaissance']\nvalues = [75, 40, 110, 65, 85, 100, 95, 70]\n\n# Colors\ncolors = ['#5ef38d', '#10ce88', '#f8f128', '#8ad4d0', '#bb1792', '#52109d', '#c741c4', '#bb1700']\n\nplt.figure(figsize=(10,8))\n\n#_create horizontal bars\nplt.barh(categories, values, color = colors)\n\nplt.xlabel('Number of Buildings (Est.)')\nplt.title('Number of Buildings by Architectural Style')\nplt.grid(True)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/988.png')\n\nplt.show()\n```\nChoices:['Art Deco', 'Modernism', 'Futurism', 'Constructivism']\nStudent's Response:Art Deco\n",
    "Question Text:\nIs the interest level in Cooking greater in Women than in Men?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nhobbies = ['Cycling', 'Reading', 'Cooking', 'Hiking', 'Photography', \n           'Gardening', 'Writing', 'Swimming']\nmen_interest = [20, 35, 30, 15, 25, 40, 35, 30]\nwomen_interest = [25, 45, 40, 30, 15, 40, 30, 25]\n\nx = range(len(hobbies))\n\nplt.figure(figsize = (10,6))\nbar_width = 0.30\n\nplt.bar(x, men_interest, bar_width, color = '#f28bbd', label = \"Men\")\nplt.bar(x, women_interest, bar_width, color = '#c87234', bottom = men_interest, label = \"Women\")\n\nplt.xlabel(\"Hobbies\")\nplt.ylabel(\"Interest Level\")\nplt.title(\"Interest Levels in Different Hobbies among Men and Women\")\nplt.xticks(x, hobbies, rotation = 45)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/989.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nIn which month were positive responses the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# bar chart data\ncategories = ['Feb 2021', 'Mar 2021', 'Apr 2021']\npositive_responses = [55, 65, 60]\nneutral_responses = [25, 20, 25]\nnegative_responses = [20, 15, 15]\n\n# figure size\nplt.figure(figsize=(10, 5))\n\n# stack bars\nplt.bar(categories, positive_responses, color='#a48516', edgecolor='grey')\nplt.bar(categories, neutral_responses, bottom=positive_responses, color='#82c91e', edgecolor='grey')\nplt.bar(categories, negative_responses, bottom=[i+j for i,j in zip(positive_responses,neutral_responses)], color='#e03131', edgecolor='grey')\n\n# title and labels\nplt.title('Public Opinion Polls')\nplt.ylabel('% of responses')\nplt.xlabel('Time')\n\n# save the plot\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/992.png')\n\nplt.show()\n```\nChoices:['February 2021', 'March 2021', 'April 2021']\nStudent's Response:'March 2021'\n",
    "Question Text:\n:\nIs Rocket the most popular mode of travel represented on the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define categories and their corresponding values\ncategories = ['Car', 'Bus', 'Train', 'Flight', 'By Foot', 'Bike', 'Boat', 'Rocket', 'Teleportation']\nvalues = [45, 20, 30, 50, 5, 15, 10, 100, 0]\n\n# Define colors and hatches\ncolors = ['#81f03f', '#f4b8a9', '#c1ce7c', '#37f624', '#72eecc', '#c8a73d', '#ff174d', '#af3cb6']\nhatches = ['o-', 'oo', '|', 'O', '/', 'xx']\n\nfig, ax = plt.subplots(figsize=[10,8])\n\n# Create horizontal bar chart\nfor i in range(len(categories)):\n    ax.barh(categories[i], values[i], color=colors[i%len(colors)], hatch=hatches[i%len(hatches)])\n\n# Title and labels\nplt.title('Travel Methods by Popularity')\nplt.xlabel('Popularity')\nplt.ylabel('Travel Methods')\n\n# Save the figure\nplt.tight_layout()\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/993.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the Libertarian Party win more seats in 2020 than in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['Liberal', 'Conservative', 'Green Party', 'Labour', 'Libertarian']\nvalues_party1 = [10, 15, 20, 25, 30]\nvalues_party2 = [30, 25, 20, 15, 10]\n\nx = np.arange(len(labels)) \nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(10,6))\nrects1 = ax.bar(x - width/2, values_party1, width, color='#c09857', label='2019')\nrects2 = ax.bar(x + width/2, values_party2, width, color='#8f71d5', label='2020')\n\nax.set_xlabel('Political Parties')\nax.set_ylabel('Seats Won')\nax.set_title('Seats Won by Different Political Parties in 2019 and 2020')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nax.bar_label(rects1, padding=3)\nax.bar_label(rects2, padding=3)\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/994.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes. In the provided plot, the purple color from the color legend represents the year 2020, and we can see the Libertarian bar for 2020 is shorter than 2019. Hence, the Libertarian Party did not win more seats in 2020 than in 2019.\n",
    "Question Text:\nWhich category of advertising medium has the highest investment?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\ncategories = ['TV', 'Social Media', 'Radio', 'Newspaper', 'Outdoor', 'Digital']\nvalues = [35, 55, 20, 45, 30, 60]\ncolors = ['#ec37bb', '#d3bed5', '#aa6bc1', '#3544ea', '#c3c50a', '#943671']\n\n# Figure size to avoid word overlap\nplt.figure(figsize=(10, 6))\n\n# Creating bar chart\nbars = plt.bar(categories, values, color=colors)\n\n# Adding labels and title\nplt.xlabel('Advertising Medium')\nplt.ylabel('Investment in $1000s')\nplt.title('Advertising investments')\n\n# Saving figure\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/995.png')\nplt.show()\n```\nChoices:['TV', 'Social Media', 'Radio', 'Newspaper', 'Outdoor', 'Digital']\nStudent's Response:Digital\n",
    "Question Text:\n:\nIs 'Sci-fi' category has more books than 'History' category based on the bar chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values rounded to the nearest 5\nvalues = [45, 30, 55, 35, 50]\ntitles = [\"History\", \"Romance\", \"Sci-fi\", \"Children's literature\", \"Biography\"]\n\nplt.figure(figsize=[10, 6])\nplt.barh(titles, values, color='green')\nplt.title(\"Number of Books in Each Category\")\nplt.xlabel(\"Number of Books\")\nplt.ylabel(\"Book Categories\")\nplt.grid(True)\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/998.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich city has the equal value for both 'Value 1' and 'Value 2'?\nFigure Code:\n```\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncities = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio']\nvalues1 = [35, 40, 45, 25, 50, 30, 35]\nvalues2 = [30, 35, 40, 45, 50, 25, 30]\n\nx = np.arange(len(cities))  # label locations\nwidth = 0.35  # width of the bars\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nrects1 = ax.bar(x - width/2, values1, width, label='Value 1', color='#a20e1e')\nrects2 = ax.bar(x + width/2, values2, width, label='Value 2')\n\n# Add some text for labels, and custom x-axis tick labels, etc.\nax.set_xlabel('Cities')\nax.set_ylabel('Values')\nax.set_title('Values by city')\nax.set_xticks(x)\nax.set_xticklabels(cities)\nax.legend()\n\nfig.tight_layout()\n\nplt.savefig('bar_charts/bar_charts_visual_linguistic/train/999.png')\nplt.show()\n```\nChoices:['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio']\nStudent's Response:Phoenix\n",
    "Question Text:\nDoes 'The Last Supper' has least number of paintings in the exhibition?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndef create_bar_chart():\n    paintings = ['The Last Supper', 'Starry Night', 'The Scream', 'Guernica', 'Mona Lisa']\n    counts = [15, 25, 30, 20, 10]\n    plt.figure(figsize=[10,5])\n    plt.bar(paintings, counts, color='blue')\n    plt.title('Number of Paintings in each Exhibition')\n    plt.xlabel('Paintings')\n    plt.ylabel('Counts')\n    plt.xticks(rotation=45)\n    plt.yticks(range(0,35,5))\n    plt.grid(axis='y')\n    plt.savefig('bar_charts/bar_charts_visual_linguistic/train/1000.png')\n    plt.show()\n\ncreate_bar_chart()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n"
]