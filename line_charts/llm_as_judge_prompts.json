[
    "Question Text:\nWhich year had the highest average temperature deviation role?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyear = list(range(2000, 2021))\navg_temp_deviation = [0.42, 0.56, 0.63, 0.61, 0.55, 0.69, 0.62, 0.66, 0.54, 0.64, \n                      0.71, 0.60, 0.63, 0.66, 0.74, 0.90, 0.94, 0.90, 0.82, 0.96, 1.02]  # Source: NASA\nco2_emission = [8089, 8273, 8335, 8751, 9011, 9045, 9166, 9355, 9372, 9137, \n                9128, 9104, 9205, 9308, 9399, 9532, 9649, 9745, 9843, 9866, 10058]    # Source: Global Carbon Atlas\n\n# Initialize the figure\nplt.figure(figsize=(10, 7))\n\n# Plotting both lines\nplt.plot(year, avg_temp_deviation, color='#6ab1fd', marker='o', linestyle='-', label='Avg Temp Deviation')\nplt.plot(year, co2_emission, color='#fd6a62', marker='o', linestyle='-', label='CO2 Emission')\n\n# Adding labels, legend, and title\nplt.xlabel('Year')\nplt.ylabel('Value')\nplt.legend(loc='best')\nplt.title('Global Warming: Avg Temp Deviation vs CO2 Emission')\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/1.png')\n\nplt.show()\n```\nChoices:['2000', '2005', '2010', '2015', '2020']\nStudent's Response:'2020'\n",
    "Question Text:\nDid the global average temperature anomaly and sea level change both increase from the year 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\nyears = range(2000, 2011)\ntemp_anomaly = [0.42, 0.57, 0.62, 0.61, 0.55, 0.66, 0.63, 0.65, 0.54, 0.64, 0.70] # Global avg temp anomaly\nsea_level_change = [2.9, 3.1, 3.3, 3.3, 3.4, 3.6, 3.5, 3.7, 3.7, 3.9, 3.9] # Global avg sea level change\n\n# Create a new figure with a specific size\nplt.figure(figsize=(10,5))\n\n# Plot data\nplt.plot(years, temp_anomaly, color='#2c7c01', marker='o', label='Temperature Anomaly')\nplt.plot(years, sea_level_change, color='#1f77b4', marker='x', label='Sea Level Change')\n\n# Create labels\nplt.title('Global Warming Indicators Over Time')\nplt.xlabel('Year')\nplt.ylabel('Change')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/2.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the number of Pulitzer Prize Winners exceed the number of Nobel Prize Winners in literature in the year 1990?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\nbooks_published = [1960, 1970, 1980, 1990, 2000, 2010]\nnobel_winners = [5,7,9,11,13,16]\nbooker_winners = [1,2,3,6,7,9]\npulitzer_winners = [6,8,10,14,16,20]\nhugo_winners = [2,4,5,7,9,12]\n\n# Create the scatter plot\nplt.figure(figsize=[10,8])\n\nplt.scatter(books_published, nobel_winners, color='#020cb7', marker='o', label='Nobel Prize Winners')\nplt.scatter(books_published, booker_winners, color='#864f1d', marker='s', label='Booker Prize Winners')\nplt.scatter(books_published, pulitzer_winners, color='g', marker='v', label='Pulitzer Prize Winners')\nplt.scatter(books_published, hugo_winners, color='r', marker='x', label='Hugo Award Winners')\n\nplt.title(\"Literature Awards Winners over the Years\")\nplt.xlabel('Years')\nplt.ylabel('Number of winners')\nplt.legend(loc='upper left')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/4.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nDid the housing sales in Area 2 surpass those in Area 4 in all quarters of the year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define house sales data.\nquarter = ['Q1', 'Q2', 'Q3', 'Q4']\narea_1_sales = [150, 200, 152, 202]\narea_2_sales = [176, 220, 180, 210]\narea_3_sales = [134, 178, 150, 198]\narea_4_sales = [187, 235, 192, 220]\n\n# Create a new figure with a specific size.\nplt.figure(figsize=(20, 10))\n\n# Add line chart for each area.\nplt.scatter(quarter, area_1_sales, color='#a9fbd0', marker='o', label='Area 1')\nplt.scatter(quarter, area_2_sales, color='#b7a344', marker='o', label='Area 2')\nplt.scatter(quarter, area_3_sales, color='purple', marker='o', label='Area 3')\nplt.scatter(quarter, area_4_sales, color='blue', marker='o', label='Area 4')\n\n# Display grid.\nplt.grid(True)\n\n# Add title and labels.\nplt.title('Housing Sales by Quarter')\nplt.xlabel('Quarter')\nplt.ylabel('Sales')\n\n# Add legend.\nplt.legend()\n\n# Save figure.\nplt.savefig('line_charts/line_charts_visual_linguistic/train/6.png')\n\n# Show the figure.\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the sales of Car Model 1 overtaken the sales of Car Model 2 in the year 2017?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ncar_sales_1 = [5, 7, 8, 7, 9, 10, 11, 10, 11, 12, 13]  # Sales (in millions) of Car Model 1\ncar_sales_2 = [4, 5, 6, 5, 6, 7, 8, 10, 10, 11, 12]  # Sales (in millions) of Car Model 2\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.plot(years, car_sales_1, marker='o', linestyle='-', color='#949e26', label='Car Model 1')\nax.plot(years, car_sales_2, marker='o', linestyle='--', color='blue', label='Car Model 2')\n\n# Add labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Sales (in millions)')\nax.set_title('Sales of Two Car Models Over Time')\n\n# Add a legend\nax.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/7.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBetween which two consecutive years did USA see the biggest increase in tourism?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2020))\nusa_tourism = [67.2, 69.8, 67.0, 69.8, 75.0, 77.5, 76.6, 75.9, 79.3, 79.6]\ncanada_tourism = [16.2, 16.6, 16.0, 16.5, 17, 18, 18.5, 19.3, 20, 21]\n\nplt.figure(figsize=(10, 5))\nplt.plot(years, usa_tourism, marker='o', label='USA')\nplt.plot(years, canada_tourism, marker='s', label='Canada')\n\nplt.xlabel('Year')\nplt.ylabel('Number of tourists (in millions)')\nplt.title('Number of tourists visiting USA and Canada (2010-2019)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/8.png')\nplt.show()\n```\nChoices:['2010-2011', '2012-2013', '2013-2014', '2016-2017', '2018-2019']\nStudent's Response:'2013-2014'\n",
    "Question Text:\nIs the 'Traveling' hobby showing the highest engagement level across all given time points?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Detailing the data\nreading = [30, 60, 90, 120, 150]\ngaming = [50, 100, 150, 200, 250]\ntraveling = [100, 200, 300, 400, 500]\nfishing = [10, 20, 30, 40, 50]\n\ntime = [1, 2, 3, 4, 5]\n\n# Creating the figure space\nfig = plt.figure(figsize=(10, 8))\n\n# Construing four scatter plots for four 'Hobbies' data series\nplt.scatter(time, reading, marker='o', color='#b5c6cd', label='Reading')\nplt.scatter(time, gaming, marker='o', color='#8d7199', label='Gaming')\nplt.scatter(time, traveling, marker='o', color='#e0b5a6', label='Travelling')\nplt.scatter(time, fishing, marker='o', color='#ec9cee', label='Fishing')\n\n# Adding labels and title, and setting a grid\nplt.xlabel('Time (in hours)')\nplt.ylabel('Engagement Level')\nplt.title('Hobbies')\nplt.legend()\nplt.grid(True)\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/9.png')\n\n# Displaying the scatter plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the highest net change in forest cover between 2000 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Forestry data (fictional)\nyears = list(range(2000, 2021))\narea_forested = [4.5, 4.6, 4.7, 4.6, 4.6, 4.8, 4.8, 4.8, 4.7, 4.9, 5, 5.1, 5.2, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 6]\narea_deforested = [0.09, 0.11, 0.12, 0.15, 0.16, 0.2, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.3, 0.32, 0.33, 0.34, 0.35, 0.38, 0.4, 0.42, 0.45]\nnet_change = [i - j for i, j in zip(area_forested, area_deforested)]\n\n# Plotting the lines\nplt.figure(figsize=(10, 6))\nplt.plot(years, area_forested, color='#e95307', marker='o', label='Area Forested')\nplt.plot(years, area_deforested, color='green', marker='o', label='Area Deforested')\nplt.plot(years, net_change, color='blue', marker='o', label='Net Change')\n\n# Adding labels, title, and legend\nplt.xlabel('Years')\nplt.ylabel('Area (millions of hectares)')\nplt.title('Forestry Changes (2000-2020)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/10.png')\nplt.show()\n```\nChoices:[0.37, 0.45, 5.8, 6]\nStudent's Response:5.8\n",
    "Question Text:\nWas the temperature in the year 2003 higher than 14.50 Celsius?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]\ntemperature = [14.36, 14.52, 14.61, 14.57, 14.55, 14.62, 14.64, 14.55, 14.42, 14.58, 14.59]\n\nplt.figure(figsize=(10,6))\n\nplt.scatter(years, temperature, label='Temperature (in Celsius)', marker='o')\n\nplt.title('Temperature Variation over Years causing Natural Disasters')\nplt.xlabel('Year')\nplt.ylabel('Temperature (in Celsius)')\nplt.legend()\n\nplt.grid(True)\nplt.tight_layout()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/11.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the highest recorded humidity on day 6?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Creating 5 different series of data\ntemperature = [25, 28, 30, 35, 29, 33, 31, 25, 29, 30]\nhumidity = [60, 65, 70, 75, 66, 77, 72, 62, 67, 70]\nwind_speed = [15, 20, 15, 10, 12, 15, 20, 18, 16, 12]\nrainfall = [10, 20, 15, 5, 10, 12, 15, 17, 16, 12]\nsunlight_hours = [10, 11, 12, 11, 10, 11, 12, 11, 12, 10]\ndays = range(1, 11)\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.scatter(days, temperature, label='Temperature (\u00b0C)', color='#f4ec74')\nax.scatter(days, humidity, label='Humidity (%)', color='#7a3e71')\nax.scatter(days, wind_speed, label='Wind Speed (Km/hr)', color='#1cdf6f')\nax.scatter(days, rainfall, label='Rainfall (mm)', color='#b3248b')\nax.scatter(days, sunlight_hours, label='Sunlight Hours (hr/day)', color='#e7dac5')\n\nplt.title('Weather Chart')\nplt.xlabel('Days')\nplt.ylabel('Weather Parameters')\n\nplt.legend()\n\npath = 'line_charts/line_charts_visual_linguistic/train/'\nif not os.path.exists(path):\n    os.makedirs(path)\n\nplt.savefig(path + '12.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich genre of books did the person read the most in 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = list(range(2000, 2011))\nfantasy = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nnon_fiction = [2, 3, 3, 4, 4, 5, 5, 6, 7, 8, 8]\nromance = [4, 5, 6, 6, 7, 7, 8, 8, 9, 10, 11]\n\n# create figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# plot data\nax.plot(years, fantasy, label='Fantasy', marker='o')\nax.plot(years, non_fiction, label='Non-fiction', marker='s')\nax.plot(years, romance, label='Romance', marker='d')\n\n# labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Number of books read')\nax.set_title('Number of books read in different genres')\n\n# legend on the top right\nax.legend()\n\n# save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/14.png')\nplt.show()\n```\nChoices:['Fantasy', 'Non-fiction', 'Romance']\nStudent's Response:Fantasy\n",
    "Question Text:\nIn which year was the amount of afforestation highest during the 2000-2019 period?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nyears = list(range(2000, 2020))\ndeforestation = [16, 18, 21, 22, 20, 19, 18, 17, 16, 15, 15, 14, 15, 16, 16, 15, 14, 13, 12, 11]  # in million hectares\nafforestation = [1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 9, 11, 13, 15, 17, 20, 23, 26, 30]  # in million hectares\nnet_loss = [x-y for x, y in zip(deforestation, afforestation)]  # net loss each year\n\n# plot size\nplt.figure(figsize=(10,7))\n\n# Plotting\nplt.scatter(years, deforestation, color='#7f1b62', marker='o',label= 'Deforestation')\nplt.scatter(years, afforestation, color='green', marker='v', label= 'Afforestation')\nplt.scatter(years, net_loss, color='blue', marker='s', label= 'Net Loss')\n\n# Legend and titles\nplt.legend()\nplt.title('Forestry Data (2000-2019)')\nplt.xlabel('Years')\nplt.ylabel('Area (million hectares)')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/16.png')\n\nplt.show()\n```\nChoices:[2000, 2005, 2010, 2015, 2019]\nStudent's Response:2019\n",
    "Question Text:\nDid the number of books published each year decrease at any point between 2000 to 2010?\nFigure Code:\n```\n# Required Libraries\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\nbooks_published = [150, 200, 250, 275, 300, 350, 400, 450, 500, 550, 600]\nliterature_articles = [50, 75, 100, 125, 150, 175, 200, 225, 250, 275, 300]\nliterary_awards = [5, 7, 9, 11, 13, 15, 17, 20, 23, 26, 29]\n\n# Creating the Line Chart with three different series of data\nplt.figure(figsize=(12,8))\nplt.plot(years, books_published, color='#b2842e', marker='o', label='Books Published')\nplt.plot(years, literature_articles, color='#826399', marker='o', label='Literature Articles')\nplt.plot(years, literary_awards, color='b', marker='o', label='Literary Awards')\n\n# Labels & Legend\nplt.xlabel('Years')\nplt.ylabel('Counts')\nplt.title('Literature Trends from 2000 to 2010')\nplt.legend()\n\n# Saving the Figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/18.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhat is the weight of Cat 4 when it is 3 years old?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncats_age = [1, 2, 3, 4, 5]\ncat1_weight = [2, 2.5, 3, 3.5, 4]\ncat2_weight = [2.5, 3, 3.5, 4, 4.5]\ncat3_weight = [3, 3.5, 4, 4.5, 5]\ncat4_weight = [3.5, 4, 4.5, 5, 5.5]\ncat5_weight = [4, 4.5, 5, 5.5, 6]\n\n# Create scatter plot\nplt.figure(figsize=(10,8))\nplt.scatter(cats_age, cat1_weight, c='#8bfa66', label='Cat 1')\nplt.scatter(cats_age, cat2_weight, c='#70ae66', label='Cat 2')\nplt.scatter(cats_age, cat3_weight, c='#ea9540', label='Cat 3')\nplt.scatter(cats_age, cat4_weight, c='#da567a', label='Cat 4')\nplt.scatter(cats_age, cat5_weight, c='#bbbbbb', label='Cat 5')\n\n# Add labels and a legend\nplt.title('Cat Weights As They Age')\nplt.xlabel('Age (Years)')\nplt.ylabel('Weight (Kg)')\nplt.legend(loc='upper left')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/19.png')\nplt.show()\n```\nChoices:['3.5 kg', '4 kg', '4.5 kg', '5 kg', '5.5 kg']\nStudent's Response:4.5 kg\n",
    "Question Text:\nWhich country, among the given four countries, has shown the least absolute growth in population from the year 1960 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define populations (millions) over years for 4 countries\nyears = list(range(1960, 2020, 10))\npopulations = {\n    'China': [667070, 818315, 981235, 1151695, 1283197, 1390080],\n    'India': [449480, 553868, 693947, 870133, 1071478, 1337086],\n    'USA': [180671, 205052, 227225, 248718, 281422, 331449],\n    'Brazil': [72208, 94714, 121153, 150368, 169544, 211055]\n    }\ncolors = ['#f27b6f', '#f7cf9e', '#ff5f77', '#9104ab']\n\n# Creating the line chart\nplt.figure(figsize=[10,8])\n\nfor i, (country, population) in enumerate(populations.items()):\n   plt.plot(years, population, color=colors[i], marker='o', label=country)\n\n# Adding labels and legends\nplt.title('Population Growth (1960 - 2020)')\nplt.xlabel('Year')\nplt.ylabel('Population (millions)')\nplt.legend(loc='upper left')\n\n# Saving the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/20.png')\n\nplt.show()\n```\nChoices:['China', 'India', 'USA', 'Brazil']\nStudent's Response:USA\n",
    "Question Text:\nDid the retail sales decrease at any point between 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Years ranging from 2010 to 2020\nyears = list(range(2010, 2021))\n\n# Some made up retail sales numbers for each year.\nretail_sales = [100, 110, 150, 130, 200, 210, 250, 300, 350, 400, 450]\n\nplt.figure(figsize=(10, 6))  \nplt.plot(years, retail_sales, marker='o', linestyle='-')\nplt.title(\"Retail Sales Over the Years\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Retail Sales (in millions)\")\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/21.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nAccording to the line charts, which social media platform had a steady increase in the number of users from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2015, 2016, 2017, 2018, 2019, 2020]\nFacebook_users = [1500, 1700, 2000, 2300, 2400, 2500]\nInstagram_users = [400, 600, 800, 1000, 1200, 1400]\nTwitter_users = [320, 325, 330, 335, 340, 350]\nLinkedIn_users = [97, 106, 116, 138, 150, 165]\nWhatsApp_users = [900, 1000, 1200, 1400, 1600, 1800]\n\n# Plotting\nplt.figure(figsize=(10, 6))\n\nplt.plot(years, Facebook_users, marker=\"o\", label=\"Facebook\")\nplt.plot(years, Instagram_users, marker=\"o\", label=\"Instagram\")\nplt.plot(years, Twitter_users, marker=\"o\", label=\"Twitter\")\nplt.plot(years, LinkedIn_users, marker=\"o\", label=\"LinkedIn\")\nplt.plot(years, WhatsApp_users, marker=\"o\", label=\"WhatsApp\")\n\nplt.xlabel(\"Years\")\nplt.ylabel(\"Users (in millions)\")\nplt.title(\"Number of users on different social media platforms\")\n\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/22.png')\nplt.show()\n```\nChoices:['Facebook', 'Instagram', 'Twitter', 'LinkedIn', 'WhatsApp']\nStudent's Response:'Twitter'\n",
    "Question Text:\nDid the weight loss increase consistently over the 10 weeks?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the line chart\nweeks = range(1, 11)\nweight_loss_series = [5, 6, 8, 10, 11, 12, 14, 15, 17, 20]\ncardio_minutes_series = [30, 60, 90, 120, 150, 180, 210, 240, 270, 300]\nstrength_training_minutes_series = [15, 30, 40, 45, 60, 70, 80, 85, 90, 100]\nyoga_minutes_series = [10, 20, 30, 40, 45, 60, 70, 80, 90, 100]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Plotting the lines\nax.plot(weeks, weight_loss_series, marker='o', label='Weight loss (kg)')\nax.plot(weeks, cardio_minutes_series, marker='o', label='Cardio minutes')\nax.plot(weeks, strength_training_minutes_series, marker='o', label='Strength training minutes')\nax.plot(weeks, yoga_minutes_series, marker='o', label='Yoga minutes')\n\n# Adding titles and labels\nplt.title('Fitness Progress over 10 weeks')\nplt.xlabel('Week')\nplt.ylabel('Measurement')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/23.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the year with the highest retail sales according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for Retail sales\nyears = ['2015', '2016', '2017', '2018', '2019', '2020']\nsales = [75, 85, 90, 95, 100, 80]  # in million dollars\n\n# Create line chart\nplt.figure(figsize=(10, 7))   # Ensure figure is large enough to avoid word overlap\nplt.plot(years, sales, color='#85a420', marker='o', linestyle='-', label='Retail Sales')\n\nplt.title('Retail Sales Over the Years')  # Title of the chart\nplt.xlabel('Year')  # X-axis label\nplt.ylabel('Sales (in million dollars)')  # Y-axis label\nplt.legend()  # Show legend\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/24.png')\n\nplt.show()  # display the chart\n```\nChoices:['2015', '2016', '2017', '2018', '2019', '2020']\nStudent's Response:'2019'\n",
    "Question Text:\nIn the scatter plot, which movie genre has the highest average rating for the 7th movie?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# 4 different series of data, representing average ratings for movies from different categories\naction_movies = [8, 7.5, 9, 7.8, 8.3, 7.2, 9.1, 8.6, 7.9, 8.4]\ncomedy_movies = [7.3, 8.1, 8.5, 7.9, 7.2, 8.6, 7, 9, 8.7, 7.4]\ndrama_movies = [8.2, 9, 8.5, 7.6, 8.3, 8.9, 9.1, 8.7, 8.6, 8.8]\nsci_fi_movies = [9, 8.7, 8.2, 8.6, 7.9, 8.1, 8.3, 9.1, 8.6, 7.8]\n\nplt.figure(figsize=(10, 6))\nplt.scatter(range(10), action_movies, c='b', label='Action Movies', marker='o')\nplt.scatter(range(10), comedy_movies, c='r', label='Comedy Movies', marker='s')\nplt.scatter(range(10), drama_movies, c='g', label='Drama Movies', marker='^')\nplt.scatter(range(10), sci_fi_movies, c='y', label='Sci-Fi Movies', marker='*')\n\nplt.xlabel('Movie Index')\nplt.ylabel('Average Rating')\nplt.title('Movies Rating per Genre')\n\nplt.legend()\nplt.grid(True)\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/25.png')\n\nplt.show()\n```\nChoices:['Action Movies', 'Comedy Movies', 'Drama Movies', 'Sci-Fi Movies']\nStudent's Response:Drama Movies\n",
    "Question Text:\n:\nWas the money spent on TV Ads more than Newspaper Ads each month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series Data\ntv_ads = [300, 400, 500, 600, 700]\nradio_ads = [100, 150, 250, 300, 400]\nnewspaper_ads = [50, 100, 150, 200, 250]\nmonths = [\"January\", \"February\", \"March\", \"April\", \"May\"]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots()\n\n# Create scatter plots for each series\nax.scatter(months, tv_ads, color='#77feeb', label='TV ads')\nax.scatter(months, radio_ads, color='green', label='Radio ads')\nax.scatter(months, newspaper_ads, color='red', label='Newspaper ads')\n\n# Setting labels and title\nax.set_xlabel('Months')\nax.set_ylabel('Ad spend (in $1,000)')\nax.set_title('Advertising spend over months')\n\n# Adding legend\nax.legend()\n\n# Avoiding word overlap\nfig.set_size_inches(10, 8)\n\n# Save plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/26.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which month does Pop Music have the least number of streams?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The data\nmonth = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\npop_music_streams = [45, 50, 55, 60, 65, 70, 75, 80, 85, 70, 55, 50]\nclassical_music_streams = [40, 45, 50, 45, 40, 35, 30, 30, 35, 40, 45, 50]\n\nplt.figure(figsize=[10,5])\n\n# Plotting the Pop Music Streams data\nplt.plot(month, pop_music_streams, marker='o', label='Pop Music')\n# Plotting the Classical Music Streams data\nplt.plot(month, classical_music_streams, marker='o', label='Classical Music')\n\nplt.title('Streams by Month')\nplt.xlabel('Month')\nplt.ylabel('Streams (in millions)')\n\nplt.legend(loc='upper left')\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/29.png')\n```\nChoices:['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\nStudent's Response:'Jan'\n",
    "Question Text:\nDid the number of crew members in space flights increased from 1961 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyear = [1961, 1969, 2001, 2010, 2020]\ncrew = [1, 3, 2, 6, 7]\n\nplt.figure(figsize=(10,6))\nplt.scatter(year, crew, color='#abd7ad', marker='o')\nplt.title('Space Exploration: Crew in Space Flights by Year')\nplt.xlabel('Year')\nplt.ylabel('Number of Crew Members')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/30.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the increase in the number of tourists visiting Country X from 2010 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]\ntourists_in_millions = [25, 28, 30, 32, 35, 38, 40, 42, 45, 48]\n\nplt.figure(figsize=(10, 5))\n\n# Plotting data\nplt.plot(years, tourists_in_millions, color='#d0a55c', marker='o', linewidth=2, label='Tourists')\n\n# Titles, labels, and legend\nplt.title('Tourists Visiting Country X (2010-2019)')\nplt.xlabel('Year')\nplt.ylabel('Number of Tourists (in millions)')\nplt.legend()\n\n# Saving figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/31.png')\nplt.show()\n```\nChoices:['23 million', '28 million', '25 million', '15 million']\nStudent's Response:23 million\n",
    "Question Text:\nIs Rain's water level the lowest in every month compared to Lake, River, Aquifer and Reservoir?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for 5 series\nmonths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nlake = [70, 75, 80, 85, 85, 78, 75, 72, 68, 63, 60, 65]\nriver = [50, 52, 55, 58, 60, 61, 60, 57, 55, 52, 50, 48]\nrain = [10, 30, 60, 80, 80, 45, 20, 15, 10, 10, 15, 20]\naquifer = [30, 35, 40, 45, 50, 55, 50, 45, 40, 35, 30, 25]\nreservoir = [90, 92, 95, 98, 100, 95, 90, 85, 80, 80, 85, 88]\n\nplt.figure(figsize=[10,6])\nplt.plot(months, lake, color='#f86ed1', marker='D', label='Lake')\nplt.plot(months, river, color='#dc7f41', marker='o', label='River')\nplt.plot(months, rain, color='#902923', marker='s', label='Rain')\nplt.plot(months, aquifer, color='#456d08', marker='P', label='Aquifer')\nplt.plot(months, reservoir, color='#00c2cb', marker='X', label='Reservoir')\n\nplt.title('Monthly Water Levels for Different Water Bodies')\nplt.xlabel('Month')\nplt.ylabel('Water Level')\nplt.legend()\n\nplt.grid(True)\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/32.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich city has the highest population in the 5th year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create 4 different series of data\nx = [1, 2, 3, 4, 5]\ny1 = [10, 15, 7, 10, 3]\ny2 = [2, 7, 10, 5, 6]\ny3 = [5, 6, 9, 12, 15]\ny4 = [8, 2, 4, 7, 1]\n\n# Create scatter plot\nplt.figure(figsize=[10,8])\nplt.scatter(x, y1, color='#05e1ad', label='City A')\nplt.scatter(x, y2, color='#29e45c', label='City B')\nplt.scatter(x, y3, color='#b75250', label='City C')\nplt.scatter(x, y4, color='#768717', label='City D')\n\n# Customize the chart\nplt.title('Cities Population Trend')\nplt.xlabel('Time (in years)')\nplt.ylabel('Population (in thousands)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/33.png')\nplt.show()\n```\nChoices:['City A', 'City B', 'City C', 'City D']\nStudent's Response:\"City C\"\n",
    "Question Text:\n: From the revealed scatter plot, amongst all categories, who uses JavaScript the most?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data\nlanguages = ['Python', 'Javascript', 'Java', 'R', 'C++']\nusers = [10, 20, 30, 40, 50]\ndevelopers = [8, 18, 28, 35, 45]\nresearchers = [15, 25, 35, 50, 60]\nstudents = [20, 40, 60, 75, 90]\n\nplt.figure(figsize=(10,8))\n\nplt.scatter(languages, users, color='#f8c134', marker='o', label='Users')\nplt.scatter(languages, developers, color='#457998', marker='s', label='Developers')\nplt.scatter(languages, researchers, color='#f83c7d', marker='^', label='Researchers')\nplt.scatter(languages, students, color='#685274', marker='*', label='Students')\n\nplt.title('Languages Usage among various categories')\nplt.xlabel('Languages')\nplt.ylabel('Number in Thousands')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/34.png')\nplt.show()\n```\nChoices:['Researchers', 'Students', 'Developers', 'Users']\nStudent's Response:'Students'\n",
    "Question Text:\nIs Spanish the language with the second highest number of native speakers according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nlanguages = ['English', 'Spanish', 'French', 'German', 'Chinese']\nspeakers = [370, 460, 80, 95, 920]\n\n# Plot\nplt.figure(figsize=(10,5))\nplt.plot(languages, speakers, marker='o')\nplt.title('Number of Native Speakers (in Millions) for Different Languages')\nplt.xlabel('Language')\nplt.ylabel('Speakers in millions')\n\n# Saving figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/35.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich school had the highest score in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given values\narchitecture_schools = [\"Harvard\", \"MIT\", \"Columbia\", \"Yale\"]\nyears = list(range(2010, 2021))\nharvard_scores = [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95]\nmit_scores = [82, 84, 85, 88, 88, 89, 90, 92, 93, 95, 96]\ncolumbia_scores = [81, 83, 85, 85, 86, 86, 87, 88, 88, 90, 90]\nyale_scores = [80, 82, 83, 84, 85, 85, 86, 86, 87, 88, 88]\n\n# Plotting\nplt.figure(figsize=(12, 6))\nplt.scatter(years, harvard_scores, color='#95d7cb', marker='o', label=\"Harvard\")\nplt.scatter(years, mit_scores, color='#cac49a', marker='s', label=\"MIT\")\nplt.scatter(years, columbia_scores, color='#7f31c4', marker='*', label=\"Columbia\")\nplt.scatter(years, yale_scores, color='#26133f', marker='x', label=\"Yale\")\n\nplt.title('Architecture Scores by Year')\nplt.xlabel('Year')\nplt.ylabel('Score')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/36.png')\nplt.show()\n```\nChoices:['Harvard', 'MIT', 'Columbia', 'Yale']\nStudent's Response:MIT\n",
    "Question Text:\nDid Ad 4 have a reach higher than its cost?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nadvertisements = ['Ad 1', 'Ad 2', 'Ad 3', 'Ad 4', 'Ad 5']\nreach_in_millions = [80, 90, 60, 85, 75]\ncost_in_millions = [4, 6, 3, 5, 4.5]\n\nplt.figure(figsize=(10, 6))\nplt.plot(advertisements, reach_in_millions, marker='o', label='Reach in Millions')\nplt.plot(advertisements, cost_in_millions, marker='o', label='Cost in Millions')\nplt.title('Advertising Cost and Reach Comparison')\nplt.xlabel('Advertisements')\nplt.ylabel('Value in Millions')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/38.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIn which month does the graph show that the highest number of cars were sold?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# define the data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\ncar_sales = [50, 60, 70, 80, 60, 50, 40, 70, 90, 110, 120, 150]\n\n# create the scatter plot\nfig, ax = plt.subplots(figsize=(15,10))\nax.scatter(months, car_sales, color='#86c829', marker='o')\n\n# add labels and title\nax.set_xlabel('Months')\nax.set_ylabel('Number of Cars Sold')\nax.set_title('Car Sales over a Year')\n\n# save the figure \nplt.savefig('line_charts/line_charts_visual_linguistic/train/39.png')\nplt.show()\n```\nChoices:['March', 'May', 'November', 'December']\nStudent's Response:'December'\n",
    "Question Text:\nWhat could be the trend of Electronics sales over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\nx = list(range(1,11))\ny1 = [2*i + 1 for i in x]\ny2 = [i**2 for i in x]\ny3 = [3*i - 2 for i in x]\ny4 = [2**i for i in x]\ny5 = [i**0.5 for i in x]\n\n# Create a new figure of size 10x6 inches, using 100 dots per inch\nplt.figure(figsize=(10, 6), dpi=100)\nplt.title('Retail Sales of Different Categories Over Time')\n\n# Plot data\nplt.scatter(x, y1, color='#a94195', marker='o', label='Electronics')\nplt.scatter(x, y2, color='#2be048', marker='o', label='Groceries')\nplt.scatter(x, y3, color='#9df46a', marker='o', label='Furnitures')\nplt.scatter(x, y4, color='#0cb915', marker='o', label='Clothing')\nplt.scatter(x, y5, color='#000000', marker='o', label='Cosmetics')\n\nplt.xlabel('Time (in Months)')\nplt.ylabel('Sales (in Thousand Dollars)')\nplt.legend(loc='upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/40.png')\nplt.show()\n```\nChoices:['It is steadily increasing.', 'It is steadily decreasing.', 'It is constant.', 'It shows a periodic behavior.', 'None of the above.']\nStudent's Response:The trend line for Electronics categories goes upward and in a straight line fashion, so it represents a steady increase in sales over time as per the scatter chart.\n",
    "Question Text:\nFrom the line chart 'Number of Comedy vs Action Movies over the years', the number of comedy movies are recorded to decrease first time in which year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Movies data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ncomedy_movies = [15, 20, 18, 22, 27, 29, 33, 37, 40, 42, 45]\naction_movies = [10, 15, 17, 20, 23, 25, 28, 31, 30, 32, 35]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Plotting data\nax.plot(years, comedy_movies, marker='o', label='Comedy Movies')\nax.plot(years, action_movies, marker='s',label='Action Movies')\n\n# Setting labels and title\nax.set_xlabel('Years')\nax.set_ylabel('Number of Movies')\nax.set_title('Number of Comedy vs Action Movies over the years')\n\n# Add a legend\nax.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/42.png')\nplt.show()\n```\nChoices:['2011', '2012', '2013', '2017']\nStudent's Response:'2017'\n",
    "Question Text:\nWhich transportation method corresponds to the highest point on the 'Total Distance Travelled' series?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nTransportation = ['Car', 'Bike', 'Bus', 'Train', 'Walking']\nAverage_Duration = [60, 30, 45, 70, 50]\nTotal_Distance_Travelled = [400, 100, 200, 500, 50]\n\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Scatter plot for Average Travel Duration\nscatter1 = ax.scatter(Transportation, Average_Duration, color='#e9b7fd', marker='o')\n# Scatter plot for Total Distance Travelled\nscatter2 = ax.scatter(Transportation, Total_Distance_Travelled, color='#bcc861', marker='^')\n\nax.legend([scatter1, scatter2], ['Average Travel Duration (in minutes)', 'Total Distance Travelled (in km)'])\nax.set_ylabel('Value')\nax.set_xlabel('Transportation')\nax.set_title('Travel: Average Duration vs Total Distance Travelled')\n\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/43.png')\nplt.show()\n```\nChoices:['Car', 'Bike', 'Bus', 'Train', 'Walking']\nStudent's Response:'Train'\n",
    "Question Text:\nDid the income exceed $70,000 in 2007?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\nincome_in_thousands = [40, 42, 45, 50, 55, 60, 65, 70, 75, 80, 85]\n\n# Create Line chart\nplt.figure(figsize=[10,5])\nplt.plot(years, income_in_thousands, color='#3ad69d', marker='o')\n\nplt.title('Yearly Income Over Time')\nplt.xlabel('Year')\nplt.ylabel('Income in thousands')\n\nplt.grid(True)\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/44.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\n: Does Candidate A have lower public opinion polls than Candidate B in the month of February?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonth = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\ncandidate_A = [53, 59, 58, 67, 72, 76, 71, 69, 68, 75, 80, 85]\ncandidate_B = [60, 63, 65, 70, 65, 65, 74, 71, 72, 74, 75, 78]\n\n# Figure Size\nplt.figure(figsize=(10,7))\n\n# Plotting the scatter plot\nplt.scatter(month, candidate_A, color='#ace20e', label='Candidate A', marker='x')\nplt.scatter(month, candidate_B, color='blue', label='Candidate B', marker='o')\n\n# Naming the x-axis, y-axis and the whole graph\nplt.xlabel(\"Months\")\nplt.ylabel(\"Public Opinion Poll (%)\")\nplt.title(\"Public Opinion Polls\")\n  \n# Plotting legend\nplt.legend() \n\n# Saving Figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/45.png')\n\n# Function to show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHas the number of short stories sold decreased gradually every year since 2000 based on the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = range(2000, 2021)\npoetry = [25, 30, 35, 40, 32, 27, 30, 31, 29, 35, 38, 42, 40, 39, 42, 44, 45, 47, 48, 50, 52]\nshort_stories = [20, 22, 24, 26, 25, 23, 24, 23, 22, 23, 24, 25, 24, 23, 24, 25, 24, 23, 24, 23, 22]\nnovels = [40, 42, 44, 46, 43, 42, 43, 43, 42, 43, 44, 45, 45, 46, 47, 48, 49, 50, 51, 52, 54]\ndrama = [10, 9, 8, 7, 10, 9, 10, 11, 10, 9, 10, 9, 10, 9, 10, 9, 10, 9, 8, 7, 6]\nnon_fiction = [5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n\n# Plotting\nplt.figure(figsize=(10,8))\nplt.plot(years, poetry, color=\"#3ba523\", marker='o', label='Poetry')\nplt.plot(years, short_stories, color=\"#7fd0a4\", marker='s', label='Short Stories')\nplt.plot(years, novels, color=\"blue\", marker='v', label='Novels')\nplt.plot(years, drama, color=\"red\", marker='p', label='Drama')\nplt.plot(years, non_fiction, color=\"purple\", marker='*', label='Non-fiction')\n\n# Labels\nplt.xlabel(\"Years\")\nplt.ylabel(\"Number of Books Sold (in millions)\")\nplt.title(\"Literature Type vs Number of Books Sold from 2000 to 2021\")\nplt.legend()\n\n# Saving plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/46.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the crime rate in Phoenix increase every year?\nAnswer: Yes\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\ncrime_rates_per_city = {\n    'New York': [3000, 2900, 3100, 3050, 3200],\n    'Los Angeles': [2400, 2500, 2600, 2500, 2550],\n    'Chicago': [2800, 2900, 2800, 2900, 2750],\n    'Houston': [2200, 2300, 2350, 2400, 2450],\n    'Phoenix': [2000, 2100, 2150, 2200, 2250]\n}\n\ncolors = ['#0e9c5c', '#9534b0', 'r', 'b', 'g']\n\nfig, ax = plt.subplots(figsize=(10, 6)) # So the labels don't overlap\n\nfor i, city in enumerate(crime_rates_per_city.keys()):\n    ax.scatter(range(1, 6), crime_rates_per_city[city], color=colors[i], label=city)\n                                             \nax.legend(loc='upper right', title='Cities')                            \nax.set_xlabel('Year')\nax.set_ylabel('Crime Rates')\nax.set_title('Crime Rates in Major Cities')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/48.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich series represents the lowest selling gaming platform over the given time span?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Four series of data\ntime = np.linspace(0.0, 8.0, num=100)\nconsole_games_sales = np.linspace(30.0, 60.0, num=100) + (np.cos(time) * 10.0)\nmobile_games_sales = np.linspace(20.0, 50.0, num=100) + (np.sin(time) * 8.0)\nvr_games_sales = np.linspace(10.0, 40.0, num=100) + (np.sin(time + 0.5) * 5.0)\npc_games_sales = np.linspace(25.0, 45.0, num=100) + (np.cos(time + 0.5) * 10.0)\n# Plot gaming data\n\nfig, ax = plt.subplots(figsize=(15, 10))\nax.scatter(time, console_games_sales, marker='o', color='b', label='Console Games Sales')\nax.scatter(time, mobile_games_sales, marker='s', color='r', label='Mobile Games Sales')\nax.scatter(time, vr_games_sales, marker='*', color='g', label='VR Games Sales')\nax.scatter(time, pc_games_sales, marker='^', color='y', label='PC Games Sales')\n\nax.set_xlabel('Time (years)', fontsize=12)\nax.set_ylabel('Sales (in millions)', fontsize=12)\nax.set_title('Gaming Sales Over Time', fontsize=15)\nax.legend(loc='upper left', fontsize=12)\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/49.png')\nplt.show()\n```\nChoices:['Console Games', 'Mobile Games', 'VR Games', 'PC Games']\nStudent's Response:'VR Games'\n",
    "Question Text:\nIn which month did the person spend the same number of hours for Strength Training as for Cardio?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nmonths = list(range(1,13))\nstrength_training = [40, 45, 50, 60, 70, 75, 80, 85, 90, 90, 95, 100]\ncardio = [70, 75, 65, 80, 85, 60, 70, 80, 65, 85, 90, 95]\n\nplt.figure(figsize=[10,10])\nplt.scatter(months, strength_training, label = 'Strength Training', color='#b1a3f9', marker='o')\nplt.scatter(months, cardio, label = 'Cardio', color='#993799', marker='x')\n\nplt.title('Fitness: Strength Training vs Cardio')\nplt.xlabel('Month')\nplt.ylabel('Hours Spent')\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/51.png')\nplt.show()\n```\nChoices:['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nStudent's Response:April\n",
    "Question Text:\nDid the advertising budget for Newspaper Ads decrease over the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10,7))\n\nyears = list(range(2000, 2021))\ntv_ad = [30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130]\nradio_ad = [40, 42, 45, 46, 50, 55, 60, 65, 70, 75, 80, 83, 85, 88, 90, 92, 94, 96, 98, 100, 105]\nnewspaper_ad = [50, 55, 53, 52, 50, 48, 45, 44, 42, 40, 38, 35, 32, 30, 28, 27, 24, 22, 20, 18, 15]\nonline_ad = [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 70, 80, 85, 90, 95, 100, 110, 120, 130, 140]\noutdoor_ad = [20, 22, 24, 26, 28, 30, 32, 35, 38, 42, 45, 48, 52, 56, 60, 65, 70, 75, 80, 85, 90]\n\nplt.plot(years, tv_ad, color='#67bae3', marker='o', label='TV Ads')\nplt.plot(years, radio_ad, color='#b312c7', marker='o', label='Radio Ads')\nplt.plot(years, newspaper_ad, color='#508f9a', marker='o', label='Newspaper Ads')\nplt.plot(years, online_ad, color='#6306e8', marker='o', label='Online Ads')\nplt.plot(years, outdoor_ad, marker='o', label='Outdoor Ads')\n\nplt.title('Advertising Budget Over Years')\nplt.xlabel('Years')\nplt.ylabel('Advertising Budget (in $ million)')\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/52.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Party E have the least support every month according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# pre-election party names\nparties = ['Party A', 'Party B', 'Party C', 'Party D', 'Party E']\n\n# Monthly support data for each party\nparty_A = [20, 21, 24, 26, 30]\nparty_B = [15, 17, 19, 23, 27]\nparty_C = [25, 25, 27, 28, 32]\nparty_D = [30, 31, 35, 34, 36]\nparty_E = [10, 12, 15, 18, 20]\n\n# plotting the line chart\nplt.figure(figsize=(8, 5))\nplt.plot(party_A, marker='o', label=parties[0])\nplt.plot(party_B, marker='o', label=parties[1])\nplt.plot(party_C, marker='o', label=parties[2])\nplt.plot(party_D, marker='o', label=parties[3])\nplt.plot(party_E, marker='o', label=parties[4])\n\nplt.xlabel('Months')\nplt.ylabel('Support in %')\nplt.title('Pre-election Poll')\nplt.legend(loc='upper left')\n\n# saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/53.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:Yes.\n",
    "Question Text:\nDid the plant height exceed 30 cm after 7 days?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ndays = list(range(1, 11))\nplant_heights = [5, 6, 9, 12, 16, 20, 25, 31, 36, 42] \n\n# Create scatter plot\nplt.figure(figsize=(10, 5))\nplt.scatter(days, plant_heights, color='#d007bb', marker='o')\n\n# Title and labels\nplt.title('Growth of Plant Over 10 Days')\nplt.xlabel('Days')\nplt.ylabel('Height (cm)')\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/54.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the Clothing Sales revenue exceed $20,000 in any month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nclothing_rev = [15, 19, 20, 21, 20, 25, 24, 26, 21, 24, 30, 33]\ngrocery_rev = [40, 37, 39, 42, 44, 41, 42, 47, 49, 52, 60, 66]\npharmacy_rev = [35, 34, 40, 38, 42, 48, 46, 50, 55, 60, 65, 70]\n\nplt.figure(figsize=(10,8))\n\nplt.scatter(months, clothing_rev, color='#b5d78f', label='Clothing Sales')\nplt.scatter(months, grocery_rev, color='#11b6e6', label='Grocery Sales')\nplt.scatter(months, pharmacy_rev, color='#5d5afe', label='Pharmacy Sales')\n\nplt.title('Retail Sales Analysis')\nplt.xlabel('Months')\nplt.ylabel('Revenue ($1000s)')\nplt.legend(loc='upper right')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/55.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Movie C have higher revenue than Movie D every year from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nyears = list(range(2000, 2021))\nmovieA_revenue = [500, 530, 550, 560, 570, 580, 600, 610, 620, 650, 680, 700, 720, 740, 750, 760, 780, 800, 820, 840, 860]\nmovieB_revenue = [400, 410, 450, 460, 470, 480, 500, 510, 515, 520, 520, 530, 540, 550, 560, 570, 580, 590, 600, 620, 640]\nmovieC_revenue = [300, 315, 320, 330, 340, 350, 355, 360, 370, 375, 380, 385, 390, 410, 420, 430, 440, 450, 460, 470, 480]\nmovieD_revenue = [200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400]\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, movieA_revenue, color='#e26b7e', marker='o', label='Movie A')\nplt.plot(years, movieB_revenue, color='#4de83e', marker='o', label='Movie B')\nplt.plot(years, movieC_revenue, color='#fa6b4e', marker='o', label='Movie C')\nplt.plot(years, movieD_revenue, color='#0000FF', marker='o', label='Movie D')\nplt.xlabel('Year')\nplt.ylabel('Revenue (in millions)')\nplt.title('Revenue Trends for 4 Movies (2000-2020)')\nplt.legend()\n\n# Save the plot as a PNG file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/57.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas the Internet Usage Rate around 43% in the year 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data \nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]\nusage_rate = [28.7, 30.4, 34.3, 38.1, 40.4, 43.4, 46.7, 49.7, 51.7, 53.6]  # in %\n\n# Create a new figure\nplt.figure(figsize = (10, 7))\n\n# Add a line chart \nplt.plot(years, usage_rate, color=\"#f27799\", marker='o', label=\"Internet Usage Rate\")\n\n# Set the labels\nplt.title(\"Internet Usage Rate Over Years\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Internet Usage Rate (%)\")\n\n# Add a legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/58.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich employment sector shows a gradual increasing trend in the employee count from 2000 to 2020?\nFigure Code:\n```\n# Required Libraries\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2021))\nemployment_sectors = {\n    'IT': [7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500, 13000, 13500, 14000, 14500, 15000, 15500, 16000, 16500, 17000],\n    'Manufacturing': [14000, 13500, 13000, 12700, 12500, 12300, 12000, 11700, 11500, 11300, 11000, 10800, 10600, 10500, 10400, 10300, 10200, 10100, 10000, 9900, 9800],\n    'Services': [13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000],\n    'Retail': [12000, 12300, 12600, 12900, 13200, 13500, 13800, 14100, 14400, 14700, 15000, 15300, 15600, 15900, 16200, 16500, 16800, 17100, 17400, 17700, 18000],\n    'Construction': [5000, 5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500, 13000, 13500, 14000, 14500, 15000]\n}\n\ncolors = {'#759557', '#d711de', '#16add4', '#2aad21', '#c944a3'}\n\n# Create Figure\nplt.figure(figsize=(10,7))\n\n# Plot Data\nfor idx, (sector, employment) in enumerate(employment_sectors.items()):\n    plt.plot(years, employment, color=list(colors)[idx], marker='o', label=sector)\n\n# Chart Details\nplt.title('Employment trends across various sectors (2000-2020)')\nplt.xlabel('Years')\nplt.ylabel('Number of Employees (in thousands)')\nplt.legend()\nplt.grid(True)\n\n# Save Figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/59.png')\nplt.show()\n```\nChoices:['IT', 'Manufacturing', 'Services', 'Retail', 'Construction']\nStudent's Response:IT\n",
    "Question Text:\nIs the trend of temperature change in the Southern Hemisphere higher than in the Northern Hemisphere?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(1960,2021))\ntemp_change_northern_hem = [i * 0.2 for i in range(61)]\ntemp_change_southern_hem = [i * 0.18 for i in range(61)]\nglobal_temp_change = [0.2 * a + 0.18 * b for a,b in zip(temp_change_northern_hem, temp_change_southern_hem)]\n\nplt.figure(figsize=(15,8))\n\nplt.scatter(years, temp_change_northern_hem, color='#7ea997', label='Temperature change in Northern Hemisphere')\nplt.scatter(years, temp_change_southern_hem, color='#21e933', label='Temperature change in Southern Hemisphere')\nplt.scatter(years, global_temp_change, color='#86cdcb', label='Global Temperature change')\n\nplt.title('Trends in Global Warming')\nplt.xlabel('Year')\nplt.ylabel('Temperature Change (\u00b0C)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/60.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat type of real estate has the highest price for four-bedroom properties?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nbedroom_numbers = [1, 2, 3, 4, 5]\nhouse_price = [200000, 300000, 400000, 500000, 600000]\napartment_price = [150000, 250000, 350000, 450000, 550000]\ncondo_price = [170000, 280000, 390000, 500000, 610000]\ntownhouse_price = [160000, 270000, 380000, 490000, 600000]\n\n# Create a scatter plot\nplt.figure(figsize=(10,8))\n\nplt.scatter(bedroom_numbers, house_price, label=\"House Price\")\nplt.scatter(bedroom_numbers, apartment_price, label=\"Apartment Price\")\nplt.scatter(bedroom_numbers, condo_price, label=\"Condo Price\")\nplt.scatter(bedroom_numbers, townhouse_price, label=\"Townhouse Price\")\n\n# Title and labels for the plot\nplt.title('Real Estate Prices')\nplt.xlabel('Number of Bedrooms')\nplt.ylabel('Price ($)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/61.png')\n\nplt.show()\n```\nChoices:['House', 'Apartment', 'Condo', 'Townhouse']\nStudent's Response:'Condo'\n",
    "Question Text:\nIn which year did the population of rabbits surpass the population of turtles for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2010, 2021))\ndogs = [80, 83, 85, 89, 92, 95, 98, 100, 101, 105, 110]\ncats = [70, 73, 76, 78, 81, 84, 85, 87, 88, 90, 92]\nrabbits = [60, 65, 67, 68, 70, 72, 73, 75, 76, 78, 80]\nturtles = [50, 52, 53, 54, 55, 57, 59, 60, 62, 64, 66]\n\n# Plotting\nplt.figure(figsize=[10,5])\nplt.plot(years, dogs, marker='o', color='#e553f2', label='Dogs')\nplt.plot(years, cats, marker='o', color='green', label='Cats')\nplt.plot(years, rabbits, marker='o', color='#c16233', label='Rabbits')\nplt.plot(years, turtles, marker='o', color='blue', label='Turtles')\n\n# Labels\nplt.xlabel('Years')\nplt.ylabel('Population (In Millions)')\nplt.title('Animal Population Over The Years')\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/62.png')\nplt.show()\n```\nChoices:[2011, 2012, 2013, 2014, 2015]\nStudent's Response:2013\n",
    "Question Text:\n: Is 'Photography' hobby spent more than 10 hours per week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nhobby_hours = [12, 8, 15, 7, 9, 14, 13, 11, 10, 8]\nhobbies = ['Reading', 'Cooking', 'Traveling', 'Gaming', 'Drawing', 'Photography', 'Embroidery', 'Journaling', 'Pottery', 'Writing']\n\nfig, ax = plt.subplots(figsize=(15, 10))  \nax.scatter(hobbies, hobby_hours, marker='o', color='b')\nax.set_title('Hours spent on Hobbies per Week')\nax.set_xlabel('Hobbies')\nax.set_ylabel('Hours Spent')\nax.set_xticks(range(len(hobbies)))\nax.set_xticklabels(hobbies, rotation=45)\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/63.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich retail category shows the highest sales in the 10th month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series Data\nx_values = list(range(1, 11))\n\n# clothing observation.\ny1_values = [15, 18, 29, 35, 46, 59, 65, 78, 81, 95]\n# Gaming observation\ny2_values = [30, 45, 52, 65, 70, 86, 90, 91, 97, 99]\n# Electronics observation\ny3_values = [21, 29, 32, 42, 52, 62, 70, 80, 89, 95]\n# Groceries observation\ny4_values = [20, 25, 30, 40, 50, 65, 70, 80, 90, 100]\n# Household observation\ny5_values = [10, 20, 30, 40, 55, 65, 75, 85, 90, 98]\n\nfig, ax = plt.subplots(figsize=(10,6))\n\nax.scatter(x_values, y1_values, c='b', label='Clothing')\nax.scatter(x_values, y2_values, c='g', label='Gaming')\nax.scatter(x_values, y3_values, c='r', label='Electronics')\nax.scatter(x_values, y4_values, c='c', label='Groceries')\nax.scatter(x_values, y5_values, c='m', label='Household')\nax.legend()\n\nax.set_xlabel('Time (Months)')\nax.set_ylabel('Sales (in thousands)')\nax.set_title('Retail Sales Over Time')\n\nfig.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/64.png')\nplt.show()\n```\nChoices:['Clothing', 'Gaming', 'Electronics', 'Groceries', 'Household']\nStudent's Response:'Gaming'\n",
    "Question Text:\nIn which year did the movie 'Ironman' have the highest number of releases?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the line chart\nyears = [2000, 2005, 2010, 2015, 2020]\nway_to_fight = [12, 15, 18, 25, 27]\nironman = [10, 12, 20, 22, 25]\nunknown = [8, 12, 16, 18, 22]\nbecome_agent = [5, 8, 12, 16, 20]\n\n# Create line chart\nplt.figure(figsize=(10, 5))\n\nplt.plot(years, way_to_fight, marker='o', color='#4bcbe2', label='Way to Fight')\nplt.plot(years, ironman, marker='o', color='#57057d', label='Ironman')\nplt.plot(years, unknown, marker='o', color='#cc8189', label='Unknown')\nplt.plot(years, become_agent, marker='o', color='green', label='Become Agent')\n\nplt.title('Number of Movies Released Over Time')\nplt.xlabel('Year')\nplt.ylabel('Number of Movies')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/65.png')\nplt.show()\n```\nChoices:[2000, 2005, 2010, 2015, 2020]\nStudent's Response:2020\n",
    "Question Text:\nIn which year of education does the number of students majoring in Linguistics first surpass the number of students majoring in Math?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\neducation_years = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnum_students_majoring_math = [100, 200, 250, 210, 290, 230, 333, 383, 403, 479]\nnum_students_majoring_linguistics = [105, 195, 220, 230, 297, 255, 340, 370, 405, 440]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Scatter plot\nax.scatter(education_years, num_students_majoring_math, color='b', label='Math')\nax.scatter(education_years, num_students_majoring_linguistics, color='r', label='Linguistics')\n\n# Labels, legend and title\nax.set_xlabel('Years of Education')\nax.set_ylabel('Number of Students Majoring')\nax.set_title('Education: Number of Students Majoring in Math and Linguistics over Years of Education')\nax.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/66.png')\nplt.show()\n```\nChoices:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nStudent's Response:4\n",
    "Question Text:\nWhich of the following advertising platforms has the most variance in investment over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntv_ad = [230.1, 44.5, 17.2, 151.5, 180.8]  # in $ thousands\nradio_ad = [37.8, 39.3, 45.9, 41.3, 10.8]  # in $ thousands\nnewspaper_ad = [69.2, 45.1, 69.3, 58.5, 58.4]  # in $ thousands\nonline_ad = [90.4, 78.2, 75.1, 62.3, 80.7]  # in $ thousands\nbillboard_ad = [30.6, 35.8, 46.2, 34.6, 22.9]  # in $ thousands\n\n# Create a unique figure\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Scatter plots\nax.scatter(range(len(tv_ad)), tv_ad, c='#00d19f', label='TV', marker='<')\nax.scatter(range(len(radio_ad)), radio_ad, c='#f04fcd', label='Radio', marker='>')\nax.scatter(range(len(newspaper_ad)), newspaper_ad, c='blue', label='Newspaper', marker='o')\nax.scatter(range(len(online_ad)), online_ad, c='green', label='Online', marker='.')\nax.scatter(range(len(billboard_ad)), billboard_ad, c='red', label='Billboard', marker='s')\n\n# Configuration\nplt.title('Advertising Investments')\nplt.xlabel('Time (months)')\nplt.ylabel('Investment ($ thousands)')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/67.png')\n\nplt.show()\n```\nChoices:['TV', 'Radio', 'Newspaper', 'Online', 'Billboard']\nStudent's Response:TV\n",
    "Question Text:\nIn the line chart of Architecture Students in Universities from 1980 to 2020, which university's architecture students increased at a faster pace?\nFigure Code:\n```\n# Necessary imports\nimport matplotlib.pyplot as plt\n\nyears = list(range(1980, 2021))\npublic_architecture_students = [10, 12, 15, 22, 25, 31, 37, 41, 45, 48, 55, 60, 65, 75, 80, 85, 90, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 185, 187, 190, 195, 200, 210, 215, 220]\nprivate_architecture_students = [9, 11, 14, 20, 23, 29, 33, 38, 42, 48, 53, 59, 64, 70, 75, 78, 81, 87, 92, 98, 102, 105, 108, 114, 118, 121, 124, 128, 132, 136, 139, 143, 148, 153, 155, 159, 161, 166, 169, 172, 173]\n\nplt.figure(figsize=(15,10))\n\n# Plotting line charts\nplt.plot(years, public_architecture_students, color='#fa0d06', marker='o', label='Public University')\nplt.plot(years, private_architecture_students, color='#1d9458', marker='o', label='Private University')\n\nplt.title('Architecture Students in Public and Private Universities from 1980 to 2020')\nplt.xlabel('Year')\nplt.ylabel('Number of Architecture Students (In Thousands)')\nplt.legend()\n\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/68.png')\nplt.show()\n```\nChoices:['Public University', 'Private University', 'Both increased at the same rate', 'Cannot determine from the chart']\nStudent's Response:Public University\n",
    "Question Text:\nWhich hobby has seen a consistent increase in hours spent per week over the years, according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare Data\nyears = list(range(2010, 2021))\nreading_hours = [6, 7, 9, 8, 10, 11, 12, 14, 15, 16, 17]\ngaming_hours = [10, 11, 11, 13, 14, 13, 13, 14, 15, 16, 16]\nhiking_hours = [2, 3, 3, 3, 3, 4, 4, 5, 5, 7, 6]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize = (10,6))\n\n# Plotting data\nax.plot(years, reading_hours, marker = 'o', color='#2f4686', label='Reading') \nax.plot(years, gaming_hours, marker = 's', color='#f85120', label='Gaming')  \nax.plot(years, hiking_hours, marker = '*', color='green', label='Hiking') \n\n# Set labels and title\nplt.xlabel('Years')\nplt.ylabel('Hours Spent per Week')\nplt.title('Hobbies Comparison Over the Years')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/69.png')\nplt.show()\n```\nChoices:['Reading', 'Gaming', 'Hiking', 'None of the above']\nStudent's Response:Reading\n",
    "Question Text:\nWhich of the following social media platforms has the least number of users in the years 2014 and 2015 respectively?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare the data\nyears = list(range(2010, 2020))\nfacebook_users = [600, 800, 1000, 1200, 1350, 1550, 1690, 1860, 2100, 2447]\ntwitter_users = [54, 117, 185, 232, 271, 302, 317, 330, 336, 330]\ninstagram_users = [1, 10, 30, 150, 300, 400, 600, 800, 850, 1000]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot the data\nax.plot(years, facebook_users, marker='o', color=\"#997b80\", label='Facebook')\nax.plot(years, twitter_users, marker='o', color=\"#6495ed\", label='Twitter')\nax.plot(years, instagram_users, marker='o', color=\"#8a2be2\", label='Instagram')\n\n# Add labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Number of users (in millions)')\nax.set_title(\"Number of users on Social Media platforms (2010-2019)\")\n\n# Add legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/70.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Facebook', 'Twitter', 'Instagram']\nStudent's Response:Twitter\n",
    "Question Text:\nDid the temperature hit 26\u00b0C during the week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Weather data for a week\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ntemperature = [21, 24, 26, 23, 21, 20, 22]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Plot temperature over days\nax.plot(days, temperature, marker='o', linestyle='-', color='r', label='Temperature')\n\n# Set labels and title\nax.set_xlabel('Days of the Week')\nax.set_ylabel('Temperature (\u00b0C)')\nax.set_title('Weather Conditions Over a Week')\n\n# Show legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/71.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs Spanish represented in the scatter plot with more native speakers than total speakers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(12, 8))\n\n# Data\nlanguages = ['English', 'Spanish', 'Mandarin', 'Hindi', 'French']\nspeakers = [379, 460, 918, 341, 77]\nreaders = [753, 572, 1118, 615, 229]\nlearners = [1500, 460, 200, 123, 82]\n\n# Scatter plots\nplt.scatter(languages, speakers, s=50, color='blue', label='Native Speakers (millions)')\nplt.scatter(languages, readers, s=50, color='green', label='Total Speakers (millions)')\nplt.scatter(languages, learners, s=50, color='red', label='Language Learners (millions)')\n\n# Title and labels\nplt.title('Language Speakers')\nplt.xlabel('Languages')\nplt.ylabel('People (millions)')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/72.png')\nplt.close(fig)\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nIs there a direct relationship between the amount of time spent on workout and the amount of calories burnt or average heart rate, i.e., do the calories burnt and heart rate generally increase with an increase in workout time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nworkout_times = [30, 45, 60, 90, 130, 170, 200]  # Fitness workout times in minutes\ncalories_burnt = [120, 170, 320, 500, 640, 820, 970]  # Calories burnt corresponding to workout times\nheart_rate = [75, 85, 112, 125, 137, 145, 158]  # Average heart rate during the workout\n\n# Create figure\nplt.figure(figsize=(10, 6))  \n\n# Create scatter plots\nplt.scatter(workout_times, calories_burnt, marker='o', color='r', label='Calories Burnt')\nplt.scatter(workout_times, heart_rate, marker='x', color='b', label='Average Heart Rate')\n\n# Set graph title and labels\nplt.title('Fitness: Workout Time vs Calories Burnt and Heart Rate', fontsize=15)\nplt.xlabel('Workout Time (minutes)', fontsize=12)\nplt.ylabel('Calories Burnt / Ave. Heart Rate', fontsize=12)\n\n# Create legend\nplt.legend(loc='upper left', fontsize=10)\n\n# Save the graph \nplt.savefig('line_charts/line_charts_visual_linguistic/train/73.png')  \n\n# Display the graph\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the English-speaking population exceed 400 million people before 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create the data for 4 different language populations over time\nyears = [2000, 2005, 2010, 2015, 2020]\nenglish_population = [350, 370, 390, 405, 420]\nspanish_population = [310, 330, 355, 380, 405]\nchinese_population = [900, 910, 920, 925, 930]\nhindi_population = [310, 325, 340, 360, 380]\n\n# Set the figure size\nplt.figure(figsize=(10, 8))\n\n# Make the line plots\nplt.plot(years, english_population, marker='o', color='#badd7f', label='English')\nplt.plot(years, spanish_population, marker='o', color='#2e127d', label='Spanish')\nplt.plot(years, chinese_population, marker='o', color='#2367e1', label='Chinese')\nplt.plot(years, hindi_population, marker='o', color='#3cc504', label='Hindi')\n\n# Add labels, title, and legend\nplt.xlabel('Years')\nplt.ylabel('Population (in millions)')\nplt.title('Population of Language Speakers Over Time')\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/74.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the book sales increase every year from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for plotting\nyears = list(range(2000, 2011))\nbook_sales = [250, 300, 320, 450, 500, 520, 550, 620, 650, 690, 720]\n\nfig, ax = plt.subplots(figsize=(10, 8))\n\nax.plot(years, book_sales, marker='o', label='Book Sales')\n\nax.set(xlabel='Years', ylabel='Book Sales (in thousands)',\n       title='Book Sales from 2000 to 2010')\nax.grid()\n\n# Place a legend to the right of this smaller subplot.\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/75.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the population of Lions in 2020 greater than the population of Lions in 2010 according to the plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data\nanimal_count_in_2010 = [50, 60, 120, 30, 40, 80, 90]\nanimal_count_in_2020 = [70, 90, 150, 60, 80, 110, 130]\nanimals = ['Lions', 'Tigers', 'Bears', 'Wolves', 'Foxes', 'Lemurs', 'Kangaroos']\n\n# Increasing figure size to accommodate long labels\nplt.figure(figsize=(10,6))\n\n# Creating scatter plots\nplt.scatter(animals, animal_count_in_2010, color='#6d3b05', marker='o', label='2010 Count')\nplt.scatter(animals, animal_count_in_2020, color='#53e26d', marker='o', label='2020 Count')\n\n# Adding title, and labels\nplt.title('Animal Population Comparison: 2010 & 2020')\nplt.xlabel('Animals')\nplt.ylabel('Population Count')\nplt.legend()\n\n# Saving the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/77.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the trend of employment in the manufacturing industry from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data\nyears = list(range(2000, 2011))\nit_industry = [60, 70, 80, 85, 90, 100, 105, 110, 120, 130, 140]\nmanufacturing_industry = [80, 85, 90, 100, 110, 105, 100, 95, 85, 80, 75]\nservice_industry = [70, 75, 80, 85, 90, 95, 95, 100, 105, 110, 115]\n\n# Plotting the lines\nplt.figure(figsize=(10, 6))\nplt.plot(years, it_industry, color='#1d34a0', marker='o', label='IT industry')\nplt.plot(years, manufacturing_industry, color='green', marker='o', label='Manufacturing industry')\nplt.plot(years, service_industry, color='red', marker='o', label='Service Industry')\n\n# Adding details\nplt.title('Employment Trend: 2000-2010')\nplt.xlabel('Year')\nplt.ylabel('Number of People Employed (in thousands)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/78.png')\n\nplt.show()\n```\nChoices:['Increasing', 'Decreasing', 'Constant', 'Fluctuating']\nStudent's Response:Decreasing\n",
    "Question Text:\nBased on the scatter plot, in which year was the difference in GDP between country A and country B the smallest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of GDP for country A and B (in billions)\ngdp_A = [500, 550, 600, 650, 700, 750]\ngdp_B = [600, 610, 620, 630, 640, 650]\n\n# Years for the x-axis\nyears = [2015, 2016, 2017, 2018, 2019, 2020]\n\n# create a figure and axis\nfig, ax = plt.subplots(figsize=[10,5])\n\n# scatter plot for country A\nax.scatter(years, gdp_A, color='#d23a1d', \n           marker='o', label=\"Country A's GDP\")\n\n# scatter plot for country B\nax.scatter(years, gdp_B, color='blue', \n           marker='^', label=\"Country B's GDP\")\n\n# set labels and title\nax.set_xlabel(\"Years\")\nax.set_ylabel(\"GDP (in billions)\")\nax.set_title(\"GDP comparison of Country A and Country B (2015 - 2020)\")\nax.legend()\n\n# saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/80.png')\n\nplt.show()\n```\nChoices:[2015, 2016, 2017, 2018, 2019, 2020]\nStudent's Response:2020\n",
    "Question Text:\nHas the number of tuna catches (in thousands) been at least 15 every year from 2010-2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nyears = list(range(2010,2021))\nsalmon = [10,20,25,15,19,23,25,22,24,27,30]\ntuna = [15,18,22,24,25,27,29,31,33,35,37]\nshrimp = [20,25,30,35,40,45,50,55,60,65,70]\nlobster = [22,24,25,26,27,28,30,32,33,34,35]\ncrab = [15, 16, 17, 18, 19, 20, 21, 22, 23, 24,25]\n\n# Size of the figure\nplt.figure(figsize=[10,5])\n\n# Plot series\nplt.plot(years, salmon, color = '#a39922', marker = 'o', label = 'Salmon catches')\nplt.plot(years, tuna, color = '#beded2', marker = 's', label = 'Tuna catches')\nplt.plot(years, shrimp, color = '#3b154b', marker = '+', label = 'Shrimp catches')\nplt.plot(years, lobster, color = '#1f77b4', marker = 'x', label = 'Lobster catches')\nplt.plot(years, crab, color = '#ff7f0e', marker = 'd', label = 'Crab catches')\n\n# Chart title and labels\nplt.title('Fishing catches over years 2010 - 2020')\nplt.xlabel('Year')\nplt.ylabel('Number of catches (in thousands)')\n\n# Legend\nplt.legend(loc= 'upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/81.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the average global temperature in \u00b0C for the year 2005?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for Global Warming topic\nyears = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\naverage_global_temp = [14.6, 14.52, 14.63, 14.61, 14.57, 14.62, 14.63, 14.69, 14.61, 14.64, 14.69, 14.61, 14.67, 14.68, 14.74, 14.73, 14.8, 14.75, 14.77, 14.79, 14.8]\n\nplt.figure(figsize=(12,6))\n\n# Line chart\nplt.plot(years, average_global_temp, marker='o', label= 'Average Global Temp')\nplt.xlabel('Year')\nplt.ylabel('Average Global Temp (\u00b0C)')\nplt.title('Global Warming: Average Global Temperature 2000-2020')\nplt.legend(loc='upper left')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/82.png')\nplt.show()\n```\nChoices:[14.52, 14.57, 14.62, 14.67]\nStudent's Response:14.62\n",
    "Question Text:\nDoes the population of Fish increase consistently from January through May?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nbirds = [30, 33, 31, 39, 41]\nmammals = [43, 40, 45, 38, 47]\nreptiles = [30, 28, 27, 32, 29]\nfish = [71, 70, 68, 69, 73]\ninsects = [103, 90, 110, 100, 105]\n\nx = ['Jan', 'Feb', 'Mar', 'Apr', 'May']\n\nplt.figure(figsize=(10,5))\n\nplt.scatter(x, birds, color='#8a266d', marker='o', label='Birds')\nplt.scatter(x, mammals, color='blue', marker='v', label='Mammals')\nplt.scatter(x, reptiles, color='green', marker='s', label='Reptiles')\nplt.scatter(x, fish, color='yellow', marker='p', label='Fish')\nplt.scatter(x, insects, color='red', marker='D', label='Insects')\n\nplt.title('Population of Animals')\nplt.xlabel('Months')\nplt.ylabel('Population')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/83.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhat was the maximum number of fruits consumed on a day within the week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specified series\ndays = [1, 2, 3, 4, 5, 6, 7]\nfruits = [2, 3, 3, 4, 2, 5, 4]\nvegetables = [3, 2, 5, 4, 3, 3, 5]\n\n# Creating the figure and the axes\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plotting the lines\nax.scatter(days, fruits, c='#a7797a', marker='o', label='Fruits')\nax.scatter(days, vegetables, c='#4B0082', marker='v', label='Vegetables')\n\n# Setting the labels and title\nax.set_xlabel('Days')\nax.set_ylabel('Number of Consumed Items')\nax.set_title('Food Consumption Over a Week')\nax.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/84.png')\nplt.show()\n```\nChoices:[2, 3, 4, 5, 6]\nStudent's Response:5.\n",
    "Question Text:\nDuring which year was the forested area maximum compared to both land area and agricultural land?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# 3 series of data\nLandArea = [100, 120, 170, 150, 200]\nForestedArea = [60, 70, 110, 85, 150]\nAgriculturalLand = [30, 40, 45, 60, 50]\n\n# Creating the scatter plot\nplt.figure(figsize=(10, 5))\nplt.scatter(range(len(LandArea)), LandArea, c='#e7aad2', label='Land Area (In thousands of sq miles)')\nplt.scatter(range(len(ForestedArea)), ForestedArea, c='#fa01c3', label='Forested Area (In thousands of sq miles)')\nplt.scatter(range(len(AgriculturalLand)), AgriculturalLand, c='b', label='Agricultural Land (In thousands of sq miles)')\n\n# Setting labels and title\nplt.title('Land Utilization Over 5 Years')\nplt.xlabel('Year (Starting from 0 as the base year)')\nplt.ylabel('Area (In thousands of sq miles)')\nplt.legend()\n\n# Saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/85.png')\nplt.show()\n```\nChoices:['Year 0', 'Year 1', 'Year 2', 'Year 3', 'Year 4']\nStudent's Response:Year 4\n",
    "Question Text:\nWhat was the trend of the Forest Land area from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = range(2000, 2011)\nforest_land = [10, 12, 15, 17, 19, 20, 23, 26, 30, 32, 35]\nagricultural_land = [30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.plot(years, forest_land, marker='o', linestyle='-', color='g', label='Forest Land')\nax.plot(years, agricultural_land, marker='x', linestyle='--', color='r', label='Agricultural Land')\n\n# Setup labels and title\nax.set_xlabel(\"Year\")\nax.set_ylabel(\"Land Area (Million sq. km)\")\nax.set_title(\"Forest and Agricultural Land Area Trends from 2000 to 2010\")\n\n# Add the legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/86.png')\n\nplt.show()\n```\nChoices:['Increasing', 'Decreasing', 'Constant', 'Can not determine']\nStudent's Response:'Increasing'\n",
    "Question Text:\nDid the temperature of City 1 and City 3 go lower than 30 degree Celsius during the week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating dataset\ndays = [1, 2, 3, 4, 5, 6, 7]\ntemp_City1 = [35, 34, 33, 31, 28, 26, 27]\ntemp_City2 = [30, 29, 33, 35, 37, 40, 38]\ntemp_City3 = [33, 35, 34, 30, 28, 27, 26]\ntemp_City4 = [25, 23, 27, 30, 32, 35, 33]\ntemp_City5 = [40, 38, 36, 34, 32, 31, 29]\n\n# Creating plot\nplt.figure(figsize=(10,6))\nplt.scatter(days, temp_City1, color ='r', label='City1')\nplt.scatter(days, temp_City2, color ='b', label='City2')\nplt.scatter(days, temp_City3, color ='g', label='City3')\nplt.scatter(days, temp_City4, color ='y', label='City4')\nplt.scatter(days, temp_City5, color ='m', label='City5')\n\nplt.xlabel('Days of the week')\nplt.ylabel('Temperature in Celsius')\n\n# Creating legend\nplt.legend(loc='upper right')\n\n# Add title\nplt.title(\"Weather : Temperature variation of 5 cities over a week\")\n\n# show the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/87.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhat is the year with the highest car sales according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ncar_sales = [5.6, 5.9, 6.2, 6.7, 7.2, 7.9, 8.5, 9.0, 8.9, 10.0, 6.5]\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, car_sales, marker='o', label='Car Sales')\nplt.title('Car Sales Over Time')\nplt.xlabel('Year')\nplt.ylabel('Sales (millions)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/89.png')\n\nplt.show()\n```\nChoices:[2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2019, 2020]\nStudent's Response:2019\n",
    "Question Text:\nDid the number of deaths from heart disease in the given depiction increase each year from 2010 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nyears = list(range(2010,2020))\nheart_disease_deaths = [600000, 610000, 620000, 630000, 640000, 650000, 660000, 670000, 680000, 690000]\ncancer_deaths = [560000, 575000, 590000, 605000, 620000, 635000, 650000, 665000, 680000, 695000]\nstroke_deaths = [140000, 145000, 150000, 155000, 160000, 165000, 170000, 175000, 180000, 185000]\ndiabetes_deaths = [75000, 80000, 85000, 90000, 95000, 100000, 105000, 110000, 115000, 120000]\n\n# Create lines for each data series\nplt.figure(figsize=[15,10])\nplt.plot(years, heart_disease_deaths, color='#6fe92b', marker='o', label='Heart Disease Deaths')\nplt.plot(years, cancer_deaths, color='r', marker='o', label='Cancer Deaths')\nplt.plot(years, stroke_deaths, color='b', marker='o', label='Stroke Deaths')\nplt.plot(years, diabetes_deaths, color='y', marker='o', label='Diabetes Deaths')\n\nplt.title('Health Topic: Number of Deaths from Diseases Over Years')\nplt.xlabel('Year')\nplt.ylabel('Number of Deaths')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/91.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the scatter plot, which subject does the student 3 score the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\n\nmaths_scores = [85,88,75,66,88,85,90,71,73,79]\nscience_scores = [91,92,70,71,89,90,82,68,77,82]\nenglish_scores = [78,78,72,71,82,85,78,75,72,76]\nhistory_scores = [83,85,78,76,86,85,88,78,76,86]\n\nstudents = range(1, 11)\n\n# Create a figure of size 8x6 inches, 80 dots per inch\nplt.figure(figsize=(8, 6), dpi=80)\n\n# Create scatter plot\nplt.scatter(students, maths_scores, color='blue', marker='o', label='Maths')\nplt.scatter(students, science_scores, color='green', marker='o', label='Science')\nplt.scatter(students, english_scores, color='red', marker='o', label='English')\nplt.scatter(students, history_scores, color='purple', marker='o', label='History')\n\n# Label the axes and title\nplt.xlabel('Student')\nplt.ylabel('Scores')\nplt.title('Scores of Students in different subjects')\n\n# Add a legend\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/92.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Maths', 'Science', 'English', 'History']\nStudent's Response:'Science'\n",
    "Question Text:\nWhich type of natural disaster had shown a steady increase over the years from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = list(range(2000, 2011))\nearthquakes = [15, 18, 22, 28, 31, 36, 39, 43, 47, 52, 59]\nfloods = [35, 40, 42, 51, 55, 60, 63, 67, 73, 80, 86]\nwildfires = [5,7,8,11,13,16,21,22,24,27,29]\n\n# create the line chart\nplt.figure(figsize=(10,5))\nplt.plot(years, earthquakes, color='#cb5efb', marker='o', label='Earthquakes')\nplt.plot(years, floods, color='#5fd82f', marker='s', label='Floods')\nplt.plot(years, wildfires, color='#aa9cbc', marker='^', label='Wildfires')\n\n# set the labels and the title\nplt.xlabel('Year')\nplt.ylabel('Number of Natural Disasters')\nplt.title('Natural Disasters Over the Years')\nplt.xticks(years, rotation=30)\n\n# show the legend\nplt.legend()\n\n# save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/93.png')\nplt.show()\n```\nChoices:['Earthquakes', 'Floods', 'Wildfires']\nStudent's Response:Wildfires\n",
    "Question Text:\nWhat is the sales value (in $1000) for Electronics in month 5?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Declare Data values \nx = [1,2,3,4,5,6,7,8,9,10]\ny1 = [5,3,9,1,2,7,8,3,6,7]\ny2 = [4,1,8,2,6,4,1,5,7,4]\ny3 = [6,2,7,3,5,4,6,8,7,5]\n\n# Create figure and axis objects \nfig, ax = plt.subplots(figsize=(10,7))\n\n# Create scatter plots for each series\nax.scatter(x, y1, color = '#95f566', marker='o', label = 'Electronics Sales')\nax.scatter(x, y2, color = '#2ca02c', marker='s', label = 'Clothing Sales')\nax.scatter(x, y3, color = '#d62728', marker='^', label = 'Food Sales')\n\n# Add title and labels\nax.set_title('Retail Sales')\nax.set_xlabel('Months')\nax.set_ylabel('Sales in $1000')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/95.png')\n\nplt.show()\n```\nChoices:[5, 7, 2, 4]\nStudent's Response:2.\n",
    "Question Text:\nWhich city had the smallest increase in population over the 5 years? \n\nChoices:\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2016, 2017, 2018, 2019, 2020]\ncity1_population = [2.9, 3.1, 3.3, 3.4, 3.5]\ncity2_population = [1.7, 1.8, 1.9, 2.0, 2.1]\ncity3_population = [1.0, 1.1, 1.2, 1.3, 1.4]\n\nplt.figure(figsize=(10, 8))\n\nplt.plot(years, city1_population, color='#c70ad6', marker='o', label='City 1')\nplt.plot(years, city2_population, color='g', marker='o', label='City 2')\nplt.plot(years, city3_population, color='r', marker='o', label='City 3')\n\nplt.xlabel('Years', fontsize=14)\nplt.ylabel('Population (in millions)', fontsize=14)\nplt.title('Population Increase Over Years', fontsize=16)\nplt.grid()\nplt.legend()\nplt.yticks([1, 2, 3, 4, 5])\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/96.png')\nplt.show()\n```\nChoices:['City 1', 'City 2', 'City 3']\nStudent's Response:'City 2' and 'City 3' has the smallest increase in population over the 5 years.\n",
    "Question Text:\nDid the Healthcare Expenditure exceed Medicine Sales every year from 2000 to 2020 inclusive?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Data\nyears = list(range(2000, 2021))\nmedicine_sales = [5, 10, 12, 17, 21, 25, 30, 36, 40, 45, 50, 55, 60, 70, 80, 82, 85, 88, 92, 94, 99]\nresearch_funding = [2, 4, 5, 6, 8, 9, 9, 10, 12, 15, 16, 18, 19, 20, 23, 22, 26, 29, 32, 35, 38]\nhealthcare_expenditure = [3, 5, 6, 7, 9, 10, 13, 14, 17, 21, 23, 25, 27, 27, 29, 31, 35, 40, 43, 46, 50]\nnew_diseases = [1, 2, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 10, 10, 11, 12, 12, 12, 14, 15, 15]\n\n# Create figure and plot space\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Add lines\nax.plot(years, medicine_sales, marker='o', color='#7f4b2e', label='Medicine Sales ($B)')\nax.plot(years, research_funding, marker='o', color='#93d84f', label='Research Funding ($B)')\nax.plot(years, healthcare_expenditure, marker='o', color='blue', label='Healthcare Expenditure ($B)')\nax.plot(years, new_diseases, marker='o', color='purple', label='New Diseases')\n\n# Set plot title and labels\nax.set(xlabel=\"Years\", ylabel=\"Billions of Dollars / Number of Diseases\",\n       title=\"Medicine Sales, Research Funding, Healthcare Expenditure And New Diseases Over the Years\")\n\n# Add legend\nax.legend()\n\n# Ensure the directories to save the image exists\nos.makedirs('line_charts/line_charts_visual_linguistic/train/', exist_ok=True)\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/98.png')\n\n# Show plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat type of architecture had the most structures built in the year 1900?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for each series\nyears = list(range(1900, 2000, 10))\nclassical = [150, 160, 120, 100, 70, 50, 40, 35, 30, 25]\nmodern = [0, 10, 50, 100, 150, 200, 250, 300, 350, 400]\npost_modern = [0, 0, 0, 0, 10, 50, 100, 150, 200, 250]\ncontemporary = [0, 0, 0, 0, 0, 10, 50, 100, 150, 200]\n\n# Create figure and plot\nplt.figure(figsize=(10, 6))\nplt.scatter(years, classical, c='#9f77b5', marker='o', label='Classical')\nplt.scatter(years, modern, c='#02ce72', marker='o', label='Modern')\nplt.scatter(years, post_modern, c='#872cd2', marker='o', label='Post Modern')\nplt.scatter(years, contemporary, c='#000000', marker='o', label='Contemporary')\n\n# Axis and labels\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('No. of Structures', fontsize=12)\nplt.title('Architecture over the years', fontsize=16)\n\n# Legends\nplt.legend(loc='upper left')\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/99.png')\n\nplt.show()\n```\nChoices:['Classical', 'Modern', 'Post Modern', 'Contemporary']\nStudent's Response:Classical\n",
    "Question Text:\nWas the attendance for 'New Year' festival greatest in year 5 as compared to the previous four years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfestivals = ['New Year', 'Easter', 'Summer Fest', 'Halloween', 'Christmas']\nattendance = [[1200, 1500, 1600, 1400, 1300], [1000, 1100, 1300, 1200, 1100], [2000, 2100, 2200, 2300, 2100], [1000, 900, 850, 800, 700], [3000, 3200, 3100, 2900, 3100]]\ncolors = ['#deeb28', '#e9349b', '#1e81de', '#999cbe', '#6120cf']\nmarker = ['o', 's', '^', 'd', '*']\n\n# setting the figure size\nplt.figure(figsize=(10, 5))\n\nfor i in range(5):\n    plt.plot(festivals, attendance[i], marker=marker[i], color=colors[i])\n\nplt.xlabel(\"Festivals\")\nplt.ylabel(\"Attendance over years\")\nplt.grid()\nplt.title(\"Attendance of different festivals over years\")\nplt.legend(festivals)\n\n# saving the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/100.png')\n\n# closing the plot\nplt.close()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes the diagram show that the popularity of Java increased more than Python from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\npython_programmers = [10, 20, 15, 12, 8]\njava_programmers = [11, 19, 13, 15, 9]\nruby_programmers = [8, 15, 14, 13, 10]\njavascript_programmers = [15, 22, 20, 17, 14]\ncsharp_programmers = [9, 16, 19, 11, 7]\n\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=[10,8])\n\nplt.plot(years, python_programmers, marker='o', label='Python')\nplt.plot(years, java_programmers, marker='o', label='Java')\nplt.plot(years, ruby_programmers, marker='o', label='Ruby')\nplt.plot(years, javascript_programmers, marker='o', label='Javascript')\nplt.plot(years, csharp_programmers, marker='o', label='C#')\n\nplt.title('Popularity of Languages Over the Years')\nplt.xlabel('Year')\nplt.ylabel('Number of Users (In Thousands)')\nplt.legend()\n\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/101.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid Artificial Intelligence have a higher percentage growth than Blockchain in the year 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Simulated data\nyears = list(range(2000, 2011))\nAI = [1, 2, 4, 6, 9, 15, 25, 40, 60, 80, 95]\nblockchain = [0, 0, 1, 2, 3, 5, 9, 15, 25, 37, 50]\ncloud_computing = [0, 1, 2, 5, 9, 16, 26, 40, 60, 75, 90]\nbig_data = [0, 0, 0, 1, 2, 4, 8, 14, 24, 35, 52]\n\nplt.figure(figsize=(12, 6))\n\nplt.plot(years, AI, color='#bdd03e', marker='o', linewidth=2, label='Artificial Intelligence')\nplt.plot(years, blockchain, color='#d8b99c', marker='o', linewidth=2, label='Blockchain')\nplt.plot(years, cloud_computing, color='#445895', marker='o', linewidth=2, label='Cloud Computing')\nplt.plot(years, big_data, color='#415c3a', marker='o', linewidth=2, label='Big Data')\n\nplt.title('Trends in Technology')\nplt.xlabel('Years')\nplt.ylabel('% Increase')\nplt.legend(loc='upper left')\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/102.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn what year did the energy generated by renewables surpass the energy generated by coal?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2020))\ncoal = [45.2, 46.6, 47.4, 47.2, 46.2, 45.0, 43.9, 42.8, 41.8, 40.6, 39.6, 38.3, 36.7, 35.4, 33.9, 32.6, 31.3, 30.1, 28.7, 27.4]\nrenewables = [11.9, 12.6, 13.2, 13.9, 14.7, 15.4, 16.1, 16.8, 17.8, 18.7, 19.5, 20.4, 21.2, 22.2, 23.1, 24.2, 25.1, 26.3, 27.3, 28.4]\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, coal, color='#b1997a', marker='o', label='Coal')\nplt.plot(years, renewables, color='green', marker='o', label='Renewables')\n\nplt.title(\"Energy Sources Evolution from 2000 to 2019\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Energy Source in Quads\")\nplt.legend()\nplt.grid()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/103.png')\nplt.show()\n```\nChoices:['2015', '2019', '2020', '2010']\nStudent's Response:'2019'\n",
    "Question Text:\nWhat is the month at which Menswear sales reached its peak in 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nMenswear = [50, 60, 45, 75, 60, 70, 80, 76, 70, 88, 95, 100]\n\nplt.figure(figsize = (10, 7))\n\nplt.plot(Months, Menswear, color = '#3b850f', marker = 'o')\n\nplt.title('Clothes sale per month 2021')\nplt.xlabel('Months')\nplt.ylabel('Number of clothes sold (in thousands)')\nplt.grid()\nplt.legend(['Menswear'])\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/105.png')\nplt.show()\n```\nChoices:['January', 'June', 'December', 'July']\nStudent's Response:December\n",
    "Question Text:\nBased on the scatter plot, which dog has the highest weight when they are 10 years old?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ndog_ages = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ndog1_weights = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]\ndog2_weights = [6, 12, 18, 24, 30, 36, 42, 48, 54, 60]\ndog3_weights = [7, 14, 21, 28, 35, 42, 49, 56, 63, 70]\n\n# Create Figure\nplt.figure(figsize=(10, 8))\n\n# Plotting \nplt.scatter(dog_ages, dog1_weights, color='#44d554', marker='o', label='Dog 1')\nplt.scatter(dog_ages, dog2_weights, color='#d6cd62', marker='v', label='Dog 2')\nplt.scatter(dog_ages, dog3_weights, color='blue', marker='s', label='Dog 3')\n\n# Title, labels, legend\nplt.title('Dog Weights Over Time')\nplt.xlabel('Age (Years)')\nplt.ylabel('Weight (Kg)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/106.png')\n\nplt.show()\n```\nChoices:['Dog 1', 'Dog 2', 'Dog 3']\nStudent's Response:Dog 3\n",
    "Question Text:\nWas the sales of tablets lower than the sales of smartphones in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data sets\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nsales_computer = [100, 150, 170, 185, 210, 250, 280, 320, 370, 420, 500]\nsales_smartphone = [50, 80, 100, 130, 180, 250, 330, 420, 530, 610, 700]\nsales_tablet = [0, 10, 20, 35, 55, 80, 110, 150, 200, 260, 330]\n\n# Increasing the figure size\nplt.figure(figsize=[10,8])\n\n# Plotting the lines\nplt.plot(years, sales_computer, marker='o', label='Computer Sales')\nplt.plot(years, sales_smartphone, marker='o', label='Smartphone Sales')\nplt.plot(years, sales_tablet, marker='o', label='Tablet Sales')\n\n# Adding labels and legend\nplt.xlabel('Years')\nplt.ylabel('Sales (in thousands)')\nplt.title('Sales of Technology Devices over the Years')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/108.png')\n\n# Displaying the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year did Author 2 sell more books than Author 1?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\nauthor1_sales = [15, 17, 19, 21, 25, 30, 37, 40, 47, 50, 58]\nauthor2_sales = [10, 14, 18, 23, 26, 33, 35, 40, 44, 48, 55]\n\n# Create the scatter plot\nplt.figure(figsize=[10,8])\nplt.scatter(years, author1_sales, color='#fd6357', marker='o', label='Author 1')\nplt.scatter(years, author2_sales, color='blue', marker='x', label='Author 2')\n\n# Labels and legends\nplt.title('Number of Books Sold by Two Authors (2000-2010)', fontsize=16)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Number of Books Sold (in millions)', fontsize=14)\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/109.png')\nplt.show()\n```\nChoices:['2000', '2003', '2006', 'None of the above']\nStudent's Response:\"None of the above\"\n",
    "Question Text:\nDid the workout duration decrease on day 3 in comparison to day 2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating data\ndays = list(range(1,31))\nworkout_minutes = [30, 45, 30, 20, 45, 50, 90, 30, 50, 60, 90, 75, 30, 30, 45, 30, 45, 40, 30, 45, 70, 30, 30, 30, 45, 30, 60, 40, 80, 60]\n\n# Creating the plot\nplt.figure(figsize=(10,7))\n\nplt.plot(days, workout_minutes, label='Workout Minutes per Day', marker='o')\n\n# Add title and labels\nplt.title('Fitness Progress: Daily Workout Duration')\nplt.xlabel('Days of the Month')\nplt.ylabel('Workout Duration (Minutes)')\n\n# Show legend\nplt.legend()\n\n# Save plot as image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/110.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the year 2018, which bird species had the second highest population at the imaginary bird sanctuary?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\nyears = [2016, 2017, 2018, 2019, 2020]\nbird_species = {'Pigeons': [560, 600, 610, 620, 675],\n                'Sparrows': [700, 780, 790, 800, 815],\n                'Robins': [525, 540, 545, 550, 590],\n                'Blue Jays': [460, 520, 525, 530, 560],\n                'Finches': [350, 360, 385, 400, 420]}\n\n# Create line chart\nplt.figure(figsize=(10, 6))\nfor bird, population in bird_species.items():\n    plt.plot(years, population, marker='o', label=bird)\n\nplt.xlabel('Years')\nplt.ylabel('Population')\nplt.title('Bird species comparison over the years in an imaginary bird sanctuary')\nplt.legend(loc='upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/111.png')\nplt.show()\n```\nChoices:['Pigeons', 'Sparrows', 'Robins', 'Blue Jays', 'Finches']\nStudent's Response:Pigeons\n",
    "Question Text:\nWhat type of architecture experienced an increase in the number of buildings between 2000 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# categories\nyears = [1990, 2000, 2010, 2020]\n\n# data\nclassicalArch = [20,25,21,20]\nmodernArch = [30,32,33,35]\npostModernArch = [20,15,14,18]\ndeconstructivistArch = [30,28,32,27]\n\nplt.figure(figsize=[10, 5])\n\n# plot line charts\nplt.plot(years, classicalArch, marker='o', color='#d88caf', label=\"Classical Architecture\")\nplt.plot(years, modernArch, marker='o', color='#5c6936', label=\"Modern Architecture\")\nplt.plot(years, postModernArch, marker='o', color='#b9e239', label=\"Post-Modern Architecture\")\nplt.plot(years, deconstructivistArch, marker='o', color='#1b0715', label=\"Deconstructivist Architecture\")\n\n# label x-axis, y-axis and the whole graph\nplt.xlabel(\"Years\")\nplt.ylabel(\"Number of buildings (in thousands)\")\nplt.title(\"Number of Architecture buildings over years\")\n\n# display legend\nplt.legend()\n\n# save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/112.png')\n\nplt.show()\n```\nChoices:['Classical Architecture', 'Modern Architecture', 'Post-Modern Architecture', 'Deconstructivist Architecture']\nStudent's Response:'Modern Architecture', 'Post-Modern Architecture'\n",
    "Question Text:\nIs the average price of houses in Phoenix higher than in Houston?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncities = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix']\navg_prices = [800000, 750000, 400000, 350000, 300000]\nnumber_of_houses = [300000, 400000, 200000, 150000, 150000]\npopulation = [8.4e6, 4e6, 2.7e6, 2.3e6, 1.7e6]\n\n# Scatter plot\nfig, ax = plt.subplots(figsize=(10, 6))\n\nscatter1 = ax.scatter(cities, avg_prices, color='#368559', marker='o', label='Average Prices')\nscatter2 = ax.scatter(cities, number_of_houses, color='blue', marker='v', label='Number Of Houses')\nscatter3 = ax.scatter(cities, population, color='red', marker='s', label='Population')\n\n# Title and labels\nplt.title('Housing statistics in major US cities', fontsize=14)\nplt.xlabel('Cities', fontsize=12)\nplt.ylabel('Value', fontsize=12)\n\n# Legend\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/113.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the minimum income observed across all three years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nincome_2019 = [48000, 56000, 71000, 85000, 98000]\nincome_2020 = [50000, 59000, 75000, 90000, 100000]\nincome_2021 = [52000, 62000, 79000, 95000, 102000]\n\n# corresponding X axis values\nyears = [2015, 2016, 2017, 2018, 2019]\n\n# create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# plot each series\nax.scatter(years, income_2019, color='r', marker='o', label='Income 2019')\nax.scatter(years, income_2020, color='b', marker='^', label='Income 2020')\nax.scatter(years, income_2021, color='g', marker='s', label='Income 2021')\n\n# set title and labels\nax.set_title('Yearly Income')\nax.set_xlabel('Years')\nax.set_ylabel('Income(1000 $)')\n\n# add a legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/114.png')\n\nplt.show()\n```\nChoices:[48000, 52000, 50000]\nStudent's Response:48000\n",
    "Question Text:\nIs the severity of air pollution estimated to be higher than that of global warming in 2025 based on the graph?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nglobal_warming = [0.6, 0.8, 1.0, 1.3, 1.5, 1.7]\nair_pollution = [70, 80, 85, 90, 95, 100]\ndeforestation = [2.6, 2.7, 2.9, 3.0, 3.3, 3.5]\nwater_pollution = [50, 53, 55, 57, 59, 60]\nyears = [2000, 2005, 2010, 2015, 2020, 2025]\n\nplt.figure(figsize=(10, 6))\n\n# Scatter plots\nplt.scatter(years, global_warming, color='#04b478', marker='o', label='Global Warming')\nplt.scatter(years, air_pollution, color='#a40b78', marker='^', label='Air Pollution')\nplt.scatter(years, deforestation, color='#0b63b4', marker='s', label='Deforestation')\nplt.scatter(years, water_pollution, color='#0bb427', marker='*', label='Water Pollution')\n\n# Labels and title\nplt.title('Environmental Issues')\nplt.xlabel('Years')\nplt.ylabel('Severity Index')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/115.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the football team score above 40 points more than three times during the season?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Scores achieved by a team in various sports during a season\nfootball_scores = [40, 38, 34, 42, 35, 44, 40, 36, 38, 45]\nbaseball_scores = [8, 5, 6, 7, 4, 5, 6, 7, 9, 10]\nbasketball_scores = [100, 98, 95, 102, 97, 98, 101, 96, 99, 100]\nsoccer_scores = [2, 1, 0, 1, 2, 0, 1, 2, 1, 2]\n\ngames = list(range(1, 11)) # Games played during a season\n\nplt.figure(figsize=(10, 6))\n\n# Plotting the data\nplt.scatter(games, football_scores, marker='o', label='Football')\nplt.scatter(games, baseball_scores, marker='o', label='Baseball')\nplt.scatter(games, basketball_scores, marker='o', label='Basketball')\nplt.scatter(games, soccer_scores, marker='o', label='Soccer')\n\n# Creating labels and title\nplt.xlabel('Game')\nplt.ylabel('Score')\nplt.title('Scores in Different Sports Games during a Season')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/116.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:The question asks whether the football team scored above 40 points more than three times during the season.\n",
    "Question Text:\nDid the residential and industrial property values intersect in the explored years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The data\nyears = list(range(2000, 2022))\ncommercial_values = [1.5, 1.7, 2, 2.1, 2.3, 2.5, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.1, 4.3, 4.5, 4.6, 4.8, 5, 5.2, 5.4]\nresidential_values = [1.2, 1.25, 1.3, 1.5, 1.6,1.7, 1.75,1.8,1.85,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1]\nindustrial_values = [0.9, 1.0, 1.1, 1.2, 1.3, 1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0]\n\nplt.figure(figsize=(10,6))\n\n# Create scatter plots\nplt.scatter(years, commercial_values, marker=\"o\", label='Commercial',edgecolors='r')\nplt.scatter(years, residential_values, marker=\"v\", label='Residential',edgecolors='b')\nplt.scatter(years, industrial_values, marker=\"s\", label='Industrial',edgecolors='g')\n\n# Create labels\nplt.xlabel(\"Year\")\nplt.ylabel(\"Property value (in millions)\")\nplt.title(\"Real Estate values over the years\")\nplt.legend()\nplt.grid()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/117.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:Let's examine the residential and industrial property values. For every year from 2000 to 2021, the residential property values are always higher than the corresponding industrial property values. Thus, there is no intersection point.\n",
    "Question Text:\nIn the given chart, does the population of Zebra is the highest among all animals?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specify values\nanimal_names = ['Lion', 'Tiger', 'Elephant', 'Zebra', 'Monkey']\nanimal_population = [6500, 3900, 40000, 750000, 264000]\n\n# Set figure size and plot\nplt.figure(figsize=(10, 5))\nplt.scatter(animal_names, animal_population, marker='o')\n\n# Set title and labels\nplt.title('Population of Different Animals')\nplt.xlabel('Animal Names')\nplt.ylabel('Population')\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/118.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the temperature anomaly in the year 2000?\nFigure Code:\n```\n# Required libraries\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(1980, 2021))\ntemperature_anomaly = [0.27, 0.13, 0.29, 0.26, 0.14, 0.2, 0.18, 0.33, 0.38,\n                       0.24, 0.44, 0.21, 0.24, 0.31, 0.32, 0.45, 0.33, 0.51,\n                       0.64, 0.42, 0.42, 0.55, 0.62, 0.62, 0.54, 0.68, 0.63,\n                       0.55, 0.65, 0.64, 0.72, 0.63, 0.66, 0.74, 0.87, 0.92, \n                       0.9, 0.93, 0.85, 0.99, 0.92]\n\n# Create line plot\nplt.figure(figsize=(10,6))\nplt.plot(years, temperature_anomaly, marker='o')\nplt.title('Global Warming')\nplt.xlabel('Year')\nplt.ylabel('Temperature Anomaly (\u00b0C)')\nplt.legend(['Temperature Anomaly'])\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/119.png')\nplt.show()\n\n\nAnswer: 0.42\n```\nChoices:[0.42, 0.55, 0.62, 0.64]\nStudent's Response:0.42\n",
    "Question Text:\nLooking at the line chart, in what year did the consumption of vegetables surpass the consumption of fruits for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The data for the line chart\nyears = list(range(2000, 2021))\nfruits = [12, 15, 13, 16, 18, 20, 22, 24, 25, 28, 30, 31, 34, 36, 38, 40, 42, 43, 45, 47, 50]\nveggies = [20, 30, 25, 35, 33, 36, 37, 45, 40, 42, 44, 45, 47, 48, 50, 52, 54, 56, 58, 60, 62]\ngrains = [25, 27, 29, 30, 32, 34, 35, 36, 38, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 57]\ndairy = [30, 35, 40, 45, 50, 42, 38, 40, 45, 50, 52, 54, 55, 56, 58, 60, 62, 64, 66, 68, 70]\n\n# Creating the chart\nplt.figure(figsize=(10, 7))\nplt.plot(years, fruits, color='#5357c8', marker='o', label='Fruits')\nplt.plot(years, veggies, color='green', marker='o', label='Vegetables')\nplt.plot(years, grains, color='#9b59b6', marker='o', label='Grains')\nplt.plot(years, dairy, color='#3498db', marker='o', label='Dairy')\n\n# Adding labels, title, and legend\nplt.xlabel('Years')\nplt.ylabel('Consumption in kg')\nplt.title('Food Consumption Over the Years')\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/120.png')\nplt.show()\n```\nChoices:[2000, 2001, 2002, 2003, 2004]\nStudent's Response:2001\n",
    "Question Text:\nIs the number of wildfires in 2020 greater than the number of earthquakes in 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2021))\nearthquakes = [15, 20, 17, 21, 19, 23, 17, 18, 20, 19, 22, 22, 24, 21, 22, 23, 22, 24, 26, 25, 30]\nfloods = [23, 25, 24, 26, 24, 25, 27, 29, 30, 30, 34, 32, 35, 30, 33, 32, 34, 35, 33, 36, 37]\nwildfires = [5, 7, 8, 9, 7, 6, 9, 11, 10, 9, 10, 12, 11, 13, 13, 14, 12, 15, 16, 16, 17]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,10)) \n\n# Plot data\nax.plot(years, earthquakes, marker='o', color='#9592aa', label='Earthquakes')\nax.plot(years, floods, marker='o', color='#80ba8b', label='Floods')\nax.plot(years, wildfires, marker='o', color='#2d1c8f', label='Wildfires')\n\n# Label the axes, add title and legend\nax.set_xlabel('Year')\nax.set_ylabel('Number of Natural Disasters')\nax.set_title('Number of Natural Disasters by type per year (2000-2020)')\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/121.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Asia's forest area percent increase from the year 2000 to 2004?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyear = [2000, 2001, 2002, 2003, 2004]\nnorth_america = [60, 61, 62, 63, 64]\nsouth_america = [52, 53, 54, 56, 57]\nasia = [70, 71, 73, 74, 78]\nafrica = [40, 41, 43, 45, 48]\naustralia = [61, 62, 63, 64, 67]\n\nplt.figure(figsize=(10,7))\n\nplt.scatter(year, north_america, color='#874e5b', marker='o', label='North America')\nplt.scatter(year, south_america, color='#f01f6f', marker='x', label='South America')\nplt.scatter(year, asia, color='#5b5c3a', marker='^', label='Asia')\nplt.scatter(year, africa, color='#36f134', marker='s', label='Africa')\nplt.scatter(year, australia, color='#874e5b', marker='D', label='Australia')\n\nplt.title('Change in Forestry over Time by Continent')\nplt.xlabel('Year')\nplt.ylabel('Percentage of Forest Area')\nplt.legend()\n\nplt.savefig(\"line_charts/line_charts_visual_linguistic/train/123.png\")\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the trend of English scores increasing over the years from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nyears = list(range(2000, 2021))\nmath_scores = [80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 94, 95, 96, 97, 98, 99, 100]\nscience_scores = [60, 65, 70, 75, 80, 85, 90, 92, 93, 97, 98, 99, 100, 100, 100, 100, 100, 100, 100, 100, 100]\nenglish_scores = [90, 90, 90, 91, 91, 91, 92, 92, 93, 94, 95, 96, 97, 98, 98, 98, 99, 99, 99, 99, 99]\nhistory_scores = [70, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 80, 81, 82, 83, 84, 85, 85, 85, 85]\ngeography_scores = [60, 62, 64, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 88, 89, 90]\n\n# Line chart\nplt.figure(figsize=(12, 8))\nplt.plot(years, math_scores, marker='o', color='#1c4055', label='Math')\nplt.plot(years, science_scores, marker='o', color='#4d4acb', label='Science')\nplt.plot(years, english_scores, marker='o', color='#cf4d1c', label='English')\nplt.plot(years, history_scores, marker='o', color='green', label='History')\nplt.plot(years, geography_scores, marker='o', color='purple', label='Geography')\n\n# Legends\nplt.title('Education Scores Trend (2000 - 2020)')\nplt.xlabel('Year')\nplt.ylabel('Score')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/125.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Ford have a higher sales number in 2020 than Audi?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyear = ['2016', '2017', '2018', '2019', '2020']\n\n#Car Sales in thousands\nford = [2430, 2600, 2750, 2800, 3100]\ntoyota = [2300, 2450, 2600, 2650, 2850]\nbmw = [2130, 2200, 2250, 2350, 2400]\naudi = [1500, 1650, 1700, 1800, 1950]\nhonda = [2025, 2125, 2200, 2300, 2400]\n\nplt.figure(figsize=(10,7))\n\nplt.plot(year, ford, color='#3c5bb1', marker='o', label='Ford')\nplt.plot(year, toyota, color='#2f56fc', marker='v', label='Toyota')\nplt.plot(year, bmw, color='#fbc1a6', marker='s', label='BMW')\nplt.plot(year, audi, color='#5f7077', marker='*', label='Audi')\nplt.plot(year, honda, color='green', marker='D', label='Honda')\n\nplt.title('Car sales from 2016 - 2020')\nplt.xlabel('Year')\nplt.ylabel('Cars Sold (In thousands)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/126.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhich type of plant has the highest count?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nplants = ['Rose', 'Tulip', 'Sunflower', 'Daisy', 'Lily']\ncount = [25, 15, 10, 30, 20]\n\nplt.figure(figsize=(10, 5))\n\n# Create scatter plot\nplt.scatter(plants, count, color='g', marker='o')\n\n# Labels\nplt.title('Count of Different Types of Plants')\nplt.xlabel('Type of Plant')\nplt.ylabel('Count')\n\n# Legend\nplt.legend(['Count'])\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/127.png')\n\nplt.show()\n```\nChoices:['Rose', 'Tulip', 'Sunflower', 'Daisy', 'Lily']\nStudent's Response:Daisy\n",
    "Question Text:\nDoes the data in the line chart depict that the weight of a cat increases with its age?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# cat ages\ncat_ages = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# cat weight \u2013 typically, cats gain weight as they grow older\ncat_weight = [0.5, 2.5, 3.5, 4.5, 5.2, 6.0, 6.5, 7, 7.5, 7.8, 8.0] \n\nplt.figure(figsize=(10,5))\nplt.plot(cat_ages, cat_weight, marker='o')\nplt.title('Cat Weight as Age Increases')\nplt.xlabel('Age (years)')\nplt.ylabel('Weight (kg)')\nplt.legend(['Weight'], loc='upper left')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/129.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the donations for environmental charities increase over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\neducational = [10, 15, 25, 35, 45]\nhealth = [5, 10, 15, 25, 30]\nenvironmental = [7, 14, 21, 28, 35]\nhumanitarian = [15, 20, 25, 30, 35]\n\nplt.figure(figsize=[10,8])\n\nplt.scatter(x, educational, color='#e9ffbc', marker='o', label=\"Educational Charities\")\nplt.scatter(x, health, color='#61f676', marker='o', label=\"Health Charities\")\nplt.scatter(x, environmental, color='blue', marker='o', label=\"Environmental Charities\")\nplt.scatter(x, humanitarian, color='red', marker='o', label=\"Humanitarian Charities\")\n\nplt.title(\"Donations to Different Categories of Charities Over Time\")\nplt.xlabel(\"Time (in Years)\")\nplt.ylabel(\"Donations (in $1000s)\")\nplt.legend(loc=\"upper left\")\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/130.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of fish caught higher when one spends the whole day fishing compared to half the day?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx1 = np.linspace(0,10,10)\ny1 = x1 * 2 + 5  # example data: number of fish caught if half the day is spent fishing\nx2 = np.linspace(0,10,10)\ny2 = x2 * 4 + 3  # example data: number of fish caught if the whole day is spent fishing\n\nplt.figure(figsize=(10, 5))\n\n# Scatter Plots\nplt.scatter(x1, y1, label='Half Day Fishing', color='#4c2e3a', marker='o')\nplt.scatter(x2, y2, label='Whole Day Fishing', color='b', marker='s')\n\nplt.title('Fishing Comparison')\nplt.xlabel('Time Spent (hours)')\nplt.ylabel('Fish Caught')\n\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/131.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich product had the highest sales in June?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data \nmonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nfruit_sales = [350, 312, 375, 408, 462, 542, 325, 307, 401, 456, 389, 410]\nvege_sales = [500, 450, 550, 600, 700, 800, 500, 475, 650, 700, 600, 650]\nmeat_sales = [400, 350, 425, 450, 500, 550, 400, 380, 475, 500, 450, 475]\n\n# Create line chart\nplt.figure(figsize=(15, 6))\nplt.plot(months, fruit_sales, marker='o', color='#e4aa0d', label='Fruit Sales')\nplt.plot(months, vege_sales, marker='v', color='#64f332', label='Vegetable Sales')\nplt.plot(months, meat_sales, marker='s', color='#3300e4', label='Meat Sales')\nplt.title('Food Sales Over The Year')\nplt.xlabel('Months')\nplt.ylabel('Sales (in $)')\nplt.legend(loc='best')\n\n# Save to a file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/132.png')\nplt.show()\n```\nChoices:['Fruits', 'Vegetables', 'Meats']\nStudent's Response:'Vegetables'\n",
    "Question Text:\nWhich food has the second highest consumption according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Food list\nfoods = ['Pizzas', 'Burgers', 'Hot Dogs', 'Tacos', 'Nachos']\n\n# Quantity consumed\nquantity = [75, 100, 50, 80, 70]\n\n# Figure size to avoid word overlaps\nplt.figure(figsize=(10,5))\n\n# Create line chart \nplt.plot(foods, quantity, marker='o')\n\n# Setting the labels\nplt.xlabel('Foods')\nplt.ylabel('Quantity consumed')\nplt.title('Foods Consumption')\nplt.grid(True)\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/133.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Pizzas', 'Burgers', 'Hot Dogs', 'Tacos', 'Nachos']\nStudent's Response:'Tacos'\n",
    "Question Text:\nIn which category of books, the sales have shown consistent growth over the years from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(12,6))\n\n# Series of data\nyears = list(range(2010, 2021))\nfiction_sales = [150, 200, 180, 210, 230, 250, 240, 260, 280, 300, 320]\nnon_fiction_sales = [100, 120, 140, 140, 150, 170, 190, 190, 200, 220, 250]\nbiographies_sales = [50, 70, 70, 80, 90, 80, 100, 110, 120, 130, 140]\nchildrens_books_sales = [70, 80, 90, 100, 110, 130, 130, 140, 150, 160, 180]\n\n# Plotting the lines\nax.plot(years, fiction_sales, marker='o', color='#62fc0c', label='Fiction')\nax.plot(years, non_fiction_sales, marker='o', color='#f29855', label='Non Fiction')\nax.plot(years, biographies_sales, marker='o', color='#80ba7e', label='Biographies')\nax.plot(years, childrens_books_sales, marker='o', color='#8263dc', label='Children\\'s books')\nax.set_title('Books sale over years', fontsize=16)\nax.set_xlabel('Year', fontsize=13)\nax.set_ylabel('Number of Books sold(in thousands)', fontsize=13)\nplt.grid(True)\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/134.png')\nplt.show()\n```\nChoices:['Fiction', 'Non Fiction', 'Biographies', \"Children's books\"]\nStudent's Response:'Children\\'s books'\n",
    "Question Text:\nWhat was the trend of the number of featurephone users over the course of five years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data\nsmartphone_users = [2.5, 3.2, 3.7, 4.1, 4.6] # in billions\nfeaturephone_users = [2.2, 1.9, 1.5, 1.2, 0.9] # in billions\ntablet_users = [1.0, 1.2, 1.3, 1.5, 1.7] # in billions\ndesktop_users = [1.5, 1.6, 1.6, 1.5, 1.4] # in billions\nlaptop_users = [2.0, 2.2, 2.3, 2.4, 2.5] # in billions\nyears = [2016, 2017, 2018, 2019, 2020]\n\n# Create scatter plot\nplt.figure(figsize=[10,5])\nplt.scatter(years, smartphone_users, label='Smartphone users')\nplt.scatter(years, featurephone_users, label='Featurephone users')\nplt.scatter(years, tablet_users, label='Tablet users')\nplt.scatter(years, desktop_users, label='Desktop users')\nplt.scatter(years, laptop_users, label='Laptop users')\n\n# Set labels and title\nplt.xlabel('Years')\nplt.ylabel('Number of Users (in billions)')\nplt.title('Number of Phone Users Over Five Years')\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/135.png')\nplt.show()\n```\nChoices:['It increased over five years', 'It decreased over five years', 'It remained constant', 'There is no sufficient data to infer the trend']\nStudent's Response:It decreased over five years\n",
    "Question Text:\nDid the streams for the Rock genre increase every year from 2019 to 2023?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The genre data\ngenres = ['Pop', 'Rock', 'Hip-Hop', 'Country', 'Jazz']\n\n# The series data\nstreams_2019 = [50, 60, 75, 30, 20]\nstreams_2020 = [55, 65, 80, 35, 25]\nstreams_2021 = [60, 70, 85, 40, 30]\nstreams_2022 = [65, 75, 90, 45, 35]\nstreams_2023 = [70, 80, 95, 50, 40]\n\n# Create plot\nfig, ax = plt.subplots(figsize=(10,7))\n\n# add each line to the plot\nax.plot(genres, streams_2019, marker='o', label='2019')\nax.plot(genres, streams_2020, marker='s', label='2020')\nax.plot(genres, streams_2021, marker='v', label='2021')\nax.plot(genres, streams_2022, marker='*', label='2022')\nax.plot(genres, streams_2023, marker='d', label='2023')\n\n# Set plot title and labels\nax.set_title('Music Genre Streams Over the Years')\nax.set_xlabel('Genres')\nax.set_ylabel('Streams (In Billions)')\n\n# Display legend\nax.legend()\n\n# Save to png\nplt.savefig('line_charts/line_charts_visual_linguistic/train/137.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich of the following land use types had the most increase in area from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2000, 2005, 2010, 2015, 2020]\nforest_land = [300, 280, 270, 260, 250]\nagricultural_land = [150, 180, 200, 220, 230]\nurban_land = [50, 55, 60, 70, 75]\n\n# Creating plot\nplt.figure(figsize=(10, 7))  # Setting the figure size\nplt.plot(years, forest_land, marker='o', label='Forest Land')\nplt.plot(years, agricultural_land, marker='o', label='Agricultural Land')\nplt.plot(years, urban_land, marker='o', label='Urban Land')\n\n# Setting labels and title\nplt.ylabel('Area (in million hectares)')\nplt.xlabel('Year')\nplt.title('Change in Land Use over the Years')\n\n# Adding legend\nplt.legend()\n\n# Saving the figure\nplt.savefig(\n    'line_charts/line_charts_visual_linguistic/train/138.png')\nplt.show()\n```\nChoices:['Forest Land', 'Agricultural Land', 'Urban Land']\nStudent's Response:'Agricultural Land'\n",
    "Question Text:\nDid Country 2 have a higher average years of schooling than Country 1 for any year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncountry_1 = [8.1, 8.3, 8.6, 8.8, 9.0, 9.4, 9.6, 9.9, 10.2, 10.5]\ncountry_2 = [7.4, 7.7, 8.0, 8.3, 8.6, 8.8, 9.2, 9.5, 9.8, 10.0]\nyears = list(range(2010, 2020))\n\nfig = plt.figure(figsize=(12,6))\n\nplt.plot(years, country_1, color='#004b72', marker='o', label='Country 1')\nplt.plot(years, country_2, color='red', marker='o', label='Country 2')\n\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Average Years of Schooling', fontsize=14)\nplt.title('Average Years of Schooling Completed in Two Countries Over Ten Years', fontsize=16)\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/139.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich crop had consistent production growth from 2000 to 2010 according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyear = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]\nproduction_maize = [630, 650, 670, 690, 730, 770, 790, 760, 780, 800, 820]\nproduction_soybean = [600, 610, 620, 630, 660, 690, 710, 690, 720, 730, 740]\nproduction_wheat = [560, 570, 580, 590, 610, 640, 660, 640, 670, 680, 700]\nproduction_rice = [500, 510, 520, 530, 550, 580, 600, 580, 610, 620, 630]\n\n# figure\nplt.figure(figsize=(10,5))\nplt.plot(year, production_maize, label='Maize', color='#73ad5d', marker='o')\nplt.plot(year, production_soybean, label='Soybean', color='#fbd0cf', marker='o')\nplt.plot(year, production_wheat, label='Wheat', color='#da625a', marker='o')\nplt.plot(year, production_rice, label='Rice', color='blue', marker='o')\nplt.xlabel('Year')\nplt.ylabel('Production in Millions (Metric Tonne)')\nplt.title('Agriculture Production from 2000 to 2010')\nplt.legend()\nplt.grid(True)\n\n# save\nplt.savefig('line_charts/line_charts_visual_linguistic/train/140.png')\nplt.show()\n```\nChoices:['Maize', 'Soybean', 'Wheat', 'Rice']\nStudent's Response:Maize\n",
    "Question Text:\nWhich day corresponded to a humidity of 70%?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ntemperature = [72, 75, 78, 81, 84, 86, 89]\nhumidity = [35, 45, 50, 60, 65, 70, 75]\nwind = [5, 6, 7, 8, 10, 15, 20]\nrainfall = [0, 1, 2, 2, 3, 4, 5]\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n# Generate scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(days, temperature, color='#ea781c', marker='o', label='Temperature (F)')\nplt.scatter(days, humidity, color='#a881f6', marker='*', label='Humidity (%)')\nplt.scatter(days, wind, color='#7a265b', marker='s', label='Wind (mph)')\nplt.scatter(days, rainfall, color='#674c63', marker='d', label='Rainfall (inches)')\n\n# Set labels, legend and title\nplt.xlabel('Days', fontsize=12)\nplt.ylabel('Weather Characteristics', fontsize=12)\nplt.title('Weather Overview', fontsize=15)\nplt.legend(loc='upper left')\nplt.grid(True)\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/141.png')\nplt.show()\n```\nChoices:['Saturday', 'Sunday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Monday']\nStudent's Response:'Saturday'\n",
    "Question Text:\nIn the population growth chart of four countries from 1800 to 1900, which country had the most significant population growth?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The historical events data\nyear = list(range(1800, 1901, 25))  # incremented in 25 years\naustria_population = [20057583, 22650000, 26243596, 30293172, 36523445]\nbritain_population = [33616131, 45176884, 55284343, 67114937, 79178375]\nfrance_population = [29139208, 36423471, 41902346, 48397529, 56122592]\ngermany_population = [23418296, 29684151, 34238311, 40238343, 49075902]\n\nplt.figure(figsize=(10,5))\n\nplt.plot(year, austria_population, marker='o', color='#c29418', label='Austria')\nplt.plot(year, britain_population, marker='o', color='#13930a', label='Britain')\nplt.plot(year, france_population, marker='o', color='b', label='France')\nplt.plot(year, germany_population, marker='o', color='r', label='Germany')\n\nplt.title('Historical Events: Population growth from 1800 to 1900')\nplt.xlabel('Year')\nplt.ylabel('Population')\nplt.legend(loc='upper left')\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/142.png')\nplt.show()\n```\nChoices:['Austria', 'Britain', 'France', 'Germany']\nStudent's Response:Britain\n",
    "Question Text:\nOn which day was the usage of traditional paper books the lowest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The 3 series of data to plot\nstack_of_books = [50, 75, 50, 25, 100]\ne_books = [95, 70, 60, 85, 75]\naudio_books = [55, 90, 80, 65, 85]\n\n# Plan the x and y-axis\nday = range(1, 6)\n\n# Create the scatter plot\nplt.figure(figsize=(10,7))\nplt.scatter(day, stack_of_books, marker='o', label=\"Paper Books\")\nplt.scatter(day, e_books, marker='v', label=\"E-books\")\nplt.scatter(day, audio_books, marker='s', label=\"Audio Books\")\n\n# Add title and labels\nplt.title('Books Usage Over Days')\nplt.xlabel('Day')\nplt.ylabel('Count')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/143.png')\nplt.show()\n```\nChoices:['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5']\nStudent's Response:Day 4\n",
    "Question Text:\nWhich year did the Sedan sales surpass 1000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data to plot\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ncar_sales_sedan = [500, 550, 600, 700, 750, 800, 850, 900, 950, 1000, 1200]\ncar_sales_SUV = [400, 450, 500, 550, 580, 600, 620, 650, 700, 750, 800]\n\n# create figure and axis\nfig, ax = plt.subplots()\n\n# Plotting both the lines\nax.plot(years, car_sales_sedan, marker = 'o', color = '#d45578', label='Sedan Sales')\nax.plot(years, car_sales_SUV, marker = '*', color = '#136476', label='SUV Sales')\n\n# Naming the x-axis, y-axis and the whole graph\nplt.xlabel(\"Years\") \nplt.ylabel(\"Number of Cars Sold\") \nplt.title(\"Sedan vs SUV Sales Over the Years\") \n\n# Plot legend\nax.legend()\n  \n# save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/144.png')\n\n# Show plot\nplt.show()\n```\nChoices:['2010', '2015', '2019', '2020']\nStudent's Response:'2020'\n",
    "Question Text:\nWhich charity received the highest donation in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create the data\nyears = ['2016','2017','2018','2019','2020']\ncharity_A = [10, 15, 7, 10, 12]\ncharity_B = [12, 15, 9, 14, 20]\ncharity_C = [15, 7, 10, 5, 10]\ncharity_D = [9, 2, 6, 9, 12]\ncharity_E = [7, 15, 9, 10, 6]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot the data\nax.plot(years, charity_A, label='Charity A', marker='o')\nax.plot(years, charity_B, label='Charity B', marker='o')\nax.plot(years, charity_C, label='Charity C', marker='o')\nax.plot(years, charity_D, label='Charity D', marker='o')\nax.plot(years, charity_E, label='Charity E', marker='o')\n \n# Add labels and title\nax.set_xlabel('Years')\nax.set_ylabel('Amount Donated (in $1000)')\nax.set_title('Donations to Charities Over the Years')\n \n# Add legend\nax.legend(loc='best')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/145.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Charity A', 'Charity B', 'Charity C', 'Charity D', 'Charity E']\nStudent's Response:'Charity B'\n",
    "Question Text:\nDid Antibiotic A outperform Antibiotic B continuously over the 10 days period?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ndays = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nantibiotic_a_efficiency = [62, 67, 71, 74, 77, 79, 81, 83, 85, 86]\nantibiotic_b_efficiency = [59, 63, 66, 69, 71, 74, 76, 77, 79, 80]\n\n# Increase figure size to avoid labels overlap\nplt.figure(figsize=(10, 6))\n\nplt.scatter(days, antibiotic_a_efficiency, color='b', label='Antibiotic A')\nplt.scatter(days, antibiotic_b_efficiency, color='r', label='Antibiotic B')\n\nplt.xlabel('Days of Treatment')\nplt.ylabel('Treatment Efficiency (%)')\nplt.title('Comparison of Antibiotic A and B Efficiency Over Time')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/147.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which month did the reader read the most books according to this line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data setup\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nnum_books_read = [5, 7, 9, 6, 10, 8, 12, 7, 8, 10, 9, 15]\n\n# setting the figure size\nplt.figure(figsize=(10, 8))\n\n# plot setup\nplt.plot(months, num_books_read, marker='o')\n\n# labeling\nplt.title('Number of Books Read Per Month')\nplt.xlabel('Month')\nplt.ylabel('Number of Books')\nplt.legend(['Books Read'])\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/149.png')\n```\nChoices:['January', 'April', 'July', 'December']\nStudent's Response:'December'\n",
    "Question Text:\nIn the year 2010, which technology device had the least number of users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create some data\nyears = list(range(2000, 2011))\nsmartphone_users = [120, 150, 200, 280, 420, 620, 910, 1200, 1500, 1900, 2500]\nlaptop_users = [500, 600, 700, 900, 1200, 1600, 2100, 2700, 3400, 4200, 5000]\ntablet_users = [0, 0, 0, 0, 20, 30, 50, 200, 600, 1200, 2000]\n\n# Create a Figure and an Axes with plt.subplots\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot data\nax.scatter(years, smartphone_users, label='Smartphone Users', marker='o')\nax.scatter(years, laptop_users, label='Laptop Users', marker='x')\nax.scatter(years, tablet_users, label='Tablet Users', marker='s')\n\n# Set labels and title\nax.set_xlabel('Years')\nax.set_ylabel('Users (in millions)')\nax.set_title('Number of Users of different Technology Devices over years')\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/150.png')\nplt.show()\n```\nChoices:['Smartphone', 'Laptop', 'Tablet']\nStudent's Response:'Tablet'\n",
    "Question Text:\nBased on the scatter plot, which industry has seen the most stable employment rate growth from 2015 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare data\ntech_industry = [5, 6, 7, 8, 10]\ncatering_industry = [3, 4, 6, 8, 9]\nbuilding_industry = [4, 5, 7, 9, 10]\nhealthcare_industry = [6, 7, 9, 11, 12]\nyears = [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\"]\n\n# Create fig and ax objects for better control on the plot\nfig, ax = plt.subplots(figsize=(12, 10))\n\n# Create plot for each data series\nax.scatter(years, tech_industry, color='#2fc566', marker='o', label='Tech Industry')\nax.scatter(years, catering_industry, color='#8c564b', marker='v', label='Catering Industry')\nax.scatter(years, building_industry, color='#ff7f0e', marker='s', label='Building Industry')\nax.scatter(years, healthcare_industry, color='#e377c2', marker='p', label='Healthcare Industry')\n\nplt.title('Employment rate over Time by Industry')\nplt.ylabel('Employment Rate (%)')\nplt.xlabel('Year')\n\n# Show legends\nplt.legend(loc='best')\n\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/151.png')\nplt.show()\n```\nChoices:['Tech Industry', 'Catering Industry', 'Building Industry', 'Healthcare Industry']\nStudent's Response:Tech Industry\n",
    "Question Text:\nBased on the scatter plot, how many brands using vegan materials are expected in the year 2024 according to the trend in the data?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data \nx = [1, 2, 3, 4, 5]\ny1 = [13, 15, 17, 20, 22]\ny2 = [16, 18, 21, 23, 26]\ny3 = [18, 20, 23, 25, 28]\n\nplt.figure(figsize=(10, 8))\n\n# plotting the first series with #1dbc2c as color and using circle marker\nplt.scatter(x, y1, color='#1dbc2c', marker='o', label='Brands investing in eco-friendly fashion')\n\n# plotting the second series with #db46cf as color and using triangle_up marker\nplt.scatter(x, y2, color='#db46cf', marker='^', label='Brands using recycled materials')\n\n# plotting the third series\nplt.scatter(x, y3, color='#FF8C00', marker='s', label='Brands using vegan materials')\n\nplt.title('Fashion Industry Trends')\nplt.xlabel('Years (from 2020 to 2024)')\nplt.ylabel('Number of Fashion Brands (in billions)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/152.png')\nplt.show()\n```\nChoices:['13 billion', '18 billion', '20 billion', '28 billion']\nStudent's Response:'28 billion'\n",
    "Question Text:\nDid Party 2 have the highest percentage in the public opinion polls in December?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nparty1 = [45, 47, 50, 52, 52, 48, 50, 46, 45, 47, 50, 51]\nparty2 = [46, 47, 45, 44, 44, 46, 48, 50, 52, 54, 53, 52]\nparty3 = [9, 6, 5, 4, 4, 6, 2, 4, 3, 2, 3, 2]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot data\nax.plot(months, party1, marker='o', color='#68afcf', label='Party 1')\nax.plot(months, party2, marker='o', color='#ff5733', label='Party 2')\nax.plot(months, party3, marker='o', color='#33ff57', label='Party 3')\n\n# Set the labels and the title\nax.set_xlabel('Months')\nax.set_ylabel('Percentage (%)')\nax.set_title('Public Opinion Polls')\n\n# Add a legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/153.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the sea level experience an increase over the years from 1990 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of Data\nyears = list(range(1990, 2021))\ncarbon_dioxide = [353.1, 355.6, 357.1, 358.8, 360.8, 362.6, 363.7, 366.6, 368.3, 369.5, \n                  371.1, 373.1, 375.8, 377.5, 379.8, 381.9, 383.7, 385.6, 387.4, 389.7, \n                  391.6, 393.8, 396.5, 398.6, 400.8, 403.3, 404.3, 406.5, 408.5, 410.6, 414.0]\n\nglobal_avg_temp = [14.9, 14.8, 14.9, 14.9, 15.1, 15.2, 15.2, 15.3, 15.5, 15.6, \n                   15.7, 15.6, 15.9, 15.7, 15.8, 16.0, 16.1, 16.2, 16.0, 16.2, \n                   16.4, 16.4, 16.7, 16.5, 16.8, 16.8, 16.9, 16.8, 17.1, 17.0, 17.3]\n\nsea_level_change = [0, 3.4, 6.1, 9.7, 13.6, 16.7, 19.6, 21.9, 24.8, 27.5, \n                    30.5, 33.1, 34.9, 37.7, 40.1, 42.8, 45.0, 48.2, 52.2, 56.0, \n                    58.4, 63.9, 69.2, 72.3, 76.6, 80.7, 85.2, 89.9, 93.8, 98.4, 100]\n\nice_extent = [12.5, 12.3, 12.2, 12.2, 12.1, 12.0, 12.0, 11.9, 11.8, 11.6, \n              11.6, 11.4, 11.3, 11.4, 11.3, 11.1, 11.1, 11.0, 10.9, 10.8, \n              10.7, 10.6, 10.4, 10.3, 10.2, 10.1, 9.9, 9.8, 9.8, 9.8, 9.7]\n              \nglobal_solar_irradiance = [1361, 1361.22, 1361.11, 1361.23, 1361.1, 1361.22, 1361.11, 1361.23, 1361.1, 1361.23, 1361.1, \n                           1361.22, 1361.12, 1361.25, 1361.13, 1361.23, 1361.14, 1361.26, 1361.12, 1361.24, 1361.11, \n                           1361.24, 1361.13, 1361.24, 1361.12, 1361.23, 1361.13, 1361.23, 1361.13, 1361.24, 1361.13]\n\n# Creating the plot\nplt.figure(figsize=(10,6))\nplt.plot(years, carbon_dioxide, color='#852fed', marker='o', label='CO2 Concentration (ppm)')\nplt.plot(years, global_avg_temp, color='g', marker='s', label='Global Avg Temperature (C)')\nplt.plot(years, sea_level_change, color='r', marker='p', label='Sea Level Change (mm)')\nplt.plot(years, ice_extent, color='b', marker='*', label='Ice Extent (million km^2)')\nplt.plot(years, global_solar_irradiance, color='c', marker='x', label='Global Solar Irradiance (W/m^2)')\n\n# Setting title and labels\nplt.title('Global Warming Indicators Over Time')\nplt.xlabel('Year')\nplt.ylabel('Indicator Measure')\nplt.legend(loc='best')\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/154.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the amount of Urban Land more than the Forest Land in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the plot\nland_urban = [11, 15, 17, 20, 22]\nland_rural = [33, 38, 42, 48, 52]\nland_forest = [56, 59, 62, 65, 70]\n\n# Years\nyears = [2000, 2005, 2010, 2015, 2020]\n\nplt.figure(figsize=(10, 8))  # sufficiently large figure size to avoid overlap\n\n# Scatter plot creation with defined colors and marker \nplt.scatter(years, land_urban, color='#4eed93', marker='o', label='Urban Land')\nplt.scatter(years, land_rural, color='#faff3a', marker='o', label='Rural Land')\nplt.scatter(years, land_forest, color='#4b0082', marker='o', label='Forest Land')\n\nplt.title('Land Usage Over the Years')  # Chart Title\nplt.xlabel('Year')  # X-axis Label\nplt.ylabel('Land (in million square km)')  # Y-axis Label\nplt.legend(loc='best')  # Legend\n\n# save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/155.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nWhat was the maximum Rent Price from 2010 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for housing chart\nyears = list(range(2010, 2021))\nhome_prices = [100000, 105000, 110000, 115000, 110000, 125000, 120000, 130000, 135000, 140000, 145000]\nrent_prices = [700, 720, 740, 750, 780, 800, 850, 860, 880, 900, 920]\napartment_prices = [80000, 85000, 90000, 95000, 100000, 98000, 105000, 110000, 120000, 125000, 130000]\nbuilding_materials = [50, 52, 55, 57, 60, 62, 65, 67, 70, 72, 75]\nmortgage_rates = [5.0, 5.5, 5.2, 5.1, 5.7, 5.3, 5.8, 6.0, 6.2, 6.5, 6.8]\n\n# Creating line chart\nplt.figure(figsize=(10,7))\nplt.plot(years, home_prices, color='#a99bd0', marker='o', label='Home Prices')\nplt.plot(years, rent_prices, color='#421cf0', marker='o', label='Rent Prices')\nplt.plot(years, apartment_prices, color='#e6d0a6', marker='o', label='Apartment Prices')\nplt.plot(years, building_materials, color='#d0a699', marker='o', label='Cost of Building Materials')\nplt.plot(years, mortgage_rates, color='#a6e6d0', marker='o', label='Mortgage Rates')\n\nplt.title('Housing Related Costs Over Time')\nplt.xlabel('Years')\nplt.ylabel('Cost')\nplt.legend(loc=\"best\")\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/156.png')\nplt.show()\n```\nChoices:[700, 720, 900, 850]\nStudent's Response:920\n",
    "Question Text:\nWhich hobby has seen a consistent increase in interest level from the year 2011 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2011, 2022))\nphotography = [20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70]\ncoding = [55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105]\ndancing = [30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80]\n\nfig, ax = plt.subplots(figsize=(10,5))\nplt.scatter(years, photography, label='Photography', color='#8513f4', marker='o')\nplt.scatter(years, coding, label='Coding', color='#a0a46d', marker='s')\nplt.scatter(years, dancing, label='Dancing', color='#081439', marker='d')\n\n# Chart details\nplt.xlabel(\"Years\")\nplt.ylabel(\"Interest Level\")\nplt.title(\"Hobbies\")\nplt.legend(loc=\"upper left\")\n\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/157.png')\n\nplt.show()\n```\nChoices:['Photography', 'Coding', 'Dancing']\nStudent's Response:'Photography', 'Coding', 'Dancing'\n",
    "Question Text:\nOn which day(s) were the least calories burnt?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# some artificial data\ndays = list(range(1,31))\nburnt_calories = [55, 68, 79, 88, 95, 115, 120, 130, 140, 150, 162, 170, 180, 200, 210, 220, 240, 250, 260, 280, 300, 310, 320, 330, 340, 360, 380, 400, 420, 440]\n\nplt.figure(figsize=(10,6))\n\nplt.scatter(days, burnt_calories, color='#bf2850', label=\"Burnt Calories\")\n\nplt.xlabel('Days in a Month', fontsize=14)\nplt.ylabel('Calories Burnt', fontsize=14)\nplt.title('Fitness: Daily Calories Burnt', fontsize=16)\n\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/158.png')\n\nplt.show()\n```\nChoices:['1st Day', '15th Day', 'Last Day', '10th Day']\nStudent's Response:1st Day\n",
    "Question Text:\nDid the Rock music sales decrease over the years from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Music data in five different series\nyears = list(range(2000, 2021))\npop_music_sales = [23, 25, 28, 31, 33, 38, 42, 41, 43, 45, 50, 55, 57, 59, 64, 68, 70, 72, 77, 79, 85]\nrock_music_sales = [40, 42, 43, 46, 48, 50, 52, 52, 51, 50, 49, 48, 47, 45, 44, 42, 41, 40, 38, 36, 34]\nedm_music_sales = [5, 7, 9, 14, 19, 23, 28, 32, 35, 38, 42, 46, 50, 54, 59, 64, 69, 71, 73, 77, 80]\nclassical_music_sales = [12, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 22, 23, 23, 24, 24, 24, 25]\njazz_music_sales = [15, 16, 16, 17, 18, 19, 20, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 32]\n\n# Create a new figure with high dpi\nplt.figure(dpi=200)\n\n# Plot the different series\nplt.plot(years, pop_music_sales, marker='o', color='#08e0d7', label='Pop')\nplt.plot(years, rock_music_sales, marker='o', color='#37147d', label='Rock')\nplt.plot(years, edm_music_sales, marker='o', color='#bf456c', label='EDM')\nplt.plot(years, classical_music_sales, marker='o', color='#944da1', label='Classical')\nplt.plot(years, jazz_music_sales, marker='o', color='#08d78e', label='Jazz')\n\n# Give the chart a title, and label the y axis\nplt.title('Music Sales Over Time')\nplt.ylabel('Sales (in Millions)')\nplt.xlabel('Year')\n\n# Add a legend\nplt.legend(title='Music Genre')\n\n# Save the chart\nos.makedirs('line_charts/line_charts_visual_linguistic/train', exist_ok=True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/159.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn 2020, was the concentration of CO2 (ppm) higher or lower than the global temperature (\u00b0C)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2021))\nco2_levels = [370, 372, 375, 377, 380, 382, 385, 387, 390, 392, 395, 397, 400, 403, 406, 408, 410, 413, 415, 418, 420]\nglobal_temperatures = [14.48, 14.51, 14.59, 14.61, 14.64, 14.68, 14.73, 14.79, 14.81, 14.75, 14.70, 14.72, 14.76, 14.80, 14.93, 14.95, 14.88, 14.90, 14.85, 14.92, 14.95]\n\nplt.figure(figsize=(10,5))\n\nplt.plot(years, co2_levels, color='#b8c549', marker='o', label='CO2 Levels (ppm)')\nplt.plot(years, global_temperatures, color='#aeb1a2', marker='o', label='Global Temperatures (\u00b0C)')\n\nplt.title('Global Warming: CO2 Levels and Global Temperatures over Time')\nplt.xlabel('Year')\nplt.ylabel('Measurements')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/160.png')\n\nplt.show()\n```\nChoices:['Higher', 'Lower', 'The same']\nStudent's Response:Higher\n",
    "Question Text:\nIs 'Writing' the hobby with the most number of hours spent?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nhobbies = ['Reading', 'Writing', 'Running', 'Cycling', 'Swimming']\n\nhours_spent = [3, 5, 4, 2, 1]\n\nplt.figure(figsize=(10,5))\n\nplt.plot(hobbies, hours_spent, color='#ce0c0f', marker='o')\n\nplt.title('Hours spent on Hobbies')\nplt.xlabel('Hobbies')\nplt.ylabel('Hours spent')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/161.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Who got the highest grade among the students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nstudents = ['John', 'Sarah', 'Mike', 'Emma', 'David']\ngrades = [85, 90, 78, 92, 88]\n\nplt.figure(figsize=(10, 5))\n\nplt.plot(students, grades, color='#9a7be6', marker='o')\nplt.title('Student Grades')\nplt.xlabel('Students')\nplt.ylabel('Grades')\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/162.png')\nplt.show()\n```\nChoices:['John', 'Sarah', 'Mike', 'Emma', 'David']\nStudent's Response:Emma\n",
    "Question Text:\nBy approximately how many hours did the time spent on Yoga increase from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Pre-defined data\nYear = [2015,2016,2017,2018,2019,2020]\nWeight_Lifting = [52, 59, 66, 73, 61, 80]\nRunning = [100, 105, 95, 97, 90, 98]\nCycling = [25, 32, 38, 35, 30, 45]\nYoga = [30, 35, 37, 60, 70, 80]\n\n# Making the figure\nfig, ax = plt.subplots(figsize = (10, 8))\n\nplt.plot(Year, Weight_Lifting, marker = 'o', color = 'b', label = 'Weight Lifting')\nplt.plot(Year, Running, marker = 's', color = 'r', label = 'Running')\nplt.plot(Year, Cycling, marker = 'p', color = 'g', label = 'Cycling')\nplt.plot(Year, Yoga, marker = 'v', color = 'y', label = 'Yoga')\n\nplt.title('Yearly Fitness Activity', fontsize = 20)\nplt.xlabel('Year', fontsize = 15)\nplt.ylabel('Hours Spent', fontsize = 15)\nplt.legend(loc = 'best')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/163.png')\nplt.show()\n```\nChoices:['30 hours', '40 hours', '50 hours', '60 hours']\nStudent's Response:50 hours\n",
    "Question Text:\nWhich student scored the same grade on both series?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The two series of data\nstudent_names = ['Adam', 'Beth', 'Carla', 'David', 'Emma', 'Frank', 'Gina']\ngrades_series1 = [78, 80, 92, 85, 88, 93, 91]\ngrades_series2 = [82, 81, 90, 87, 90, 94, 92]\n\n# Creating the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plotting the two series of data\nax.scatter(student_names, grades_series1, color='#597ff1', marker='o', label='Series1')\nax.scatter(student_names, grades_series2, color='red', marker='x', label='Series2')\n\n# Setting the title and labels\nax.set_title('Student Grades')\nax.set_xlabel('Students')\nax.set_ylabel('Grades')\n\n# Showing the legend\nax.legend()\n\n# Save the plot to the specified directory\nplt.savefig('line_charts/line_charts_visual_linguistic/train/164.png')\n\n# Displaying the plot\nplt.show()\n```\nChoices:['Adam', 'Beth', 'Carla', 'David', 'Emma', 'Frank', 'Gina']\nStudent's Response:Beth\n",
    "Question Text:\nWas there a consistent sales growth from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Input data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ncomputer_sales = [1.73, 1.80, 1.5, 1.65, 1.90, 2.35, 2.61, 2.70, 2.85, 2.95, 3.22]\n\n# Create figure and axis objects using subplots()\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.plot(years, computer_sales, marker='o', label=\"Computer Sales\")\n\n# Set labels and title\nax.set_xlabel('Years', fontsize=14)\nax.set_ylabel('Computer Sales (in millions)', fontsize=14)\nax.set_title('Computer Sales over the Years', fontsize=16)\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/165.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich sport had a higher score in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2010, 2021))\nfootball_scores = [70, 85, 90, 95, 96, 100, 110, 115, 130, 135, 140]\ncricket_scores = [60, 65, 70, 75, 80, 82, 85, 88, 90, 100, 105]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create line chart for football scores\nax.plot(years, football_scores, marker='o', label='Football Scores')\n\n# Create line chart for cricket scores\nax.plot(years, cricket_scores, marker='o', label='Cricket Scores')\n\n# Add title, legend, and labels\nax.set_title('Sports Scores Over Time')\nax.legend()\nax.set_xlabel('Years')\nax.set_ylabel('Scores')\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/166.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Football', 'Cricket']\nStudent's Response:Football\n",
    "Question Text:\nHas the number of buildings built increased every year since 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2000, 2005, 2010, 2015, 2020]\nbuildings = [50, 60, 80, 90, 120]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot data\nax.plot(years, buildings, label=\"Number of Buildings\", marker='o')\n\n# Set the title and labels\nax.set_title('Architecture: Number of Buildings Built Over Time')\nax.set_xlabel('Years')\nax.set_ylabel('Number of Buildings')\n\n# Show the legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/167.png')\n\n# Show the figure\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the Scatter Plot of Dog Weight vs Height suggest that Breed 1 is generally smaller (both in terms of weight and height) than Breed 2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Dog weight and height data for two different breeds\nbreed1_weight = [15, 20, 30, 40, 23, 36, 33, 46, 25, 14]\nbreed1_height = [12, 13, 15, 18, 14, 15, 17, 18, 12, 11]\n\nbreed2_weight = [50, 60, 70, 65, 80, 75, 70, 67, 62, 55]\nbreed2_height = [22, 23, 25, 28, 24, 25, 23, 26, 22, 24]\n\n\n# Figure size\nplt.figure(figsize=(10, 5))\n\n# Scatter plots\nplt.scatter(breed1_weight, breed1_height, color='#a8ce50', marker='o', label='Breed 1')\nplt.scatter(breed2_weight, breed2_height, color='#56ec47', marker='o', label='Breed 2')\n\nplt.title('Scatter Plot of Dog Weight vs Height')\nplt.xlabel('Weight (lbs)')\nplt.ylabel('Height (in)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/168.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the population of India surpassed the population of the USA in 1990?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(1960, 2021, 10))\npopulation_USA = [180671000, 205052000, 228663000, 252981000, 282162411, 309348193, 331449281]\npopulation_China = [667070000, 818315000, 1000281000, 1143325000, 1262645000, 1390085000, 1439323776]\npopulation_India = [449480608, 553000000, 698952844, 872000000, 1050850000, 1234280000, 1380004385]\npopulation_Indonesia = [87751068, 114834000, 147490298, 179322000, 214246606, 241613126, 273523615]\n\nplt.figure(figsize=(10, 5))\n\nplt.scatter(years, population_USA, color='#44d8e3', marker='o', label='USA')\nplt.scatter(years, population_China, color='#830dd5', marker='o', label='China')\nplt.scatter(years, population_India, color='#9e223d', marker='o', label='India')\nplt.scatter(years, population_Indonesia, color='#2eb86e', marker='o', label='Indonesia')\n\nplt.title('World Population Growth 1960-2020 (in billions)')\nplt.xlabel('Year')\nplt.ylabel('Population')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/169.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid advertising spend increase every year from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# prepare data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nad_spends = [50, 60, 70, 85, 100, 115, 120, 140, 160, 180, 200]\n\n# create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# plot data\nax.plot(years, ad_spends, marker='o', label='Advertising Spend')\n\n# set labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Advertising Spend (in billion $)')\nax.set_title('Yearly Advertising Spend')\nax.legend()\n\n# saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/170.png')\n\n# show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIn which month did the consumption of Grains exceeded the consumption of Fruits?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nx = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\ny1 = [75, 80, 70, 79, 68, 74, 77, 65, 71, 78, 63, 70]\ny2 = [67, 72, 71, 81, 75, 77, 68, 59, 64, 78, 66, 73]\ny3 = [80, 71, 67, 77, 78, 70, 72, 68, 66, 70, 73, 78]\n\nplt.figure(figsize=(10,6))\nplt.plot(x, y1, marker='o', label='Vegetables')\nplt.plot(x, y2, marker='o', label='Fruits')\nplt.plot(x, y3, marker='o', label='Grains')\n\nplt.title(\"Monthly Food Consumption in KG\")\nplt.xlabel(\"Month\")\nplt.ylabel(\"Consumption in KG\")\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/171.png')\nplt.show()\n```\nChoices:['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\nStudent's Response:'Apr'\n",
    "Question Text:\nIn which year did Event 1 and Event 2 have the closest event value?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = [1865, 1914, 1939, 1945, 1969, 1989, 2001, 2016]\nevent1 = [10, 30, 50, 30, 60, 50, 70, 90]\nevent2 = [20, 60, 40, 70, 80, 70, 60, 80]\nevents=[\"End of Civil War\", \"Start of WW1\", \"Start of WW2\", \"End of WW2\", \n        \"Moon landing\", \"Fall of Berlin Wall\", \"9/11\", \"US election\"]\n\nplt.figure(figsize = (14, 7))\n\n# scatter plots\nplt.scatter(years, event1, c='b', marker='o', label=\"Event1 Trajectory\")\nplt.scatter(years,event2, c='r', marker='x', label=\"Event2 Trajectory\")\n\n# labels\nplt.title('Historical Events Over Time')\nplt.xlabel('Year')\nplt.ylabel('Event Value')\nplt.legend()\nplt.grid(True)\nplt.xticks(years, events, rotation='vertical')\n\n# save plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/172.png')\nplt.show()\n```\nChoices:['1865', '1914', '1939', '1945', '1969', '1989', '2001', '2016']\nStudent's Response:'1939'\n",
    "Question Text:\nDoes the scatter plot show that modern books have been sold more than classic books in each quantity range?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for scatter plot\nclassic_books = [10, 20, 30, 40, 50]\nclassic_books_sold = [100, 250, 300, 520, 720]\n\nmodern_books = [10, 20, 30, 40, 50]\nmodern_books_sold = [150, 500, 400, 700, 1050]\n\n# Create scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(classic_books, classic_books_sold, marker='o', color='blue', label='Classic Books')\nplt.scatter(modern_books, modern_books_sold, marker='>', color='red', label='Modern Books')\n\n# Add labels, title and legend\nplt.title('Sales Comparison between Classic and Modern Literature')\nplt.xlabel('Number of Book Titles')\nplt.ylabel('Number of Books Sold (in thousands)')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/173.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nBased on the line chart, which education stream has seen the most growth in terms of student numbers from the year 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2021))\nstudents_in_arts = [30, 35, 37, 39, 40, 50, 56, 60, 65, 70, 80, 85, 91, 95, 96, 100, 105, 109, 112, 115, 120]\nstudents_in_sciences = [50, 55, 63, 62, 64, 70, 73, 80, 81, 88, 90, 94, 98, 102, 110, 120, 125, 130, 135, 140, 145]\nstudents_in_commerce = [70, 75, 80, 82, 85, 88, 92, 94, 96, 98, 100, 105, 110, 115, 120, 122, 124, 126, 128, 130, 140]\n\nplt.figure(figsize=(10,5))\nplt.plot(years, students_in_arts, color='#e84a25', marker='o', label='Students in Arts')\nplt.plot(years, students_in_sciences, color='#916629', marker='o', label='Students in Sciences')\nplt.plot(years, students_in_commerce, color='#57436b', marker='o', label='Students in Commerce')\n\nplt.title('Number of Students in Different Streams Over the years')\nplt.xlabel('Year')\nplt.ylabel('Number of Students')\nplt.legend(loc='upper left')\nplt.grid(True)\nplt.show()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/174.png')\n```\nChoices:['Arts', 'Sciences', 'Commerce']\nStudent's Response:Sciences\n",
    "Question Text:\nBased on the scatter plot, which city had the greatest population growth from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = range(2000, 2011)\n\ncity1_pop = [10, 12, 15, 20, 22, 24, 26, 27, 28, 30, 32]\ncity2_pop = [5, 7, 10, 12, 14, 16, 18, 20, 22, 24, 26]\ncity3_pop = [3, 4, 7, 8, 10, 12, 14, 15, 16, 18, 20]\ncity4_pop = [15, 18, 20, 22, 24, 26, 29, 31, 33, 35, 38]\n\nfig = plt.figure(figsize=(10, 5))\nplt.scatter(years, city1_pop, color='#06d894', label='City 1')\nplt.scatter(years, city2_pop, color='#abcdef', label='City 2')\nplt.scatter(years, city3_pop, color='#065fd8', label='City 3')\nplt.scatter(years, city4_pop, color='#d80668', label='City 4')\n\nplt.xlabel('Year')\nplt.ylabel('Population in thousands')\nplt.title('Cities Population over Time')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/175.png')\nplt.show()\n```\nChoices:['City 1', 'City 2', 'City 3', 'City 4']\nStudent's Response:City 4\n",
    "Question Text:\nIs the number of projects completed in AI development always less than the system software development over the years from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = range(2000, 2020)\nAI_development = [12, 15, 18, 22, 26, 33, 38, 45, 52, 60, 68, 77, 85, 94, 103, 114, 126, 138, 152, 167]\napp_software_development = [5, 8, 11, 16, 19, 24, 30, 36, 42, 47, 53, 60, 67, 75, 84, 93, 103, 113, 123, 134]\nsystem_software_development = [25, 28, 32, 36, 40, 45, 52, 59, 66, 74, 82, 90, 99, 108, 116, 126, 136, 146, 157, 168] \n\n# Apply plot details\nplt.figure(figsize=(10, 7)) \nplt.scatter(years, AI_development, color='#6192c4', marker='o', label=\"AI Development\")\nplt.scatter(years, app_software_development , color='#98c6bb', marker='o', label=\"App Software Development\")\nplt.scatter(years, system_software_development, color='#aa9ad0', marker='o', label=\"System Software Development\")\nplt.xlabel('Years')\nplt.ylabel('Projects Completed')\nplt.title('Technology growth comparison')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/176.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year did PC game sales first exceed 20 million?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare the data\nyears = range(2010, 2021)\nPC_game_sales = [13, 16, 19, 21, 22, 19, 15, 17, 20, 23, 25]\nconsole_game_sales = [30, 35, 33, 39, 40, 38, 35, 38, 40, 42, 45]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot the data with markers\nax.plot(years, PC_game_sales, marker='o', label='PC Game Sales')\nax.plot(years, console_game_sales, marker='s', label='Console Game Sales')\n\n# Set the labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Sales (in millions)')\nax.set_title('PC vs Console Game Sales over the Years')\nax.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/178.png')\n\nplt.show()\n```\nChoices:[2011, 2012, 2013, 2014, 2015]\nStudent's Response:2013\n",
    "Question Text:\nDid the temperature in New York exceed 37\u00b0F more than 5 times in the month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\ndays = list(range(1, 31))\ntemp_NewYork = [32,28,30,29,28,27,29,30,32,35,36,34,35,37,36,38,37,38,39,40,39,41,40,39,38,40,42,39,38,37]\ntemp_California = [26,24,26,27,25,24,26,27,28,27,26,27,28,29,28,30,31,29,30,31,30,32,33,32,31,32,33,32,31,30]\ntemp_Boston = [30,32,34,32,30,32,34,35,36,35,34,33,34,35,36,37,38,36,37,38,39,38,37,36,35,34,35,34,33,32]\ntemp_Chicago = [33,32,31,33,34,33,34,33,35,36,34,35,36,37,38,36,37,38,39,38,37,36,35,34,33,34,35,34,33,32]\ntemp_Texas = [38,37,36,37,38,39,38,37,36,37,38,39,40,39,38,40,41,40,39,41,40,39,38,37,36,37,38,37,36,35]\n\nfig=plt.figure(figsize=(20,10))\n\n# Plotting data\nplt.plot(days, temp_NewYork, marker='o', label='New York')\nplt.plot(days, temp_California, marker='o', label='California')\nplt.plot(days, temp_Boston, marker='o', label='Boston')\nplt.plot(days, temp_Chicago, marker='o', label='Chicago')\nplt.plot(days, temp_Texas, marker='o', label='Texas')\n\n# Setting x and y axis labels \nplt.xlabel('Day of the Month')\nplt.ylabel('Temperature (\u00b0F)')\n\n# Setting the title for the line chart\nplt.title('Temperature Trend across different Cities in U.S for a Month')\n\n# Displaying the legend\nplt.legend()\n\n# Saving the line chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/180.png')\n\n# Displaying the line chart\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the line chart, in which year was the global temperature highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = range(2000, 2021)\naverage_global_temp = [14.2, 14.5, 14.6, 14.5, 14.5, 14.6, 14.8, 14.9, 15.0, 14.9, 15.2, 15.4, 15.4, 15.5, 15.6, 15.7, 15.8, 15.9, 16.0, 16.1, 16.2]\nco2_emissions = [23.4, 24.0, 24.7, 25.2, 26.0, 27.0, 27.6, 29.2, 30.8, 31.5, 32.2, 33.2, 34.5, 35.4, 36.4, 37.1, 37.8, 38.2, 39.0, 39.5, 40.5]\n\nfig, ax1 = plt.subplots()\n\ncolor = '#5062cb'\nax1.set_xlabel('Years')\nax1.set_ylabel('Global Temperature (\u00b0C)', color=color)\nax1.plot(years, average_global_temp, color=color, marker='o')\nax1.tick_params(axis='y', labelcolor=color)\n\nax2 = ax1.twinx()  \ncolor = '#036292'\nax2.set_ylabel('CO2 Emissions (Gt)', color=color)\nax2.plot(years, co2_emissions, color=color, marker='x')  \nax2.tick_params(axis='y', labelcolor=color)\n\nfig.tight_layout()  \nplt.savefig('line_charts/line_charts_visual_linguistic/train/181.png')\nplt.show()\n```\nChoices:[2000, 2010, 2015, 2020]\nStudent's Response:2020.\n",
    "Question Text:\nDoes Dog 1 collect more bones than Dog 2 in the first month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt \n\n# create data\nmonths = list(range(1,13))\n\ndog1 = [5, 9, 6, 14, 8, 11, 10, 12, 9, 15, 12, 17]\ndog2 = [3, 6, 9, 13, 7, 11, 8, 10, 7, 13, 9, 15]\ndog3 = [4, 8, 5, 12, 7, 10, 9, 11, 8, 14, 11, 16]\ndog4 = [2, 5, 8, 11, 6, 9, 7, 9, 6, 12, 8, 14]\n\nfig, ax = plt.subplots(figsize=(10,5))\nax.plot(months, dog1, marker='o', label='Dog 1')\nax.plot(months, dog2, marker='o', label='Dog 2')\nax.plot(months, dog3, marker='o', label='Dog 3')\nax.plot(months, dog4, marker='o', label='Dog 4')\n\nplt.xlabel('Month')\nplt.ylabel('Bones collected')\nplt.title('Number of bones collected by different dogs')\nplt.legend()\nplt.grid()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/182.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which month were the fewest fantasy books read according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# books categories\ncategories = ['Fiction', 'Non-fiction', 'Fantasy']\n\n# values for each month for each category\nfiction = [57, 63, 70, 80, 82]\nnon_fiction = [54, 57, 59, 64, 68]\nfantasy = [50, 55, 56, 60, 64]\n\nmonths = ['January', 'February', 'March', 'April', 'May']\n\nplt.figure(figsize=(10,6))\n\nplt.plot(months, fiction, marker='o', color='#9ae132', label='Fiction')\nplt.plot(months, non_fiction, marker='o', color='#f19ef6', label='Non-fiction')\nplt.plot(months, fantasy, marker='o', color='#5cbe0b', label='Fantasy')\n\nplt.xlabel('Months')\nplt.ylabel('Number of Books Read')\nplt.title('Number of Books Read Over Five Months')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/183.png')\n\nplt.show()\n```\nChoices:['January', 'February', 'March', 'April', 'May']\nStudent's Response:'January'\n",
    "Question Text:\nIn which year did the Machine Learning Engineer's income first surpass the Software Engineer's income?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = range(2016, 2021)\n\nsoftware_engineer_incomes = [105000, 110000, 115000, 120000, 130000]\ndata_scientist_incomes = [95000, 105000, 120000, 130000, 140000]\nml_engineer_incomes = [100000, 110000, 120000, 150000, 160000]\n\nplt.figure(figsize=(10,8))\n\nplt.plot(years, software_engineer_incomes, marker='o', label='Software Engineer')\nplt.plot(years, data_scientist_incomes, marker='o', label='Data Scientist')\nplt.plot(years, ml_engineer_incomes, marker='o', label='Machine Learning Engineer')\n\nplt.xlabel('Years', fontsize=14)\nplt.ylabel('Income ($)', fontsize=14)\nplt.title('Yearly Income of Different Professions', fontsize=20)\nplt.grid(True)\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/184.png')\nplt.show()\n```\nChoices:['2016', '2017', '2018', '2019', '2020']\nStudent's Response:2018\n",
    "Question Text:\nBased on the line chart, from which continent was there a dip in the number of visitors in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2021))\namerica_visitors = [54.9, 55.9, 57.9, 70.1, 74.8, 77.5, 75.6, 76.9, 79.3, 80.4, 75.2]\neurope_visitors = [48.7, 51.4, 53.6, 56.7, 58.7, 59.5, 61.5, 60.8, 63.4, 65.3, 59.6]\nasia_visitors = [21.4, 22.7, 24.7, 26.7, 28.9, 30.3, 31.3, 32.1, 33.5, 34.6, 31.2]\n\nplt.figure(figsize=(10,6))\nplt.plot(years, america_visitors, marker='o', color='#9611a8', label='America')\nplt.plot(years, europe_visitors, marker='s', color='red', label='Europe')\nplt.plot(years, asia_visitors, marker='*', color='blue', label='Asia')\n\nplt.title('Tourism Trends from 2010 to 2020')\nplt.xlabel('Years')\nplt.ylabel('Number of Visitors (in millions)')\nplt.legend()\n\nplt.grid()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/185.png')\nplt.show()\n```\nChoices:['America', 'Europe', 'Asia']\nStudent's Response:'America', 'Europe', 'Asia'\n",
    "Question Text:\nDid the average number of vacation days taken by individuals decrease between 2019 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Years\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\n# Average number of vacation days taken by individuals per year\nvacation_days = [10, 12, 14, 16, 18, 15, 17, 20, 22, 24, 15]\n\nplt.figure(figsize=(10, 5))\n\nplt.plot(years, vacation_days, marker=\"o\")\n\nplt.title('Average Number of Vacation Days Taken per Year')\nplt.xlabel('Year')\nplt.ylabel('Average Number of Vacation Days Taken')\nplt.grid(True)\nplt.legend(['Vacation Days'], loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/186.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhich language has seen a continuous decline in popularity from 2019 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare data\nlanguages = ['Python', 'Java', 'JavaScript', 'C#', 'C++']\npopularity_2019 = [100, 96, 89, 74, 67]\npopularity_2020 = [108, 94, 91, 77, 62]\npopularity_2021 = [112, 92, 93, 80, 64]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots()\n\n# Scatter plots\nax.scatter(languages, popularity_2019, color='#7e4862', marker='o', label='2019')\nax.scatter(languages, popularity_2020, color='#4621fe', marker='v', label='2020')\nax.scatter(languages, popularity_2021, color='#ed4b24', marker='s', label='2021')\n\n# Labeling the scatter plot\nax.set_xlabel('Languages')\nax.set_ylabel('Popularity')\nax.set_title('Popularity of Programming Languages over Years')\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/187.png')\n\nplt.show()\n```\nChoices:['Python', 'Java', 'JavaScript', 'C#', 'C++']\nStudent's Response:Java\n",
    "Question Text:\nIs there a increasing pattern between time and both rainfall and water level?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nrain_fall_in_cm = [20, 35, 30, 35, 27, 40, 20, 27, 35, 40]\nwater_level_in_m = [1.5, 2.6, 2.3, 2.7, 2.0, 3.0, 1.6, 2.0, 2.7, 3.1]\n\n# Creating new figure\nplt.figure(figsize=(10,8))\n\n# Creating scatter plots\nplt.scatter(range(1, 11), rain_fall_in_cm, color='#c53ca0', marker='o', label='Rainfall (cm)')\nplt.scatter(range(1, 11), water_level_in_m, color='#2ca02c', marker='x', label='Water Level (m)')\n\n# Adding title and labels\nplt.title('Water Level vs Rainfall Over Time')\nplt.xlabel('Time (Months)')\nplt.ylabel('Measurement')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/188.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nHas the number of volcanoes more than tripled from year 2000 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2021))\nearthquakes = [15, 20, 17, 21, 23, 22, 27, 26, 28, 30, 31, 28, 29, 32, 31, 30, 32, 34, 33, 32, 31]\nfloods = [10, 12, 11, 13, 14, 13, 12, 11, 14, 15, 16, 15, 16, 18, 17, 18, 19, 20, 21, 22, 23]\nfires = [5, 7, 8, 9, 8, 8, 8, 9, 9, 8, 8, 8, 9, 9, 8, 8, 9, 10, 11, 12, 13]\nstorms = [20, 22, 21, 23, 23, 25, 27, 29, 31, 33, 35, 36, 36, 37, 38, 38, 39, 38, 38, 37, 37]\nvolcanic_eruptions = [2, 3, 5, 5, 4, 4, 5, 4, 3, 3, 3, 4, 4, 5, 6, 7, 9, 10, 8, 6, 5]\n\nplt.figure(figsize=(12, 6))\nplt.plot(years, earthquakes, color='#4e2eae', marker='o', label=\"Earthquakes\")\nplt.plot(years, floods, color='#47a500', marker='o', label=\"Floods\")\nplt.plot(years, fires, color='#e10006', marker='o', label=\"Fires\")\nplt.plot(years, storms, color='#fb7db1', marker='o', label=\"Storms\")\nplt.plot(years, volcanic_eruptions, color='#a722b7', marker='o', label=\"Volcanic eruptions\")\n\nplt.title('Number of Natural Disasters Annually from 2000 to 2021')\nplt.xlabel('Year')\nplt.ylabel('Number of Natural Disasters')\nplt.legend(loc=\"best\")\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/189.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the number of Bus Users decrease from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2010))\ncar_owners = [30, 45, 55, 60, 67, 70, 80, 90, 100, 115]\nbus_users = [70, 55, 45, 35, 30, 25, 20, 10, 5, 3]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot car owners\nax.scatter(years, car_owners, marker='o', color='blue', label='Car Owners')\n\n# Plot bus users\nax.scatter(years, bus_users, marker='x', color='green', label='Bus Users')\n\n# Set the title and labels\nplt.title('Number of Car Owners and Bus Users from 2000 to 2010', fontsize=14)\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Numbers in thousands', fontsize=12)\n\n# Add legend\nplt.legend(loc='upper right')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/190.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the country with the highest GDP also have the highest population?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Countries\ncountries = ['Canada', 'USA', 'Germany', 'France', 'Australia']\n# GDP (in trillions)\ngdp = [1.74, 21.44, 3.84, 2.71, 1.38]\n# Population (in millions)\npopulation = [37, 331, 83, 67, 25]\n\nplt.figure(figsize=(10,5))\n\nplt.plot(countries, gdp, marker='o', label=\"GDP\")\nplt.plot(countries, population, marker='s', label=\"Population\")\n\nplt.title('GDP and population by Country')\nplt.xlabel('Countries')\nplt.ylabel('In Trillions or Millions')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/191.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes John have a higher grade than Katie in Science?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nGrades = { 'Subjects':['Math', 'Science', 'Geography', 'History', 'Foreign Language'], 'John':[89, 94, 78, 87, 92], 'Katie':[92, 88, 95, 91, 80]}\nfig, ax = plt.subplots(figsize=(10, 5))\n\nax.plot(Grades['Subjects'], Grades['John'], color='#f90105', marker='o', label='John\\'s grades')\nax.plot(Grades['Subjects'], Grades['Katie'], color='#4ff427', marker='o', label='Katie\\'s grades')\n\nax.set_xlabel('Subjects')\nax.set_ylabel('Grades')\nax.set_title('Class Grades Comparison')\nax.legend()\n\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/192.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the \"Performance Measurement\" for \"Series 2\" at Time = 5 more than 50?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny1 = [2, 3, 5, 7, 11]\ny2 = [13, 17, 19, 23, 29]\ny3 = [31, 37, 41, 43, 47]\ny4 = [53, 59, 61, 67, 71]\ny5 = [73, 79, 83, 89, 97]\n\nplt.figure(figsize=(10, 6))\n\nplt.scatter(x, y1, label='Series 1', color='#2cdcbe')\nplt.scatter(x, y2, label='Series 2', color='#679f6e')\nplt.scatter(x, y3, label='Series 3', color='#2cdcbe')\nplt.scatter(x, y4, label='Series 4', color='#679f6e')\nplt.scatter(x, y5, label='Series 5', color='#2cdcbe')\n\nplt.title('Computer Performance Metrics')\nplt.xlabel('Time (s)')\nplt.ylabel('Performance Measure')\n\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/193.png') \nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nDid the population of sparrows decline from 2015 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for bird species\nyears = [2015, 2016, 2017, 2018, 2019]\neagle = [50, 70, 80, 90, 100]\nsparrow = [200, 230, 260, 290, 240]\nrobin = [150, 160, 160, 170, 180]\nhummingbird = [500, 450, 400, 350, 500]\npigeon = [600, 550, 500, 550, 600]\n\n# Creating a line plot\nplt.figure(figsize=(10, 6))\nplt.plot(years, eagle, marker='o', color='#581152', label='Eagle')\nplt.plot(years, sparrow, marker='o', color='#427c3d', label='Sparrow')\nplt.plot(years, robin, marker='o', color='blue', label='Robin')\nplt.plot(years, hummingbird, marker='o', color='yellow', label='Hummingbird')\nplt.plot(years, pigeon, marker='o', color='red', label='Pigeon')\n\n# Adding labels, title, and legend\nplt.title('Bird Populations Over Time')\nplt.xlabel('Year')\nplt.ylabel('Population (In Thousands)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/194.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which year did sparrows and pigeons have the most similar population number?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting the data for two series of birds\nsparrow = [50, 42, 39, 35, 33, 30, 27, 25, 25, 20]\npigeon = [60, 57, 55, 52, 50, 47, 45, 42, 40, 39]\nyears = list(range(2010, 2020))\n\n# Creating figure and setting its size\nplt.figure(figsize=(10,6))\n\n# Adding data to the plot\nplt.scatter(years, sparrow, color='#d7d6c1', marker='o', label='Sparrows')\nplt.scatter(years, pigeon, color='#6d63c4', marker='x', label='Pigeons')\n\n# Setting plot title and labels for x and y axis\nplt.title('Change in Bird Population Over The Years')\nplt.xlabel('Years')\nplt.ylabel('Population in thousands')\n\n# Adding legend to the plot\nplt.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/195.png')\n\n# Displaying the plot\nplt.show()\n\n\ndifferences = [abs(s - p) for s, p in zip(sparrow, pigeon)]\nmin_difference_year = years[differences.index(min(differences))]\n```\nChoices:['2010', '2013', '2016', '2019']\nStudent's Response:2016\n",
    "Question Text:\nIn the chart, does the dog's weight and height increase with age?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot \ndog_age = [2, 3, 4, 5, 6, 7, 8]\ndog_weight = [15, 17, 20, 22, 27, 30, 35]\ndog_height = [14, 16, 17, 18, 21, 24, 27]\n\nplt.figure(figsize=(10,7))\n\n# Creating scatter plot with 3 series\nplt.scatter(dog_age, dog_weight, marker='o', color='b', label='Dog Weight')\nplt.scatter(dog_age, dog_height, marker='x', color='r', label='Dog Height')\n\n# TITLE, X-AXIS and Y-AXIS\nplt.title('Dog Age vs Weight & Height')\nplt.xlabel('Age (years)')\nplt.ylabel('Weight (kg) & Height (cm)')\n\n# Legend for scatter plot\nplt.legend()\n\n# saving the file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/196.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich city had the lowest real estate prices in 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Required data for the charts\nyears = np.array([2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020])\nnyc_prices = np.array([45000, 49000, 53000, 57000, 61000, 65000, 69000, 73000, 77000, 81000, 85000])\nla_prices = np.array([42000, 46000, 50000, 54000, 58000, 62000, 66000, 70000, 74000, 78000, 82000])\nboston_prices = np.array([40000, 44000, 49000, 54000, 59000, 64000, 69000, 74000, 79000, 84000, 89000])\nchicago_prices = np.array([38000, 42000, 47000, 52000, 57000, 62000, 67000, 72000, 77000, 82000, 87000])\nseattle_prices = np.array([36000, 41000, 47000, 53000, 58000, 64000, 70000, 76000, 82000, 88000, 94000])\n\n# Create the plot with figure size being sufficiently large to avoid label overlap\nplt.figure(figsize=(10, 8))\n\n# Create Scatter Plots for each city\nplt.scatter(years, nyc_prices, color='#2e354c', label='New York City')\nplt.scatter(years, la_prices, color='#a2dbb0', label='Los Angeles')\nplt.scatter(years, boston_prices, color='blue', label='Boston')\nplt.scatter(years, chicago_prices, color='purple', label='Chicago')\nplt.scatter(years, seattle_prices, color='orange', label='Seattle')\n\n# Customize the chart\nplt.title('Real Estate Prices for Various Cities Over Time')\nplt.xlabel('Year')\nplt.ylabel('Price (in 1000s)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/197.png')\n```\nChoices:['New York City', 'Los Angeles', 'Boston', 'Chicago', 'Seattle']\nStudent's Response:Seattle\n",
    "Question Text:\nAt what advertising cost do we see a potential of around 4800 customers?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating two series of data\nadvertising_costs = [50, 100, 150, 200, 250, 300, 350, 400, 450, 500]\nsales_made = [100, 200, 350, 500, 650, 800, 950, 1100, 1250, 1400]\n\n# Creating another series of data\npotential_customers = [700, 1300, 2000, 2700, 3400, 4100, 4800, 5500, 6200, 6900]\n\n# Creating scatter plot\nfig = plt.figure(figsize=(10, 6))\nplt.scatter(advertising_costs, sales_made, color='#48860d', marker='o')\nplt.scatter(advertising_costs, potential_customers, color='red', marker='+')\n\n# Adding labels and title\nplt.title(\"Effect of Advertising on Sales\")\nplt.xlabel(\"Advertising Cost ($)\")\nplt.ylabel(\"Sales Made / Potential Customers\")\n\n# Adding legend\nplt.legend(['Sales Made', 'Potential Customers'])\n\n# Saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/198.png')\nplt.show()\n```\nChoices:[50, 100, 150, 200, 250, 300, 350, 400, 450, 500]\nStudent's Response:350\n",
    "Question Text:\nDid the sales for Puzzles increase from 2020 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntoys = ['Dolls', 'Action Figures', 'Puzzles', 'Board Games']\nsales_2020 = [12, 18, 15, 11]\nsales_2021 = [15, 16, 18, 14]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Scatter plot for 2020\nscatter2020 = ax.scatter(toys, sales_2020, color='#f8e778', marker='o', label='2020')\n\n# Scatter plot for 2021\nscatter2021 = ax.scatter(toys, sales_2021, color='#ddb391', marker='o', label='2021')\n\n# Titles and labels\nax.set_title('Toy Sales in 2020 and 2021', fontsize=14)\nax.set_xlabel('Toys', fontsize=12)\nax.set_ylabel('Sales (in thousands)', fontsize=12)\n\n# Legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/199.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the line chart, which genre has consistently decreased in popularity over the five decades?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndecades = [1960, 1970, 1980, 1990, 2000]\nfantasy = [2, 3, 7, 9, 12]\nthriller = [4, 8, 9, 9, 10]\nromance = [10, 9, 7, 6, 5]\nnonfiction = [7, 8, 8, 7, 6]\n\nplt.figure(figsize=[10,5])\n\nplt.plot(decades, fantasy, marker='o', color='#36b691', label='Fantasy')\nplt.plot(decades, thriller, marker='o', color='#1be483', label='Thriller')\nplt.plot(decades, romance, marker='o', color='blue', label='Romance')\nplt.plot(decades, nonfiction, marker='o', color='red', label='Nonfiction')\n\nplt.xlabel('Decades')\nplt.ylabel('Popularity')\nplt.title('Popularity of Various Genres in Literature Over Five Decades')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/201.png')\n\nplt.show()\n```\nChoices:['Fantasy', 'Thriller', 'Romance', 'Nonfiction']\nStudent's Response:Romance\n",
    "Question Text:\nBased on the scatter plot, which era saw a decrease in the number of buildings when passing from one period to the next?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmedieval_times = [800, 900, 1000, 1100, 1200]\nrenaissance = [1350, 1400, 1450, 1500, 1550]\nindustrial_age = [1700, 1750, 1800, 1850, 1900]\nmodern_times = [1950, 2000, 2050, 2100, 2150]\n\nmedieval_buildings = [10, 50, 70, 90, 100]\nrenaissance_buildings = [8, 40, 65, 85, 100]\nindustrial_buildings = [5, 30, 55, 70, 85]\nmodern_buildings = [2, 20, 40, 60, 80]\n\n# Plot\nfig = plt.figure(figsize = (12, 8))\nplt.scatter(medieval_times, medieval_buildings, c='#9438f8', label=\"Medieval Times\")\nplt.scatter(renaissance, renaissance_buildings, c='#59e06e', label=\"Renaissance\")\nplt.scatter(industrial_age, industrial_buildings, c='#c5ab67', label=\"Industrial Age\")\nplt.scatter(modern_times, modern_buildings, c='#a0c4ff', label=\"Modern Times\")\n\nplt.xlabel('Years')\nplt.ylabel('Number of Buildings')\nplt.title('Architecture Through Ages')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/203.png')\nplt.show()\n```\nChoices:['Medieval Times', 'Industrial Age', 'Renaissance', 'Modern Times']\nStudent's Response:'Industrial Age'\n",
    "Question Text:\n: Has the housing price in City 1 ever been lower than in City 2 during the years 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\nyears = list(range(2000, 2021))\nprices_in_city1 = [120000, 125000, 130000, 135000, 140000, 145000, 150000, 155000, 160000, 165000, 170000, 175000, 180000,\n                   185000, 190000, 195000, 200000, 205000, 210000, 215000, 220000]\nprices_in_city2 = [150000, 155000, 160000, 165000, 170000, 175000, 180000, 185000, 190000, 195000, 200000, 205000, 210000,\n                   215000, 220000, 225000, 230000, 235000, 240000, 245000, 250000]\n\n# Creating the line chart\nplt.figure(figsize=[10, 5])\nplt.plot(years, prices_in_city1, marker='o', color='#2e3613', label='City 1')\nplt.plot(years, prices_in_city2, marker='o', color='b', label='City 2')\nplt.xlabel('Years')\nplt.ylabel('Housing Prices')\nplt.title('Housing Prices in City 1 and City 2 from 2000 to 2020')\nplt.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/204.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich hobby is the least popular among the survey based on the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nhobby_names = ['Reading', 'Gaming', 'Gardening', 'Photography', 'Cooking', 'Painting', 'Writing']\npeople_count = [120, 190, 150, 95, 175, 140, 130]\n\n# Create a scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(hobby_names, people_count, c='blue', marker='o')\n\n# Set chart title and labels\nplt.title('Number of People with Different Hobbies')\nplt.xlabel('Hobby Names')\nplt.ylabel('Number of People')\n\n# Save and display the chart\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/205.png')\nplt.show()\n```\nChoices:['Reading', 'Gaming', 'Gardening', 'Photography', 'Cooking', 'Painting', 'Writing']\nStudent's Response:Photography\n",
    "Question Text:\nIn which year did the number of Sunflowers first exceed the number of Roses?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Line chart data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nroses = [15, 20, 26, 21, 27, 29, 33, 37, 35, 40, 45]\nsunflowers = [10, 15, 20, 18, 22, 19, 27, 30, 34, 37, 40]\ntulips = [8, 10, 12, 11, 13, 15, 18, 19, 20, 22, 24]\n\n# Plot data\nplt.figure(figsize=(10,6))\nplt.plot(years, roses, marker='o', color='#ea7db7', label='Roses')\nplt.plot(years, sunflowers, marker='o', color='#34ab30', label='Sunflowers')\nplt.plot(years, tulips, marker='o', color='#0000FF', label='Tulips')\nplt.legend(loc='upper left')\nplt.xlabel('Years')\nplt.ylabel('Number of Plants')\nplt.title('Number of Plants over Years')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/206.png')\nplt.show()\n```\nChoices:[2012, 2013, 2014, 2015]\nStudent's Response:Error in plot or multiple choice options.\n",
    "Question Text:\nDoes Group A's income exceed Group B's income in any given year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nx = [1, 2, 3, 4, 5]\ny1 = [20, 23, 25, 28, 30]\ny2 = [22, 25, 27, 30, 32]\ny3 = [19, 21, 24, 26, 27]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Plot data\nax.scatter(x, y1, c='#e1e396', label='Group A Income')\nax.scatter(x, y2, c='#0d7216', label='Group B Income')\nax.scatter(x, y3, c='#cdaf95', label='Group C Income')\n\n# Set labels and title\nax.set_xlabel('Time (in years)', fontsize=14)\nax.set_ylabel('Income (in thousand $)', fontsize=14)\nax.set_title('Income trends over years', fontsize=16)\n\n# Display the legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/207.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nDoes the 'Bulldog' breed have the highest weight among all the depicted dogs?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nDogs = ['Chihuahua', 'Poodle', 'Dalmatian', 'Bulldog', 'Labrador']\nAge = [2, 8, 5, 7, 4]\nWeight = [3, 9, 20, 28, 30]\nHeight = [20, 40, 56, 38, 60]\nLife_Expectancy = [14, 12, 13, 8, 12]\nOwners = [3, 2, 5, 1, 3]\n\nplt.figure(figsize=(10, 7))  # figure size to avoid word overlap\n\nplt.scatter(Dogs, Age, label='Age', marker='o')\nplt.scatter(Dogs, Weight, label='Weight', marker='v')\nplt.scatter(Dogs, Height, label='Height', marker='s')\nplt.scatter(Dogs, Life_Expectancy, label='Life Expectancy', marker='p')\nplt.scatter(Dogs, Owners, label='Number of Owners', marker='h')\n\nplt.xlabel('Dog Breed')\nplt.ylabel('Value') \n\nplt.title('Dog Characteristics')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/209.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the Rainfall vary more than Ice Melts from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2011))\nocean_levels = [1.0, 1.2, 1.3, 1.4, 1.5, 1.6, 1.65, 1.7, 1.75, 1.8, 1.85]  # in meters\nriver_flows = [3.2, 3.4, 3.1, 3.35, 3.3, 3.2, 3.25, 3.5, 3.6, 3.7, 3.8]  # in million cubic meter per year\nrainfall = [800, 820, 850, 880, 910, 933, 950, 970, 1000, 1030, 1050]  # in mm\nevaporation = [700, 710, 720, 730, 740, 750, 760, 770, 780, 790, 800]  # in mm\nice_melts = [0.15, 0.16, 0.17, 0.18, 0.19, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25]  # in million cubic meter per year\n\nplt.figure(figsize=[10,5])\n\nplt.plot(years, ocean_levels, marker='o', color='#82918e', label='Ocean Levels')\nplt.plot(years, river_flows, marker='o', color='#68e5dc', label='River Flows')\nplt.plot(years, rainfall, marker='o', color='#28bf4d', label='Rainfall')\nplt.plot(years, evaporation, marker='o', color='#495a2c', label='Evaporation')\nplt.plot(years, ice_melts, marker='o', color='#8bcb4d', label='Ice Melts')\n\nplt.xlabel('Years')\nplt.ylabel('Measurements')\nplt.title('Water Related Measurements from 2000 to 2010')\n\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/211.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas there a year when the rate of tree planting was equal to the deforestation rate?\n\nHere are the answer options:\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining years from 1990 to 2020\nyears = list(range(1990, 2021))\n\n# Forestry related data\ntree_planting = [1.3, 1.7, 2.1, 2.4, 2.7, 3.2, 3.6, 4.0, 4.5, 5.0, 5.3, 5.6, 5.9, 6.2, 6.5, 6.7, 6.9, 7.1, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5]\ndeforestation = [9.4, 9.1, 8.9, 8.4, 8.1, 7.6, 7.3, 7.0, 6.5, 6.2, 6.0, 5.7, 5.4, 5.3, 5.1, 5.0, 5.0, 4.9, 4.8, 4.7, 4.6, 4.5, 4.4, 4.3, 4.2, 4.1, 4.0, 3.9, 3.9, 3.8, 3.7]\nconservation = [1.4, 1.6, 1.8, 2.0, 2.2, 2.4, 2.6, 2.8, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 5.8, 6.0, 6.2, 6.4, 6.6, 6.8, 7.0, 7.2, 7.4]\nre_forestation = [0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4, 2.6, 2.8, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 5.8, 6.0, 6.2, 6.4, 6.6]\n\nplt.figure(figsize=(15, 10))\nplt.plot(years, tree_planting, marker='o', color= '#16b4c8', label='Tree Planting')\nplt.plot(years, deforestation, marker='v', color='#57b537', label='Deforestation')\nplt.plot(years, conservation, marker='s', color='orange', label='Conservation')\nplt.plot(years, re_forestation, marker='p', color='purple', label='Reforestation')\n\nplt.title('Forestry-related Activities over the Years')\nplt.xlabel('Years')\nplt.ylabel('Rate')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/212.png')\nplt.show()\n```\nChoices:['Year in 2002', 'Year in 2004', 'No such year']\nStudent's Response:No such year\n",
    "Question Text:\nAmong the social media platforms shown in the scatter plot, which one has the highest number of monthly active users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating the data\nsocial_media_platforms = ['Facebook', 'Twitter', 'Instagram', 'Snapchat', 'LinkedIn']\nmonthly_active_users = [2500, 330, 1000, 433, 310]  # in millions\n\n# Creating the plot\nplt.figure(figsize=(10,6))\nplt.scatter(social_media_platforms, monthly_active_users, color='#4d0716', marker = '*')\n\n# Setting the title and labels\nplt.title('Monthly Active Users of Different Social Media Platforms')\nplt.xlabel('Social Media Platform')\nplt.ylabel('Monthly Active Users (in Millions)')\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/213.png')\n\nplt.show()\n```\nChoices:['Facebook', 'Twitter', 'Instagram', 'Snapchat', 'LinkedIn']\nStudent's Response:Facebook\n",
    "Question Text:\nWhich animal has the lowest count in the pet store?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nanimals = ['Cats', 'Dogs', 'Birds', 'Fish', 'Rabbits']\ncounts = [23, 45, 11, 17, 32]\n\nplt.figure(figsize=(10, 5))  \n\n# create bar chart\nplt.plot(animals, counts, marker='o')\n\n# Add title and labels\nplt.title('Number of Animals in a Pet Store')\nplt.xlabel('Animals')\nplt.ylabel('Count')\n\n# add legend\nplt.legend(['Count'])\n\n# save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/214.png')\n\nplt.show()\n```\nChoices:['Cats', 'Dogs', 'Birds', 'Fish', 'Rabbits']\nStudent's Response:Birds\n",
    "Question Text:\nWas the importance of the event in the year 1776 perceived higher in series 1 than in series 2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nhistorical_event_years = [1066, 1492, 1607, 1776, 1789, 1861]\nevent_importance_1 = [3, 6, 4, 10, 8, 9]\nevent_importance_2 = [2, 5, 3, 9, 7, 8]\n\nfig = plt.figure(figsize=(10, 6))\n\nplt.scatter(historical_event_years, event_importance_1, c='#f07ace', label='Series 1')\nplt.scatter(historical_event_years, event_importance_2, c='blue', label='Series 2', marker='x')\n\nplt.title('Historical Events Importance')\nplt.xlabel('Year')\nplt.ylabel('Importance')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/215.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the trend in the occurrences of Event 2 over time?\nFigure Code:\n```\n# importing necessary libraries\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(1500, 2100, 100))\nevent1_occurrences = [10, 35, 50, 70, 85, 100]\nevent2_occurrences = [10, 30, 40, 60, 70, 80]\n\n# Plotting the data\nfig, ax = plt.subplots(figsize=(10,5))\nax.plot(years, event1_occurrences, marker = 'o', linestyle='-', color='b', label='Event 1')\nax.plot(years, event2_occurrences, marker = 'o', linestyle='-', color='r', label='Event 2')\n\n# Setting labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Occurrences')\nax.set_title('Occurrences of Historical events over time')\n\n# Showing the legend\nplt.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/216.png')\n\n# Showing the plot\nplt.show()\n```\nChoices:['Steadily increasing', 'Steadily decreasing', 'No change', 'Fluctuating']\nStudent's Response:Steadily increasing\n",
    "Question Text:\nBy day 10, which plant has grown taller?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\ntime = list(range(1, 11))\nplant1_height = [1, 1.5, 2.1, 3, 3.7, 4.9, 5.7, 6.9, 8.1, 9]\nplant2_height = [1, 1.7, 2.5, 3.3, 4.2, 5.1, 6, 7, 8, 9.1]\n\n# Create a figure and axis to enable more fine-tuned control\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the data with designated colors and markers\nax.plot(time, plant1_height, marker='o', color='#f27de7', label='Plant 1')\nax.plot(time, plant2_height, marker='o', color='#4438cc', label='Plant 2')\n\n# Adding labels, title and legend\nax.set_xlabel('Time (days)')\nax.set_ylabel('Height (cm)')\nax.set_title('Growth of Two Different Plants Over Time')\nax.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/218.png')\n```\nChoices:['Plant 1', 'Plant 2', 'They have grown to the same height', 'The chart does not provide enough information']\nStudent's Response:Plant 2\n",
    "Question Text:\n: Is the time spent on swimming increasing over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Datasets\ntime = [1, 2, 3, 4, 5, 6, 7]\nrunning = [6, 8, 9, 12, 15, 20, 25]\nswimming = [2, 3, 5, 7, 11, 13, 17]\ncycling = [4, 5, 6, 10, 14, 16, 20]\nweight_lifting = [0, 1, 3, 5, 7, 9, 11]\n\nplt.figure(figsize=(15, 8))\n\nplt.scatter(time, running, color=\"#e45b6b\", marker='o', label='Running')\nplt.scatter(time, swimming, color=\"#8850f4\", marker='v', label='Swimming')\nplt.scatter(time, cycling, color=\"g\", marker='s', label='Cycling')\nplt.scatter(time, weight_lifting, color=\"b\", marker='x', label='Weight Lifting')\n\nplt.title('Fitness Progress Over Time')\nplt.xlabel('Time (Months)')\nplt.ylabel('Hours per Week')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/220.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the popularity of Medieval Architecture increase over the decades?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# prepare some data\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [2, 3, 4, 3, 5, 4, 6, 5, 7, 6]\ny2 = [10, 9, 8, 9, 8, 7, 7, 6, 5, 4]\n\n# create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# plot each data series\nax.plot(x, y1, marker='o', color='#7cb82e', label='Medieval Architecture Popularity')\nax.plot(x, y2, marker='o', color='#810424', label='Modern Architecture Popularity')\n\nax.set_xlabel('Decades')\nax.set_ylabel('Popularity Index')\nax.set_title('Popularity of Medieval and Modern Architecture Over Decades')\nax.legend()\n\n#save to a file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/221.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAt the speed of 80 mph, is Toyota's fuel efficiency better than BMW's fuel efficiency?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# setting the data\ntoyota_mpg = [30, 32, 34, 38, 37]\nford_mpg = [24, 25, 26, 27, 26]\nbmw_mpg = [21, 22, 22, 21, 22]\nspeed = [60, 70, 80, 90, 100]\n\n# creating the scatter plots\nplt.scatter(speed, toyota_mpg, color='#5d933f', marker='o', label='Toyota')\nplt.scatter(speed, ford_mpg, color='#31474f', marker='o', label='Ford')\nplt.scatter(speed, bmw_mpg, color='#0d1e40', marker='o', label='BMW')\n           \n# setting the chart title and labels\nplt.title('Car Models Vs. Fuel Efficiency at Different Speeds', fontsize=14)\nplt.xlabel('Speed (mph)', fontsize=12)\nplt.ylabel('Fuel Efficiency (MPG)', fontsize=12)\n           \n# setting the legend\nplt.legend(loc='lower left')\n           \n# save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/222.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the popularity of Pop music in 2014?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\npop_music = [50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100]\nrock_music = [40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90]\njazz_music = [30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Plots\nax.plot(years, pop_music, color='#f09de6', label='Pop', marker='o')\nax.plot(years, rock_music, color='blue', label='Rock', marker='x')\nax.plot(years, jazz_music, color='green', label='Jazz', marker='s')\n\n# Settings\nax.set_xlabel('Years')\nax.set_ylabel('Number of songs in Top 100')\nax.set_title('Popularity of Music Genres Over Time')\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/223.png')\n\nplt.show()\n```\nChoices:[70, 60, 65, 75]\nStudent's Response:70.\n",
    "Question Text:\nAre 'action figures' the least sold toy based on the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The data\ntoys = ['action figures', 'board games', 'dolls', 'puzzles', 'educational toys']\nsales = [134, 245, 323, 170, 186]\ncolors = ['#b4b132']\n\n# Creating the scatter plot\nplt.figure(figsize=(10, 7))\nplt.scatter(toys, sales, color=colors[0], marker='o')\n\n# Setting labels, title and legend\nplt.xlabel('Toys')\nplt.ylabel('Sales')\nplt.title('Sales of different toys')\nplt.legend(['Sales'])\n\n# Saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/224.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the number of iPhone users surpass Samsung users anytime between 2000 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nyears = [2000, 2005, 2010, 2015, 2020]\niphone_users = [0, 40, 230, 470, 1000]\nsamsung_users = [100, 200, 300, 400, 550]\nhuawei_users = [30, 60, 100, 200, 500]\nlg_users = [200, 180, 140, 100, 50]\nsony_users = [150, 120, 100, 80, 60]\n\n# Plot lines\nplt.figure(figsize=(12,8))\nplt.plot(years, iphone_users, marker='o', color='#235c42', label='iPhone')\nplt.plot(years, samsung_users, marker='o', color='#5911bb', label='Samsung')\nplt.plot(years, huawei_users, marker='o', color='#e65bc9', label='Huawei')\nplt.plot(years, lg_users, marker='o', color='#d2759f', label='LG')\nplt.plot(years, sony_users, marker='o', color='#1ca157', label='Sony')\n\n# Add legend and labels\nplt.legend(loc=\"upper left\")\nplt.title('Number of Users of Different Phone Brands Over Time')\nplt.xlabel('Year')\nplt.ylabel('Number of Users (in millions)')\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/225.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the Forest area increases linearly with the increase in Land mass?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nland_mass = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\ncrop_growth = [18, 31, 45, 60, 76, 93, 111, 130, 150, 171]\nanimal_population = [54, 63, 72, 81, 90, 99, 108, 117, 126, 135]\nforest_area = [58, 116, 174, 232, 290, 348, 406, 464, 522, 580]\n\nplt.figure(figsize=(10,5))\n\nplt.scatter(land_mass, crop_growth, label='Crop growth', marker='o')\nplt.scatter(land_mass, animal_population, label='Animal population', marker='s')\nplt.scatter(land_mass, forest_area, label='Forest area', marker='^')\n\nplt.title('Land mass affect on Nature')\nplt.xlabel('Land mass in sq.miles')\nplt.ylabel('Number in Thousands')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/226.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Did the effectiveness of \"Medicine A\" always increase every year from 2000 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the data\nyears = list(range(2000,2020))\nmedicine_A = [12, 15, 13, 17, 19, 20, 25, 24, 26, 28, 29, 31, 33, 31, 37, 36, 39, 41, 44, 47]\nmedicine_B = [10, 11, 13, 14, 18, 19, 22, 23, 24, 27, 28, 28, 30, 35, 36, 37, 38, 39, 40, 42]\nmedicine_C = [8, 10, 11, 14, 16, 18, 20, 22, 23, 25, 27, 28, 29, 32, 35, 35, 36, 38, 40, 41]\nmedicine_D = [7, 9, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 29, 30, 31, 34, 35, 36, 37, 38]\n\n# Creating the scatterplot\nplt.figure(figsize=(12,6))\nplt.scatter(years, medicine_A, c='#1a301c', label=\"Medicine A\")\nplt.scatter(years, medicine_B, c='#a87e83', label=\"Medicine B\")\nplt.scatter(years, medicine_C, c='b', label=\"Medicine C\")\nplt.scatter(years, medicine_D, c='g', label=\"Medicine D\")\n\nplt.title(\"Effectiveness of Medicines Over Years\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Effectiveness\")\nplt.legend()\nplt.grid(True)\n\n# Saving the scatterplot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/227.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the line chart, which country had the highest population growth rate from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create Example Data\ncountries = ['USA', 'Canada', 'Mexico', 'Brazil', 'Argentina']\nyears = list(range(2000, 2011))\npopulations = [\n    [282.16, 289.85, 294.56, 297.04, 299.39, 301.23, 298.35, 304.09, 307.05, 309.34, 311.59],\n    [30.67, 31.58, 32.33, 32.75, 33.03, 33.26, 33.41, 33.58, 33.74, 33.91, 34.04],\n    [97.36, 100.55, 103.28, 104.95, 106.70, 108.42, 110.12, 111.82, 113.42, 115.12, 116.90],\n    [174.61, 178.39, 182.03, 183.99, 187.01, 190.13, 193.25, 196.39, 199.25, 202.76, 204.49],\n    [37.81, 38.42, 39.14, 39.67, 40.30, 40.91, 41.45, 41.99, 42.53, 42.84, 43.02]\n]\n\nplt.figure(figsize=[10,5])\n\n# Line Chart\nfor i in range(len(countries)):\n    plt.plot(years, populations[i], label=countries[i], color=['#61402f', '#571f2a', '#570b19', '#eaea0d', '#a4a4a4'][i])\n\nplt.title('Country Population (2000-2010)')\nplt.xlabel('Years')\nplt.ylabel('Population (millions)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/230.png')\nplt.show()\n```\nChoices:['USA', 'Canada', 'Mexico', 'Brazil', 'Argentina']\nStudent's Response:'Brazil'\n",
    "Question Text:\nWhich genre saw a decrease in popularity from 2010 to 2020?\")\n\n# Choices\nprint(\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting the figure size\nplt.figure(figsize=(10,6))\n\n# Years from 2010 to 2020\nyears = range(2010, 2021)\n\n# Popularity data for three genres\npop_genre_popularity = [50, 54, 58, 60, 63, 57, 55, 58, 61, 65, 67]\nrock_genre_popularity = [70, 62, 66, 68, 71, 60, 61, 63, 66, 70, 75]\njazz_genre_popularity = [40, 37, 39, 42, 44, 43, 42, 45, 46, 47, 48]\n\nplt.plot(years, pop_genre_popularity, 'o-', color='#59f73b', label='Pop')\nplt.plot(years, rock_genre_popularity, 's-', color='blue', label='Rock')\nplt.plot(years, jazz_genre_popularity, 'd-', color='red', label='Jazz')\n\n# Setting the chart title and labels\nplt.title('Popular Music Genres Over the Years')\nplt.xlabel('Years')\nplt.ylabel('Popularity')\n\n# Showing a legend\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/231.png')\n\nplt.show()\n\n\n\n# Multiple choice question\nprint(\"<<<QUESTION>>>Which genre saw a decrease in popularity from 2010 to 2020?\")\n\n# Choices\nprint(\"<<<CHOICES>>>['Pop', 'Rock', 'Jazz']<<<CHOICES>>>\")\n```\nChoices:['Pop', 'Rock', 'Jazz']\nStudent's Response:None\n",
    "Question Text:\nWhich month (from 1 to 12) has the highest humidity percentage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Weather data (in arbitrary units)\nhumidity = [47, 49, 51, 72, 68, 65, 59, 66, 70, 71, 72, 59]\ntemperature = [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]\nmonths = range(1, 13)\n\n# Create a figure with ample size for labels\nplt.figure(figsize=(10, 5))\n\n# Scatter plot\nplt.scatter(months, humidity, label = 'Humidity (%)', marker='o')\nplt.scatter(months, temperature, label = 'Temperature (\u00b0C)', marker='x')\n\n# Add labels, title and legend\nplt.xlabel('Month')\nplt.ylabel('Measurement')\nplt.title('Weather: Temperature and Humidity over the Year')\nplt.legend(loc='upper left')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/232.png')\n\nplt.show()\n```\nChoices:['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\nStudent's Response:['4', '11', '12']\n",
    "Question Text:\nDid Instagram have more users than Snapchat in all listed years based on the plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Social media users (in millions) over 4 years for 4 different platforms\nfacebook_users = [2500, 2700, 2900, 3100]\ninstagram_users = [700, 800, 900, 1100]\ntwitter_users = [320, 330, 340, 360]\nsnapchat_users = [250, 270, 300, 350]\n\n# years\nyears = [2017, 2018, 2019, 2020]\n\nplt.figure(figsize=(10, 6))\n\n# scatter plots\nplt.scatter(years, facebook_users, color='#a67e56', marker='o', label=\"Facebook\")\nplt.scatter(years, instagram_users, color='#8c3d82', marker='s', label=\"Instagram\")\nplt.scatter(years, twitter_users, color='#b0f11a', marker='v', label=\"Twitter\")\nplt.scatter(years, snapchat_users, color='#12e5f8', marker='d', label=\"Snapchat\")\n\n# configuring the chart\nplt.title(\"Social Media Users Over Four Years (in millions)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Users (in millions)\")\nplt.legend(loc=\"upper left\")\n\n# save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/233.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas Festival 2 more crowded than Festival 1?\nFigure Code:\n```\n# import library\nimport matplotlib.pyplot as plt\n\n# Create data\nfestivals = ['Festival 1', 'Festival 2', 'Festival 3']\nattendees_in_thousands = [20, 35, 45]\nsatisfaction_ratings = [8.5, 7.8, 7.5]\nweather_scores = [9, 8.8, 7]\n\n# Create scatter plots\nfig, axs = plt.subplots(figsize=(10, 6))\naxs.scatter(festivals, attendees_in_thousands, marker='o', color='magenta', label='Attendees (in Thousands)')\naxs.scatter(festivals, satisfaction_ratings, marker='x', color='cyan', label='Satisfaction Rating')\naxs.scatter(festivals, weather_scores, marker='*', color='yellow', label='Weather Scores')\n\n# Set title and labels\nplt.title('Festivals Data')\nplt.xlabel('Festival')\nplt.ylabel('Scores/Count')\naxes = plt.gca()\n\n# Show the legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/234.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich product's sale increased the fastest over the years from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = list(range(2010, 2021))\nshirt_sales = [10, 15, 17, 34, 20, 25, 22, 27, 30, 35, 40]\npants_sales = [5, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\nshoes_sales = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110]\n\nplt.figure(figsize=(10, 5))\n\nplt.plot(years, shirt_sales, marker='o', color='#82dced', label='Shirt sales')\nplt.plot(years, pants_sales, marker='o', color='#5249a7', label='Pants sales')\nplt.plot(years, shoes_sales, marker='o', color='#eb4034', label='Shoes sales')\n\nplt.title(\"Fashion sales trends from 2010-2020\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Sales (in thousands)\")\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/235.png')\nplt.show()\n```\nChoices:['Shirt', 'Pants', 'Shoes']\nStudent's Response:Shoes\n",
    "Question Text:\nWas the attendance higher at the Glastonbury festival in 2019 than at the Bonnaroo festival?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for festivals\nfestivals = ['Coachella', 'Glastonbury', 'Bonnaroo', 'Lollapalooza', 'Burning Man']\nattendance_2019 = [100000, 135000, 80000, 400000, 70000]\nattendance_2020 = [0, 0, 0, 0, 0]  # In 2020, most festivals were cancelled due to COVID-19\n\n# Create line chart\nplt.figure(figsize=(12, 6))\nplt.plot(festivals, attendance_2019, marker='o', color='#f27005', label='2019 Attendance')\nplt.plot(festivals, attendance_2020, marker='o', color='b', label='2020 Attendance')\n\n# Add labels, legend and title\nplt.xlabel('Festivals')\nplt.ylabel('Attendance')\nplt.legend()\nplt.title('Festival Attendance: 2019 vs 2020')\nplt.xticks(rotation=45)   # rotating the x-axis labels to prevent overlap\n\n# Save the image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/236.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the unit sales of Xbox decrease between 2010 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2021))\nxbox_sales = [14, 20, 22, 27, 30, 25, 24, 22, 23, 23, 25]\nps4_sales = [ 0, 0, 0, 13, 40, 59, 86, 110, 135, 162, 190]\nswitch_sales = [ 0, 0, 0, 0, 0,0, 0, 21, 33, 50, 85]\n\nplt.figure(figsize=(10,6))\nplt.plot(years, xbox_sales, marker='o', color='#eb0a3a', label='Xbox Sales')\nplt.plot(years, ps4_sales, marker='o', color='#140cc9', label='PS4 Sales')\nplt.plot(years, switch_sales, marker='o', color='b', label='Switch Sales')\n\nplt.xlabel('Years')\nplt.ylabel('Unit Sales (in millions)')\nplt.title('Unit Sales of Gaming Consoles over the Years')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/237.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the population of Germany remain constant from the year 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data\ncountries = ['USA', 'Canada', 'Germany', 'UK', 'France']\nyears = [2000, 2005, 2010, 2015, 2020]\nusa_pop = [282, 295, 310, 321, 331]\ncanada_pop = [31, 32, 34, 36, 38]\ngermany_pop = [82, 82, 82, 81, 83]\nuk_pop = [59, 60, 63, 65, 67]\nfrance_pop = [60, 61, 63, 64, 67]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.plot(years, usa_pop, marker='o', color='#d9ff78', label='USA')\nax.plot(years, canada_pop, marker='o', color='b', label='Canada')\nax.plot(years, germany_pop, marker='o', color='g', label='Germany')\nax.plot(years, uk_pop, marker='o', color='r', label='UK')\nax.plot(years, france_pop, marker='o', color='y', label='France')\n\nax.set_xlabel('Years')\nax.set_ylabel('Population (in millions)')\nax.set_title('Population Growth in Different Countries (2000-2020)')\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/238.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nFrom the line chart, which one of the following countries has the lowest Crime Rate in the year of 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyear = list(range(1990, 2021))\ncrime_rate_US = [758.20, 757.70, 747.10, 747.10, 684.50, 636.60, 611.00, 585.50, 56.50, 523.00, 506.50, 504.50, 494.40, 475.80, 463.20, 447.50, 479.30, 471.80, 458.60, 431.90, 404.50, 379.40, 387.10, 378.10, 361.60, 372.60, 386.30, 395.40, 369.10, 366.70, 368.90]\ncrime_rate_UK = [7930, 8475, 8503, 8733, 8839, 8783, 8578, 8215, 8175, 8047, 7919, 7791, 7657, 7549, 7438, 7327, 7216, 7105, 6994, 6883, 6772, 6661, 6550, 6439, 6328, 6217, 6106, 5995, 5884, 5773, 5662]\ncrime_rate_Germany = [7250, 7400, 7550, 7700, 7850, 8000, 8150, 8300, 8450, 8600, 8750, 8900, 9050, 9200, 9350, 9500, 9650, 9800, 9950, 10100, 10250, 10400, 10550, 10700, 10850, 11000, 11150, 11300, 11450, 11600, 11750]\n\nplt.figure(figsize=(10,5))\n\n# Plotting\nplt.plot(year, crime_rate_US, color='#1eede7', marker='o', label='US')\nplt.plot(year, crime_rate_UK, color='#18ec69', marker='s', label='UK')\nplt.plot(year, crime_rate_Germany, color='#7b102d', marker='*', label='Germany')\n\nplt.title('Crime Rates from 1990 to 2020')\nplt.xlabel('Year')\nplt.ylabel('Crime Rate')\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/239.png')\nplt.show()\n```\nChoices:['US', 'UK', 'Germany']\nStudent's Response:'US'\n",
    "Question Text:\nDid the blood sugar level decrease from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2021))\nBloodPressure = [120, 128, 119, 123, 125, 122, 127, 130, 135, 132, 129]\nBloodSugar = [85, 82, 90, 86, 93, 89, 94, 95, 92, 96, 91]\nHeartRate = [60, 65, 62, 64, 67, 62, 65, 64, 70, 68, 66]\nBmi = [25, 26, 26, 27, 28, 27, 29, 30, 28, 29, 30]\n\nplt.figure(figsize=(13,6))\n\nplt.plot(years, BloodPressure, marker='o', color='#48c93e', label='Blood Pressure')\nplt.plot(years, BloodSugar, marker='o', color='#beb2b4', label='Blood Sugar')\nplt.plot(years, HeartRate, marker='o', color='#c1b907', label='Heart Rate')\nplt.plot(years, Bmi, marker='o', color='#3e8381', label='BMI')\n\nplt.title('Health Parameters From 2010 to 2020')\nplt.xlabel('Years')\nplt.ylabel('Health Parameters')\nplt.legend()\n\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/240.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n: Is Python used more for website development than Java?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nlanguages = ['Python', 'Java', 'Javascript', 'C#', 'PHP']\napplications = [700, 600, 800, 600, 550]\nwebsites = [500, 600, 700, 500, 450]\ngames = [300, 400, 350, 500, 300]\n\n# Figure size\nplt.figure(figsize=(10, 5))\n\n# Create scatter plots\nplt.scatter(languages, applications, color='#f4cf55', label = 'Applications')\nplt.scatter(languages, websites, color='#901ccd', label = 'Websites')\nplt.scatter(languages, games, color='#5fbe8c', label = 'Games')\n\n# Title & labels\nplt.title('Languages and Their Uses')\nplt.xlabel('Languages')\nplt.ylabel('Usage')\n\n# Legend\nplt.legend(loc=\"upper right\")\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/242.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nHas the global average temperature increased from year 2000 to 2020 according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Some hypothetical years and corresponding global average temperatures\nyears = np.array([2000, 2005, 2010, 2015, 2020])\navg_temperatures = np.array([14.5, 14.8, 15.2, 15.5, 16.0])\n\n# Setting figure size\nplt.figure(figsize=(10, 6))\n\n# Plotting the data with color #cb26ca and marker style 'o'\nplt.plot(years, avg_temperatures, color='#cb26ca', marker='o')\n\n# Setting the labels and title\nplt.xlabel('Year')\nplt.ylabel('Global Average Temperature (\u00b0C)')\nplt.title('Global Warming Trend Over the Years')\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/243.png')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich car model had the most sales in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Car data\ncar_models = ['Compact', 'Sedan', 'SUV', 'Truck', 'Sports']\ncar_sales = [500, 1200, 700, 800, 300]\n\n# Create scatter plot\nfig, ax = plt.subplots(figsize=(10, 7)) # a large figure size to avoid word overlap\nax.scatter(car_models, car_sales, color='#f0b87d', marker='o')\n\n# Set title and labels \nax.set_title('Car Sales in 2020', fontweight ='bold') \nax.set_xlabel('Car Models', fontweight ='bold') \nax.set_ylabel('Number of Sales', fontweight ='bold') \n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/244.png')\n\nplt.show()\n```\nChoices:['Compact', 'Sedan', 'SUV', 'Truck', 'Sports']\nStudent's Response:Sedan\n",
    "Question Text:\nWhich country has the largest population according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncountries = ['USA', 'UK', 'Germany', 'France', 'China']\npopulation = [329, 67, 83, 65, 1421]\ngdp = [21433, 2831, 3967, 2833, 14393]\narea = [9629, 242, 357, 632, 9597]\n\n# Plot\nfig, ax = plt.subplots(figsize=(10,6))\nax.scatter(countries, population, color='#f8a190', label='Population(Millions)')\nax.scatter(countries, gdp, color='#221075', label='GDP(Billions USD)')\nax.scatter(countries, area, color='#43e675', label='Area(Thousands sq km)')\n\n# Labels\nax.set_title('Countries Statistics')\nax.set_xlabel('Countries')\nax.set_ylabel('Values')\nax.legend()\n\n# Saving to image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/245.png')\nplt.show()\n```\nChoices:['USA', 'UK', 'Germany', 'France', 'China']\nStudent's Response:China\n",
    "Question Text:\nDoes the number of Wars, Inventions and Discoveries have the same growth rate over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Historical Events (x = year, y = number of events)\nevents = {\n    \"Wars\": [45, 50, 58, 62, 74],\n    \"Inventions\": [20, 25, 32, 45, 51],\n    \"Discoveries\": [30, 35, 41, 53, 57],\n}\n\nyears = [1900, 1950, 2000, 2050, 2100]\n\nplt.figure(figsize=[10,5])\n\nfor event, number in events.items():\n    plt.scatter(years, number, label=event, color='#9c01c9')\n\nplt.title('Number of Historical Events Over The Years')\nplt.xlabel('Year')\nplt.ylabel('Number of Events')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/246.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which year did Hydro Energy production was lowest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsolar = [20, 30, 40, 50, 60]\nwind = [15, 25, 30, 35, 40]\nhydro = [15, 20, 25, 30, 35]\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=(10, 6))\n\nplt.scatter(years, solar, color='yellow', label='Solar Energy')\nplt.scatter(years, wind, color='green', label='Wind Energy')\nplt.scatter(years, hydro, color='blue', label='Hydro Energy')\n\nplt.title('Energy Sources')\nplt.xlabel('Years')\nplt.ylabel('Energy Production (Terawatt-hours)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/247.png')\nplt.show()\n```\nChoices:['2016', '2017', '2018', '2019', '2020']\nStudent's Response:'2016'\n",
    "Question Text:\nWas there a drop in computer sales in any year between 2010 to 2020 according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nnumber_of_computers = [1535, 1910, 2150, 2450, 3060, 3990, 5000, 6130, 7500, 9100, 10750]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Plot the data\nax.plot(years, number_of_computers, marker='o')\n\n# Add labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Number of Computers Sold')\nax.set_title('Sale of Computers (2010-2020)')\nax.legend(['Computers Sold'])\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/248.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nHow many days did the person spend more than 60 minutes doing cardio?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data \ndays = list(range(1, 31))\ncardio_minutes = [50, 30, 45, 60, 70, 45, 50, 60, 70, 80, 30, 50, 70, 60, 65, 50, 45, 65, 70, 60, 45, 55, 40, 60, 70, 65, 55, 45, 50, 70]\nweights_minutes = [20, 25, 30, 35, 30, 20, 25, 30, 35, 40, 20, 30, 20, 35, 30, 25, 20, 30, 35, 30, 25, 20, 30, 35, 40, 35, 30, 25, 20, 35]\n\n# create figure and axis objects\nfig, ax = plt.subplots(figsize=(10,6))\n\n# make a scatter plot\nax.scatter(days, cardio_minutes, color='blue', s=50, alpha=0.6, edgecolors='w', linewidths=2, label='Cardio')\nax.scatter(days, weights_minutes, color='green', s=50, alpha=0.6, edgecolors='w', linewidths=2, label='Weights')\n\n# set x-axis label, y-axis label and a title\nax.set_xlabel('Day of the month', fontsize=14)\nax.set_ylabel('Minutes', fontsize=14)\nplt.title('Fitness Routine in a month', fontsize=20)\n\n# show a legend on the plot\nax.legend()\n\n# save the plot as a file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/250.png')\n\n# Display a figure.\nplt.show()\n\n\n# compute the answer\nmore_than_60 = len([i for i in cardio_minutes if i > 60])\nprint(more_than_60)\n```\nChoices:['5 days', '6 days', '7 days', '8 days']\nStudent's Response:7\n",
    "Question Text:\nIn which year did the Laptop sales exceed the Desktop sales for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2015, 2016, 2017, 2018, 2019, 2020]\ndesktop_sales = [100, 120, 140, 160, 180, 200]\nlaptop_sales = [80, 90, 105, 130, 150, 175]\ntablet_sales = [60, 70, 75, 79, 82, 89]\nsmartphone_sales = [200, 250, 300, 350, 400, 470]\n\n# Create the line chart\nplt.figure(figsize=(10,7))\nplt.plot(years, desktop_sales, color='#3e41a9', marker='o', label='Desktop')\nplt.plot(years, laptop_sales, color='#e31716', marker='o', label='Laptop')\nplt.plot(years, tablet_sales, color='green', marker='o', label='Tablet')\nplt.plot(years, smartphone_sales, color='blue', marker='o', label='Smartphone')\n\n# Set the labels and title\nplt.xlabel('Years')\nplt.ylabel('Sales in units (in thousands)')\nplt.title('Computer Sales Evolution')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/251.png')\n\n# Show the figure\nplt.show()\n```\nChoices:[2016, 2017, 2018, 2019, 2020]\nStudent's Response:2019\n",
    "Question Text:\nDid all four incomes steadily increase over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2021))\nincome1 = [50000, 55000, 57000, 60000, 62000, 65000, 66000, 70000, 72000, 75000, 77000, 80000, 83000, 85000, 88000, 92000, 95000, 98000, 100000, 103000, 105000]\nincome2 = [25000, 27000, 28000, 30000, 32000, 35000, 36000, 40000, 42000, 45000, 47000, 50000, 53000, 55000, 58000, 62000, 65000, 68000, 70000, 73000, 75000]\nincome3 = [15000, 17000, 18000, 20000, 22000, 25000, 26000, 30000, 32000, 35000, 37000, 40000, 43000, 45000, 48000, 52000, 55000, 58000, 60000, 63000, 65000]\nincome4 = [10000, 12000, 13000, 15000, 17000, 20000, 21000, 25000, 27000, 30000, 32000, 35000, 38000, 40000, 43000, 47000, 50000, 53000, 55000, 58000, 60000]\n\nplt.figure(figsize=[10,5])\n\nplt.plot(years, income1, marker='o', color='#857ac0', label='Income1')\nplt.plot(years, income2, marker='o', color='#8f8827', label='Income2')\nplt.plot(years, income3, marker='o', color='#f2020e', label='Income3')\nplt.plot(years, income4, marker='o', color='blue', label='Income4')\n\nplt.title('Income Over Time')\nplt.ylabel('Income in USD')\nplt.xlabel('Year')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/252.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nDid Xbox sales increase over the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nyear = list(range(2010, 2021))\nxbox_sales = [6.2, 8.4, 9.6, 10.1, 11.5, 10.5, 7.6, 6.7, 5.5, 4.6, 3.2]\nps_sales = [8.6, 9.2, 10.2, 11.4, 12.6, 10.8, 11.2, 11.7, 12.4, 13.6, 14.8]\n\n# Create scatter plot\nplt.figure(figsize=(12, 8))\nplt.scatter(year, xbox_sales, color='r', label='Xbox Sales', marker=\"o\")\nplt.scatter(year, ps_sales, color='b', label='PlayStation Sales', marker=\"s\")\n\nplt.xlabel('Year')\nplt.ylabel('Sales (in millions)')\nplt.title('Gaming Sales over the years for Xbox Vs PlayStation')\nplt.legend()\nplt.grid()\n\n# Save plot to file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/253.png') \nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nWhich type of property showed a decrease in price between 2007 and 2009?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyear = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\nresidential_property_prices = [100000, 105000, 115000, 125000, 130000, 140000, 145000, 155000, 145000, 140000, 150000, 160000, 175000, 185000, 195000, 200000, 210000, 225000, 235000, 245000, 260000]\ncommercial_property_prices = [200000, 210000, 220000, 230000, 235000, 240000, 245000, 250000, 240000, 230000, 220000, 235000, 245000, 255000, 270000, 290000, 310000, 330000, 360000, 390000, 420000]\nindustrial_property_prices = [150000, 155000, 160000, 165000, 170000, 175000, 180000, 185000, 182000, 180000, 185000, 190000, 195000, 200000, 210000, 220000, 230000, 240000, 250000, 260000, 270000]\nfarmlands_property_prices =[50000, 50500, 51000, 52000, 52500, 53000, 54000, 55000, 56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000]\n\nplt.figure(figsize=(12,7))\nplt.plot(year, residential_property_prices, marker='o', label='Residential')\nplt.plot(year, commercial_property_prices, marker='o', label='Commercial')\nplt.plot(year, industrial_property_prices, marker='o', label='Industrial')\nplt.plot(year, farmlands_property_prices, marker='o', label='Farmlands')\n\nplt.title('Real Estate Trends 2000-2020')\nplt.xlabel('Year')\nplt.ylabel('Property Prices ($)')\nplt.legend(loc=\"upper left\")\n\nplt.grid()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/254.png')\nplt.show()\n```\nChoices:['Residential', 'Commercial', 'Industrial', 'Farmlands']\nStudent's Response:'Residential', 'Commercial'\n",
    "Question Text:\nIn the scatter plot, which phone brand has the highest price for model 3?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# phone prices in $\niphone_prices = [799, 699, 599, 499, 399]\nsamsung_prices = [750, 650, 550, 450, 350]\noneplus_prices = [700, 600, 500, 400, 300]\nxiaomi_prices = [650, 550, 450, 350, 250]\nrealme_prices = [600, 500, 400, 300, 200]\n\n# phone models\nmodels = ['Model 1', 'Model 2', 'Model 3', 'Model 4', 'Model 5']\n\nplt.figure(figsize=(10,8))\n\nplt.scatter(models, iphone_prices, color='#6e01fc', label='iPhone', marker='o')\nplt.scatter(models, samsung_prices, color='#df2fa6', label='Samsung', marker='^')\nplt.scatter(models, oneplus_prices, color='#10f171', label='OnePlus', marker='s')\nplt.scatter(models, xiaomi_prices, color='#e6890c', label='Xiaomi', marker='p')\nplt.scatter(models, realme_prices, color='#0ce88a', label='Realme', marker='h')\n\nplt.title('Phone Prices Comparison')\nplt.xlabel('Phone Models')\nplt.ylabel('Price in $')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/255.png')\nplt.show()\n```\nChoices:['iPhone', 'Samsung', 'OnePlus', 'Xiaomi', 'Realme']\nStudent's Response:iPhone\n",
    "Question Text:\nIn which year did the sales of laptop computers surpass the sales of desktop computers for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2011))\ncomputer_sales = [52, 54, 60, 66, 73, 80, 85, 90, 94, 100, 105]\nlaptop_sales = [10, 15, 19, 23, 32, 37, 44, 50, 60, 70, 80]\n\nplt.figure(figsize=(10, 8))\n\nplt.plot(years, computer_sales, label='Desktop Computer Sales', linestyle='-', marker='o')\nplt.plot(years, laptop_sales, label='Laptop Computer Sales', linestyle='--', marker='s')\n\nplt.title('Desktop vs Laptop Computer Sales from 2000 to 2010')\nplt.xlabel('Year')\nplt.ylabel('Sales (in millions)')\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/256.png')\nplt.show()\n```\nChoices:[2000, 2005, 2006, 2007, 2008, 2010]\nStudent's Response:2008\n",
    "Question Text:\nWhat is the trend in yield for rice from 2000 to 2025?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample Data\ncrops = [\"Wheat\", \"Rice\", \"Maize\", \"Soybean\", \"Cotton\"]\nyield_2000 = [2500, 8000, 6300, 4500, 2700]\nyield_2010 = [3300, 8800, 7000, 5600, 3000]\nyield_2015 = [3800, 9700, 7600, 6200, 3400]\nyield_2020 = [4100, 10500, 8100, 6600, 3700]\nyield_2025 = [4500, 11000, 8600, 7200, 4050]\n\nfig, ax = plt.subplots(figsize=(10,8))\n\nax.scatter(crops, yield_2000, color='#b3ef88', marker='o', label='Yield 2000')\nax.scatter(crops, yield_2010, color='#fdc719', marker='v', label='Yield 2010')\nax.scatter(crops, yield_2015, color='#be45c0', marker='s', label='Yield 2015')\nax.scatter(crops, yield_2020, color='#cc0a16', marker='p', label='Yield 2020')\nax.scatter(crops, yield_2025, color='#3498db', marker='d', label='Yield 2025')\n\nax.legend()\nplt.xlabel('Crops')\nplt.ylabel('Yield (Quantity)')\nplt.title('Crop Yield Over Years in Agriculture')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/257.png')\nplt.show()\n```\nChoices:['The yield of rice has been decreasing over the years.', 'The yield of rice has been increasing over the years.', 'The yield has remained constant over the years.', 'The yield initially increased and then decreased after 2015.']\nStudent's Response:The yield of rice has been increasing over the years.\n",
    "Question Text:\n: In which sector was there a consistent increase in employment from the year 2015 through 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Assuming these lists hold employment data for five different sectors over the years from 2015 to 2020\ntech_employment = [20, 25, 30, 35, 40, 45]\nmedical_employment = [15, 20, 25, 30, 35, 40]\nfin_employment = [10, 15, 20, 25, 30, 35]\neducation_employment = [5, 10, 15, 20, 25, 30]\ntransport_employment = [30, 35, 40, 45, 50, 55]\n\nyears = [i for i in range(2015, 2021)]  # Years from 2015 to 2020\n\nplt.figure(figsize=(10,8))\n\nplt.plot(years, tech_employment, color='#51a266', marker='o', label='Tech')\nplt.plot(years, medical_employment, color='#d5aa83', marker='o', label='Medical')\nplt.plot(years, fin_employment, color='#dc237b', marker='o', label='Finance')\nplt.plot(years, education_employment, color='#bc60f6', marker='o', label='Education')\nplt.plot(years, transport_employment, color='#4b0082', marker='o', label='Transport')\n\nplt.title('Employment in various sectors (2015 - 2020)')\nplt.xlabel('Years')\nplt.ylabel('Number of employed people (in thousands)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/258.png')\nplt.show()\n```\nChoices:['Tech', 'Medical', 'Finance', 'Education', 'Transport']\nStudent's Response:All of them\n",
    "Question Text:\nDoes the chart depicts that Alligator has the highest population among all the animals?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample Data\nanimals = ['Tiger', 'Elephant', 'Alligator', 'Python', 'Penguin']\npopulation = [3000, 20000, 30000, 100, 1000]\n\nplt.figure(figsize=(10,5))\n\n# Generate the line chart\nplt.plot(animals, population, marker='o', label='Population of animals')\n\nplt.xlabel(\"Animal Type\")\nplt.ylabel(\"Population\")\nplt.title('Population of different types of animals')\nplt.legend()\n\n# Save it in a file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/259.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas there a decrease in the usage of Cars for transportation over the years presented in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2010, 2021))\ncars = [1.95, 2.12, 2.3, 2.5, 2.7, 2.65, 2.75, 2.8, 2.85, 2.9, 3.0]\ntrains = [1.0, 1.1, 1.2, 1.3, 1.35, 1.5, 1.55, 1.6, 1.65, 1.7, 1.75]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Plot the data\nax.plot(years, cars, color='#1b76b6', marker='o', label='Cars')\nax.plot(years, trains, color='#a7942a', marker='s', label='Trains')\n\n# Label the chart\nax.set_title('Transportation Trends over the Years')\nax.set_xlabel('Years')\nax.set_ylabel('Trillion Passenger Kilometers')\nax.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/260.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich car brand had the lowest sales in 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncars = ['Audi', 'BMW', 'Ford', 'Tesla', 'Volvo']\nmileage = [27.5, 30.3, 33.4, 95.5, 26.3]\nspeed = [155, 160, 140, 200, 150]\nprice = [40000, 50000, 30000, 49000, 45000]\nsales_2020 = [25370, 30011, 64789, 28199, 15920]\nsales_2021 = [28723, 33007, 61324, 20911, 20923]\n\n# Creating scatter plots\nplt.figure(figsize=(10, 8))\nplt.scatter(cars, mileage, color='#c55326', marker=\"o\", label='Mileage')\nplt.scatter(cars, speed, color='green', marker=\"v\", label='Speed')\nplt.scatter(cars, price, color='blue', marker=\"^\", label='Price')\nplt.scatter(cars, sales_2020, color='purple', marker=\"<\", label='Sales in 2020')\nplt.scatter(cars, sales_2021, color='yellow', marker=\">\",label='Sales in 2021')\n\n# Labels and Legends\nplt.title('Comparison of Different Car Brands')\nplt.xlabel('Brands')\nplt.ylabel('Metrics')\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/261.png')\nplt.show()\n```\nChoices:['Audi', 'BMW', 'Ford', 'Tesla', 'Volvo']\nStudent's Response:'Tesla'\n",
    "Question Text:\nIn the given plot, which city has the highest population?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\ncities = ['City1', 'City2', 'City3', 'City4', 'City5']\npopulation_in_millions = [10, 15, 7, 9, 18]\nbuilding_counts_in_thousands = [150, 250, 100, 120, 280]\n\n# creating figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plotting population and building_count\nax.plot(cities, population_in_millions, marker='o', label='Population (in millions)')\nax.plot(cities, building_counts_in_thousands, marker='s', label='Building Count (in thousands)')\n\n# Setting labels and title\nax.set_xlabel(\"Cities\")\nax.set_ylabel(\"Counts\")\nax.set_title(\"Population and Building Counts of Cities\")\n\n# enabling legend\nax.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/262.png')\n\nplt.show()\n```\nChoices:['City1', 'City2', 'City3', 'City4', 'City5']\nStudent's Response:'City5'\n",
    "Question Text:\nFrom the years 2010 to 2020, which country had the most significant growth in population?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Population data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\npop_usa = [309.3, 311.6, 313.9, 316.1, 318.6, 321.0, 323.1, 325.1, 327.2, 329.1, 331.0]\npop_india = [1234.2, 1247.2, 1260.4, 1273.7, 1287.3, 1301.1, 1315.1, 1329.1, 1343.3, 1357.7, 1366.4]\npop_china = [1340.9, 1344.1, 1347.4, 1350.7, 1354.0, 1357.4, 1360.7, 1364.1, 1367.5, 1370.8, 1374.6]\npop_brazil = [195.2, 196.5, 197.8, 199.2, 200.4, 201.9, 203.2, 204.5, 207.8, 211.0, 213.8]\npop_nigeria = [158.4, 162.5, 166.6, 170.1, 173.6, 177.2, 182.2, 190.9, 195.9, 200.9, 206.1]\n\nplt.figure(figsize=(14,8))\n\n#Plotting data\nplt.plot(years, pop_usa, marker='o', color='#24fafa', label=\"USA\")\nplt.plot(years, pop_india, marker='o', color='#ff8165', label=\"India\")\nplt.plot(years, pop_china, marker='o', color='#8d0cb0', label=\"China\")\nplt.plot(years, pop_brazil, marker='o', color='green', label=\"Brazil\")\nplt.plot(years, pop_nigeria, marker='o', color='blue', label=\"Nigeria\")\n\nplt.title(\"Population Growth From 2010 to 2020\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Population in Millions\")\nplt.legend(loc='upper left')\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/263.png')\nplt.show()\n```\nChoices:['USA', 'India', 'China', 'Brazil', 'Nigeria']\nStudent's Response:India\n",
    "Question Text:\nWhat toy had the highest number of sales in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining toys and their sales data \ntoys = ['Doll', 'Car', 'Puzzle', 'Lego', 'Action Figure']\nsales_2019 = [50, 70, 80, 75, 90]\nsales_2020 = [65, 85, 90, 85, 100]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(9,6))\n\n# Plotting data\nax.plot(toys, sales_2019, marker='o', color='#fe4987', label='2019 sales') \nax.plot(toys, sales_2020, marker='o', color='green', label='2020 sales')\n\n# Setting up labels, legend and title\nax.set_xlabel('Toys')\nax.set_ylabel('Number of Toys Sold')\nax.set_title('Number of Toys Sold in 2019 and 2020')\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/265.png')\n\nplt.show()\n```\nChoices:['Doll', 'Car', 'Puzzle', 'Lego', 'Action Figure']\nStudent's Response:Action Figure\n",
    "Question Text:\nWhat was the employment rate in rural areas in 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]\nemployment_rate_urban = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\nemployment_rate_rural = [20, 19, 18, 17, 16, 15, 14, 13, 12, 11]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Plotting the data\nax.scatter(years, employment_rate_urban, color='#09a334', marker='o', label='Urban')\nax.scatter(years, employment_rate_rural, color='b', marker='x', label='Rural')\n\n# Set the chart's title and labels\nax.set_title('Employment Rate Over the Years')\nax.set_xlabel('Year')\nax.set_ylabel('Employment Rate (%)')\n\n# Add legend\nax.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/266.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['20%', '19%', '18%', '17%']\nStudent's Response:20%\n",
    "Question Text:\nIn February, did the Republicans have more support than the Democrats?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# series of data\nDemocrats = [35, 47, 40, 53, 47]\nRepublicans = [30, 35, 40, 30, 35]\nIndependents = [20, 15, 15, 12, 15]\nUndecided = [15, 3, 5, 5, 3]\n\n# creating the list of x values (time)\nMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May']\n\nplt.figure(figsize=(10, 5))\n\n# plotting the lines\nplt.plot(Months, Democrats, marker='o', label='Democrats')\nplt.plot(Months, Republicans, marker='o', label='Republicans')\nplt.plot(Months, Independents, marker='o', label='Independents')\nplt.plot(Months, Undecided, marker='o', label='Undecided')\n\n# adding labels, title and legend\nplt.xlabel('Months')\nplt.ylabel('Percentage Support')\nplt.title('Public Opinion Polls')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/267.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich language is used by the majority of 'Users', 'Developers' and 'Educational Institutions'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Python', 'JavaScript', 'C++', 'Java', 'C#', 'PHP']\nusers = [100, 95, 88, 80, 78, 65]\ndevelopers = [90, 85, 82, 75, 73, 59]\neducational_inst = [80, 71, 69, 65, 62, 51]\n\nplt.figure(figsize=(10,8))\n\nplt.scatter(languages, users, color='#c5b40d', marker='o', label='Users')\nplt.scatter(languages, developers, color='#76d234', marker='x', label='Developers')\nplt.scatter(languages, educational_inst, color='#b40d5c', marker='*', label='Educational Institutions')\n\nplt.title('Languages and Their Users')\nplt.xlabel('Languages')\nplt.ylabel('Count')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/268.png')\nplt.show()\n```\nChoices:['JavaScript', 'Python', 'C++', 'Java']\nStudent's Response:Python\n",
    "Question Text:\nWhat hobby has the highest count of people based on the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt \n\nhobby = ['Reading', 'Gardening', 'Traveling', 'Painting', 'Dancing', 'Gaming']\npeople_count = [65, 48, 77, 45, 53, 69]\n\nplt.figure(figsize=(15,10))\n\nplt.scatter(hobby, people_count, color='#56d380', marker ='o')\n\nplt.title('Number of People with Different Hobbies')\nplt.xlabel('Hobbies')\nplt.ylabel('Count of People')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/269.png')\nplt.show()\n```\nChoices:['Reading', 'Gardening', 'Traveling', 'Painting', 'Dancing', 'Gaming']\nStudent's Response:Traveling\n",
    "Question Text:\nIn which year did Baseball see its least popularity?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sports data from 2015 to 2019\nyears = list(range(2015, 2020))\n\n# Data for 4 types of sports\nfootball_popularity = [50, 52, 51, 53, 52]\ncricket_popularity = [35, 37, 36, 39, 38]\nbasketball_popularity = [30, 35, 40, 43, 45]\nbaseball_popularity = [25, 23, 22, 25, 24]\n\nfig = plt.figure(figsize=(10, 7))\n\nplt.plot(years, football_popularity, color='#ff5467', marker='o', label='Football')\nplt.plot(years, cricket_popularity, color='#57ff64', marker='o', label='Cricket')\nplt.plot(years, basketball_popularity, color='#5467ff', marker='o', label='Basketball')\nplt.plot(years, baseball_popularity, color='#a154ff', marker='o', label='Baseball')\n\nplt.xlabel('Years')\nplt.ylabel('Popularity (%)')\nplt.title('Sports Popularity Over the Years')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/270.png')\nplt.show()\n```\nChoices:[2015, 2016, 2017, 2018, 2019]\nStudent's Response:2017.\n",
    "Question Text:\nDid the Beatles release more albums than Madonna?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nartists = ['Madonna', 'Eminem', 'Michael Jackson', 'Adele', 'Beatles']\nno_of_albums = [14, 10, 16, 6, 27]\n\n# Colors\ncolors = ['#008dc1']\n\n# Create scatter plot\nfig, ax = plt.subplots(figsize=(8, 4))\nax.scatter(artists, no_of_albums, color=colors[0], marker='o')\n\n# Set chart title and labels\nax.set_title('Number of Albums By Different Music Artists', fontsize=14)\nax.set_xlabel('Music Artists', fontsize=12)\nax.set_ylabel('Number of Albums', fontsize=12)\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/271.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDo rental property prices ever exceed house prices within the given years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nyears = np.array(range(2000, 2022))\nhouse_prices = np.array([2.0, 2.3, 2.7, 3.2, 4, 5.5, 6.0, 8.0, 8.5, 9.0, 9.5, 10.0, 11.0, 12.5, 13.2, 15, 16.5, 17.2, 19.0, 22.0, 24.5, 26.0])\ncommercial_prices = np.array([5, 5.5, 5.7, 6.2, 6.8, 7.3, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.2,17.0, 18.5, 20.2, 21.0,22.5, 24.0, 26.0])\nrental_prices= np.array([1.0, 1.2, 1.5, 1.8, 2.0, 2.5, 2.8, 3.0, 3.2, 3.5, 4.0, 4.2, 4.5,4.8, 5.0, 5.5, 6.0, 6.3, 6.5, 7.0, 7.5, 8.0])\ncondo_prices= np.array([1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0])\n\n# Figure size\nplt.figure(figsize=(10, 5))\n\n# Plotting data\nplt.plot(years, house_prices, marker='o', color='#fba6d8', label='House Prices')\nplt.plot(years, commercial_prices, marker='o', color='#1cabac', label='Commercial property prices')\nplt.plot(years, rental_prices, marker='o', color='#e5dfc4', label='Rental property prices')\nplt.plot(years, condo_prices, marker='o', color='#0544e6', label='Condominium prices')\n\n# Adding labels and legend\nplt.xlabel('Year')\nplt.ylabel('Prices in $100K')\nplt.title('Real Estate Prices over the Years')\nplt.legend()\n\n# Saving figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/273.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWas the score for football higher in the year 2017 than in 2016?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Different series of points representing various athletic activities\nfootball_data = [15, 18, 20, 19, 22]\ncricket_data = [18, 16, 19, 20, 22]\nbasketball_data = [22, 21, 24, 25, 26]\nhockey_data = [21, 20, 19, 20, 18]\ntennis_data = [16, 18, 19, 21, 23]\n\n# X-axis labels\nyears = ['2016', '2017', '2018', '2019', '2020']\n\n# Create line chart\nplt.figure(figsize=(10, 7))\nplt.plot(years, football_data, color='#514247', marker='o', label='Football')\nplt.plot(years, cricket_data, color='#e27de0', marker='o', label='Cricket')\nplt.plot(years, basketball_data, color='#47bfd0', marker='o', label='Basketball')\nplt.plot(years, hockey_data, color='#6824ca', marker='o', label='Hockey')\nplt.plot(years, tennis_data, marker='o', label='Tennis')\n\n# Add labels and title\nplt.title('Sports trend over the years')\nplt.xlabel('Years')\nplt.ylabel('Score')\nplt.legend()\n\n# Save the line chart\nif not os.path.exists('line_charts/line_charts_visual_linguistic/train'):\n    os.makedirs('line_charts/line_charts_visual_linguistic/train')\nplt.savefig('line_charts/line_charts_visual_linguistic/train/274.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich genre of books has the least sales in 2020 according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Book Sale data in thousands\ngenres = ['Science Fiction', 'Romance', 'Mystery', 'Horror', 'Biography']\nyears = [2016, 2017, 2018, 2019, 2020]\nsale_data = [[10, 15, 20, 30, 40], [12, 19, 22, 30, 35], [15, 20, 23, 35, 39], [20, 22, 24, 26, 28], [25, 30, 33, 35, 39]]\n\n# create a figure and axis\nfig, ax = plt.subplots(figsize=(15, 10))\n\n# plot each data-series\nfor i in range(5):\n    ax.plot(years, sale_data[i], label=genres[i], color='#853cba', marker='o')\n\n# set title and labels\nax.set_title('Book Sales Over Years')\nax.set_xlabel('Years')\nax.set_ylabel('Sales (in thousands)')\n\n# show a legend\nax.legend()\n\n# Save figure\nos.makedirs('line_charts/line_charts_visual_linguistic/train', exist_ok=True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/276.png')\n\nplt.show()\n```\nChoices:['Science Fiction', 'Romance', 'Mystery', 'Horror', 'Biography']\nStudent's Response:Horror\n",
    "Question Text:\nWas the population of birds in 2020 more than that in 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# List of years from 2000 to 2020\nx = list(range(2000, 2021))\n\n# Birds population data in millions\ny = [1800, 1824, 1848, 1872, 1896, 1920, 1944, 1972, 2000, 2028, 2132, 2176, 2220, 2295, 2370, 2445, 2520, 2550, 2570, 2590, 2610]\n\nplt.figure(figsize=(10,5))\nplt.plot(x, y, color='#40143b', marker='o')\nplt.title('Birds Population Over the Years')\nplt.ylabel('Population in millions')\nplt.xlabel('Year')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/278.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDid the yield of Crop 1 exceed Crop 2 in the year 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = range(2000, 2021)\n\n# This data represents the annual yield (in tons) of two crops\ncrop1_yield = [2.0, 2.1, 2.2, 2.2, 2.3, 2.4, 2.5, 2.5, 2.6, 2.7, 2.8, 3.0, 3.2, 3.5, 3.7, 4.0, 4.2, 4.5, 4.7, 5.0, 5.3]\ncrop2_yield = [1.0, 1.2, 1.3, 1.5, 1.7, 1.9, 2.1, 2.3, 2.5, 2.7, 2.8, 3.0, 3.3, 3.5, 3.6, 3.8, 4.0, 4.2, 4.5, 4.7, 5.0]\n\nfig, ax = plt.subplots(figsize=(15,7))\n\nax.plot(years, crop1_yield, color='#41a8ed', marker='o', label='Crop 1')\nax.plot(years, crop2_yield, color='#687369', marker='v', label='Crop 2')\n\nax.set_title('Crop Yields over Years')\nax.set_xlabel('Year')\nax.set_ylabel('Yield (In tons)')\n\nax.legend()\n\nplt.grid()\nplt.tight_layout()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/279.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nHas the Global Temperature Changes always been increasing over the years in the given data?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data\nyears = [2000, 2005, 2010, 2015, 2020]\ntemp_changes = [0.4, 0.6, 1.2, 1.5, 2.0] # Global temperature change in  Celsius\nsea_level_changes  = [0.04, 0.09, 0.16, 0.24, 0.33] # Sea level changes in meters\narctic_ice_loss = [1.5, 2.2, 3.0, 4.1, 5.4] # Arctic ice loss in million km^2\ngreenhouse_gases = [370, 380, 390, 400, 410] # ppm\navg_rainfall=[100, 110, 120, 130, 140] # avg global rainfall in cm\n\n# Initializing the figure and setting its size\nplt.figure(figsize=(12, 8))\n\n# Adding lines\nplt.plot(years, temp_changes, marker='o', label='Global Temp Changes (\u00b0C)')\nplt.plot(years, sea_level_changes, marker='o', label='Sea Level Changes (m)')\nplt.plot(years, arctic_ice_loss, marker='o', label='Arctic Ice Loss (million km^2)')\nplt.plot(years, greenhouse_gases, marker='o', label='Greenhouse Gases (ppm)')\nplt.plot(years, avg_rainfall, marker='o', label='Average Rainfall (cm)')\n\n# Setting title and labels\nplt.title('Chart Showing Impact of Global Warming over the Years', fontsize=14)\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('Scale Values', fontsize=12)\n\n# Adding legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/280.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nHow many Tigers were there in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data Creation\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ntigers = [3200, 3300, 3350, 3400, 3450, 3500, 3600, 3700, 3800, 3900, 4000]\nelephants = [50000, 49500, 49000, 48700, 48500, 48000, 47500, 47000, 46500, 46000, 45500]\nrhinos = [2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3750, 3900, 4100]\npandas = [1600, 1650, 1700, 1750, 1800, 1850, 1920, 2000, 2100, 2200, 2300]\npenguins = [21000, 20800, 20500, 20200, 20000, 19800, 19600, 19400, 19200, 19000, 18800]\n\n# Plotting the Data\nplt.figure(figsize=(10, 6))\n\nplt.plot(years, tigers, marker='o', color='#c05f3a', label='Tigers')\nplt.plot(years, elephants, marker='o', color='#9a39c3', label='Elephants')\nplt.plot(years, rhinos, marker='o', color='b', label='Rhinos')\nplt.plot(years, pandas, marker='o', color='g', label='Pandas')\nplt.plot(years, penguins, marker='o', color='y', label='Penguins')\n\nplt.title('Wildlife Conservation (2010-2020)')\nplt.xlabel('Years')\nplt.ylabel('Population Count')\nplt.legend(loc='best')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/281.png')\nplt.show()\n```\nChoices:['3200', '4000', '3300', '4100']\nStudent's Response:4000\n",
    "Question Text:\nWhat bird species experienced the most growth in population from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = list(range(2000, 2021))\nparrot_population = [200, 220, 245, 250, 252, 300, 312, 315, 320, 330, 340, 350, 370, 380, 400, 410, 440, 480, 500, 520, 540]\neagle_population = [300, 320, 330, 320, 310, 290, 280, 275, 270, 280, 290, 305, 310, 320, 330, 340, 360, 370, 390, 410, 430]\nsparrow_population = [100, 120, 140, 160, 180, 190, 200, 210, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400, 440, 480, 500]\n\n# creating the scatter plot\nplt.figure(figsize=(10, 6))\nplt.scatter(years, parrot_population, color='#cf4386', label='Parrot population')\nplt.scatter(years, eagle_population, color='#30b129', label='Eagle population')\nplt.scatter(years, sparrow_population, color='#4287f5', label='Sparrow population')\n\n# labels and legends\nplt.title(\"Bird Populations Over Time\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Population\")\nplt.legend()\n\n# save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/282.png')\n\nplt.show()\n```\nChoices:['Parrot', 'Eagle', 'Sparrow']\nStudent's Response:Sparrow\n",
    "Question Text:\nWhich year did 'Alice's Adventures in Wonderland' reach the sales of 100,000 copies?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(1865, 1899))\nbooks_sold = [5000, 9000, 15000, 20000, 25000, 30000, 35000, 37000, 40000, 45000, 50000, 55000, 60000, 65000, 71000,\n              75000, 80000, 85000, 90000, 95000, 100000, 105000, 110000, 115000, 120000, 125000, 130000, 135000, 140000,\n              145000, 150000, 155000, 160000, 170000]\n\n# Generate a plot\nplt.figure(figsize=[10,5])\nplt.plot(years, books_sold, color = '#c58030', marker = 'o')\n\nplt.title('Total Number of \\'Alice\\'s Adventures in Wonderland\\' Books Sold by Lewis Carroll (1865-1898)')\nplt.xlabel('Year')\nplt.ylabel('Number of Books Sold')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/283.png')\nplt.show()\n```\nChoices:['1865', '1890', '1885', '1895']\nStudent's Response:1890\n",
    "Question Text:\nWhich city has the highest GDP growth?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncities = ['New York', 'London', 'Tokyo', 'Paris', 'Sydney']\npopulation_growth = [1.1, 2.3, -0.4, 0.8, 1.5] # in percentage\ngdp_growth = [2.1, 1.8, -0.2, 1.3, 2.2] # in percentage\n\n# Large figure size to avoid word overlap for long labels\nplt.figure(figsize=(10, 6))\n\n# Line chart\nplt.plot(cities, population_growth, color='#f0696f', marker='o',label='Population Growth')\nplt.plot(cities, gdp_growth, color='#b1d28c', marker='o',label='GDP Growth')\n\n# Labels, legend and a title\nplt.xlabel('Cities')\nplt.ylabel('Growth in %')\nplt.title('Cities: Population and GDP Growth')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/284.png')\n\n# Show the line chart\nplt.show()\n```\nChoices:['New York', 'London', 'Tokyo', 'Paris', 'Sydney']\nStudent's Response:'Sydney'\n",
    "Question Text:\nDid the Mercedes sales in thousands rise every year from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data related to Cars.\ncar_brands = ['Mercedes', 'BMW', 'Lamborghini', 'Ferrari', 'Bugatti']\nyears = list(range(2016, 2021))\nsales_in_thousands = [ [85, 90, 105, 120, 130], # Mercedes\n                      [80, 95, 100, 110, 115], # BMW\n                      [50, 60, 65, 68, 75], # Lamborghini\n                      [70, 75, 80, 85, 90], # Ferrari\n                      [20, 25, 27, 30, 35]]  # Bugatti\n\n# Colors for each line.\ncolors = ['#8e436e', '#a83249', '#761113', '#d63c30', '#000000']\n\nplt.figure(figsize=(10,6))\nfor idx, brand in enumerate(car_brands):\n    plt.plot(years, sales_in_thousands[idx], color=colors[idx], marker='o', label=brand)\n    \nplt.xlabel('Years')\nplt.ylabel('Sales (in thousands)')\nplt.title('Car Sales from 2016 to 2020')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/285.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the revenue from the Fashion Industry increase every year from 2011 till 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for fashion industry\nyears = np.arange(2011, 2022, 1)\nrevenue = [75,79,86,92,98,107,113,120,128,134,140]\n\nplt.figure(figsize=(8,6))\n\nplt.plot(years, revenue, marker='o', color='purple', label='Fashion Industry Revenue')\n\nplt.xlabel('Years', fontsize=14)\nplt.ylabel('Revenue (in billion USD)', fontsize=14)\nplt.title('Yearly Fashion Industry Revenue from 2011 till 2021', fontsize=16)\n\nplt.grid(True)\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/286.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the drawn line chart, what was the price of a Single Family house in 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2021))\ncondo_prices = [200000, 210000, 220000, 230000, 250000, 270000, 280000, 300000, 310000, 320000, 340000]\ntownhouse_prices = [220000, 220000, 225000, 230000, 245000, 260000, 270000, 275000, 280000, 285000, 290000]\nsingle_family_prices = [250000, 260000, 265000, 275000, 290000, 300000, 310000, 330000, 345000, 360000, 380000]\n\nplt.figure(figsize=(10,5))\nplt.plot(years, condo_prices, marker='o', color='#2d0a93', label='Condo')\nplt.plot(years, townhouse_prices, marker='o', color='g', label='Townhouse')\nplt.plot(years, single_family_prices, marker='o', color='b', label='Single Family')\n\nplt.xlabel('Years')\nplt.ylabel('Median Housing Prices')\nplt.title('Annual Median Housing Prices for Different Types of Houses')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/287.png')   \nplt.show()\n```\nChoices:['$270,000', '$280,000', '$300,000', '$320,000']\nStudent's Response:$300,000\n",
    "Question Text:\nDid Twitter users exceed Instagram users in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Social Media Users in Thousands\nfacebook = [2550, 2800, 3100, 3400, 3750]\ntwitter = [1900, 2100, 2300, 2550, 2800]\ninstagram = [1750, 2000, 2250, 2550, 2800]\nlinkedin = [1100, 1200, 1300, 1400, 1500]\nyears = ['2016', '2017', '2018', '2019', '2020']\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, facebook, marker='o', color='#804678', label=\"Facebook\")\nplt.plot(years, twitter, marker='o', color='#9e3a6c', label=\"Twitter\")\nplt.plot(years, instagram, marker='o', color='#d86094', label=\"Instagram\")\nplt.plot(years, linkedin, marker='o', color='#33cc99', label=\"LinkedIn\")\n\nplt.xlabel('Years')\nplt.ylabel('Users in Thousands')\nplt.title('Social Media Users Over the Years')\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/288.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWas the number of people attended in Festival5 in 2020 more than the people attended in Festival1 in 2016?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# List of festivals\nfestivals = ['Festival1', 'Festival2', 'Festival3', 'Festival4', 'Festival5']\n\n# Number of people attended in each festival\nfestival1 = [3500, 4500, 5500, 6500, 7500]\nfestival2 = [4000, 5000, 6000, 7000, 8000]\nfestival3 = [4500, 5500, 6500, 7500, 8500]\nfestival4 = [5000, 6000, 7000, 8000, 9000]\nfestival5 = [5500, 6500, 7500, 8500, 9500]\n\n# Years\nyears = ['2016', '2017', '2018', '2019', '2020']\n\n# Plotting details\nplt.figure(figsize=(12, 8))\nplt.scatter(years, festival1, color='#9bc219', label='Festival1')\nplt.scatter(years, festival2, color='#983424', label='Festival2')\nplt.scatter(years, festival3, color='#4cb4dd', label='Festival3')\nplt.scatter(years, festival4, color='#362350', label='Festival4')\nplt.scatter(years, festival5, color='#def295', label='Festival5')\n\n# Setting labels and title\nplt.title('Number of People Attended in Festivals')\nplt.xlabel('Years')\nplt.ylabel('Number of People')\nplt.legend(loc='upper left')\n\n# Saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/289.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the popularity (in millions) of Rock music exceed 90 in 2018?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Fixing random state for reproducibility\nyears = [2014, 2015, 2016, 2017, 2018, 2019, 2020]\nrock_music = [80, 85, 87, 89, 92, 95, 97]\npop_music = [100, 98, 96, 94, 92, 90, 88]\njazz_music = [60, 63, 66, 70, 75, 80, 85]\n\nplt.figure(figsize=(8, 5))\n\nplt.plot(years, rock_music, 'ro-', label='Rock Music')\nplt.plot(years, pop_music, 'bo-', label='Pop Music')\nplt.plot(years, jazz_music, 'go-', label='Jazz Music')\n\nplt.title('Music Popularity Over The Years')\nplt.xlabel('Years')\nplt.ylabel('Popularity (in millions)')\nplt.legend(loc='best')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/290.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich sport had the highest score in the year 2016?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Different series of data\nyears = [2000, 2004, 2008, 2012, 2016]\nfootball_scores = [20, 24, 19, 32, 27]\ncricket_scores = [15, 18, 22, 26, 33]\nbasketball_scores = [30, 27, 29, 31, 34]\n\nplt.figure(figsize=(10,7)) # set the figure size\n\n# Plotting the data\nplt.plot(years, football_scores, marker='o', label=\"Football Scores\")\nplt.plot(years, cricket_scores, marker='o', label=\"Cricket Scores\")\nplt.plot(years, basketball_scores, marker='o', label=\"Basketball Scores\")\n\n# Setting labels, title and legend for the plot\nplt.xlabel(\"Years\") \nplt.ylabel(\"Scores\")\nplt.title(\"Scores of Different Sports over the Years\")\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/291.png')\n\nplt.show()\n```\nChoices:['Football', 'Cricket', 'Basketball']\nStudent's Response:\"Basketball\"\n",
    "Question Text:\nDid the USA have more than 70 million tourist arrivals in any year within 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#data\nyears = list(range(2010, 2021))\ntourism_data_usa = [60, 62, 63, 65, 66, 69, 70, 72, 73, 75, 76] # in millions\ntourism_data_france = [75, 78, 80, 81, 82, 85, 88, 90, 92, 94, 95] # in millions\n\nplt.figure(figsize=(10,5))\n\n# plotting the line charts\nplt.plot(years, tourism_data_usa, marker='o', label='USA')\nplt.plot(years, tourism_data_france, marker='o', label='France')\n\n# labeling the elements\nplt.xlabel('Years')\nplt.ylabel('Tourist Arrivals (in millions)')\nplt.legend(title=\"Countries\")\nplt.title('Tourist Arrivals (in millions) in USA and France (2010-2020)')\n\n# saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/293.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes.\n",
    "Question Text:\nHas the number of people engaged in dancing been consistently increasing every year since 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# check if the directories exist\nif not os.path.isdir(\"line_charts\"):\n    os.mkdir(\"line_charts\")\nif not os.path.isdir(\"line_charts/line_charts_visual_linguistic\"):\n    os.mkdir(\"line_charts/line_charts_visual_linguistic\")\nif not os.path.isdir(\"line_charts/line_charts_visual_linguistic/train\"):\n    os.mkdir(\"line_charts/line_charts_visual_linguistic/train\")\n\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nreading = [10, 14, 18, 30, 25, 28, 31, 32, 33, 35, 38]\npainting = [15, 20, 18, 17, 21, 20, 22, 24, 26, 27, 29]\ngaming = [5, 6, 8, 9, 12, 15, 18, 25, 28, 30, 35]\nmusic = [8, 10, 12, 14, 15, 17, 17, 18, 20, 25, 26]\ndancing = [20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33]\n\nplt.figure(figsize=(10,6))\nplt.plot(years, reading, color='#d81e9d', label='Reading', marker='o')\nplt.plot(years, painting, color='#991340', label='Painting', marker='o')\nplt.plot(years, gaming, color='#492c8a', label='Gaming', marker='o')\nplt.plot(years, music, color='#dee66e', label='Music', marker='o')\nplt.plot(years, dancing, color='#63e5f1', label='Dancing', marker='o')\n\nplt.xlabel('Years')\nplt.ylabel('People Engaged (in thousands)')\nplt.title('People Engaged in Different Hobbies Over the Years')\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/294.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs 'Coal' the source which generates most of the energy according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating some data\nsources = ['Coal', 'Natural Gas', 'Nuclear', 'Hydroelectric', 'Wind', 'Solar', 'Biomass']\nenergy_generated = [46, 21, 10, 7, 9, 5, 2]  # in percentage\n\n# Set larger figure size if labels are getting overlapped\nplt.figure(figsize=(10, 6))\n\n# scatter plot\nplt.scatter(sources, energy_generated, marker='o')\n\n# labels and title\nplt.xlabel('Energy Sources')\nplt.ylabel('Energy Generated (%)')\nplt.title('Energy Sources Vs. Energy Generated')\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/295.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the grade in history in the 1st year higher than that in the 2nd year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nmath_grade = [89, 92, 78, 85, 93]\nbiology_grade = [75, 81, 86, 92, 88]\nchemistry_grade = [92, 89, 85, 80, 76]\nphysics_grade = [90, 92, 94, 86, 80]\nhistory_grade = [76, 72, 78, 79, 81]\n\n# X values - Course Year\ncourse_year = [1, 2, 3, 4, 5]\n\nplt.figure(figsize=[10,8])\n\n# Creating line plots\nplt.plot(course_year, math_grade, marker='o', markersize=4, color='#f48044', label='Math')\nplt.plot(course_year, biology_grade, marker='o', markersize=4, color='#713f1e', label='Biology')\nplt.plot(course_year, chemistry_grade, marker='o', markersize=4, color='#47759c', label='Chemistry')\nplt.plot(course_year, physics_grade, marker='o', markersize=4, color='#c1697f', label='Physics')\nplt.plot(course_year, history_grade, marker='o', markersize=4, color='#c1f480', label='History')\n\n# Adding title and labels\nplt.title('Students Grade Overview')\nplt.xlabel('Course Year')\nplt.ylabel('Grade')\n\n# Adding legend\nplt.legend(loc='best')\n\n# Saving the figure as mentioned\nplt.savefig('line_charts/line_charts_visual_linguistic/train/296.png')\n\n# Showing the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which time interval did events in Asia increase the most compared to the previous interval?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Historical Events\nyears = list(range(1950, 2020, 10))\nEvents_Americas = [25, 35, 50, 45, 65, 58, 70]\nEvents_Europe = [30, 45, 55, 70, 80, 75, 90]\nEvents_Asia = [20, 40, 50, 60, 70, 70, 80]\n\nplt.figure(figsize=(8, 6))\n\nplt.plot(years, Events_Americas, marker='o', color='#86e6ac', label=\"Americas\")\nplt.plot(years, Events_Europe, marker='o', color='#37386c', label=\"Europe\")\nplt.plot(years, Events_Asia, marker='o', color='#1798c6', label=\"Asia\")\n\nplt.xlabel('Years')\nplt.ylabel('Number of Historical Events')\nplt.title('Number of Historical Events Over Time')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/297.png')\nplt.show()\n```\nChoices:['1950-1960', '1960-1970', '1970-1980', '1980-1990', '1990-2000', '2000-2010']\nStudent's Response:2.\n",
    "Question Text:\nDid the number of cars increase every year from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2015, 2016, 2017, 2018, 2019, 2020]\nnumber_of_cars = [50, 70, 90, 120, 150, 170]\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, number_of_cars, marker='o', color='#db769d')\n\nplt.title(\"Number of cars per year\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Number of cars\")\nplt.legend(['Number of cars per year'], loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/298.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the technology usage decrease anytime between the years 2015 and 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nx_values = [2015, 2016, 2017, 2018, 2019, 2020, 2021]\ny_values = [0.35, 0.5, 0.85, 1.65, 2.8, 3.9, 5.25]\n\nfig, ax = plt.subplots(figsize=(10,6))\n\nax.scatter(x_values, y_values, color='#7212ba', marker='o')\n\nax.set_title('Increase of Technology Usage over the Years', fontsize=15, fontweight='bold')\nax.set_xlabel('Year', fontsize=12)\nax.set_ylabel('Usage (in billion hours per day)', fontsize=12)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/299.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n: Is the plot for Winter temperature pattern represented by the purple series of points in the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nx = list(range(10))\ny1 = [i**2 for i in x]\ny2 = [i**1.5 for i in x]\ny3 = [i*1.2 for i in x]\ny4 = [i/1.5 for i in x]\n\n# Setup figure and axes\nfig, ax = plt.subplots(figsize=(10,7))\n\n# Draw Scatter plots\nscatter1 = ax.scatter(x, y1, color='#ba3b35', label='Spring')\nscatter2 = ax.scatter(x, y2, color='green', label='Summer')\nscatter3 = ax.scatter(x, y3, color='blue', label='Autumn')\nscatter4 = ax.scatter(x, y4, color='purple', label='Winter')\n\n# Set labels and Titles\nax.set_xlabel('Time(Days)')\nax.set_ylabel('Temperature(\u00b0C)')\nax.set_title('Weather Patterns Over Time')\nax.legend(loc='upper left')\n\n# Save the figures\nplt.savefig('line_charts/line_charts_visual_linguistic/train/300.png')\n\nplt.show()\n\n\nscatter4 = ax.scatter(x, y4, color='purple', label='Winter')\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: What was the quantity of Cars in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Transportation data\ncars = [50, 60, 70, 80, 90]\nbikes = [30, 40, 50, 60, 70]\ntrains = [10, 20, 30, 40, 50]\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=(10,6)) # Making figure size large to avoid word overlap\nplt.scatter(years, cars, color='g', marker='o', label='Cars')\nplt.scatter(years, bikes, color='b', marker='x', label='Bikes')\nplt.scatter(years, trains, color='r', marker='s', label='Trains')\n\n# Adding chart details\nplt.xlabel('Years')\nplt.ylabel('Number in Thousands')\nplt.title('Transportation')\nplt.legend()\n\n# Save Figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/301.png')\n\nplt.show()\n```\nChoices:[70, 80, 50, 90]\nStudent's Response:80\n",
    "Question Text:\nHas the production of Wind Energy increased from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#  Data for the scatter plot\nsolar_energy = [30, 25, 35, 45, 50]\nwind_energy = [45, 35, 40, 45, 55]\nhydro_energy = [50, 55, 60, 70, 70]\nnuclear_energy = [30, 35, 40, 45, 60]\nthermal_energy = [40, 45, 50, 55, 60]\n\nyears = [2016, 2017, 2018, 2019, 2020]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10,8))\n\n# Create scatter plot\nax.scatter(years, solar_energy, color='#5a75cb', label='Solar Energy')\nax.scatter(years, wind_energy, color='#37e857', label='Wind Energy')\nax.scatter(years, hydro_energy, color='#ee8424', label='Hydro Energy')\nax.scatter(years, nuclear_energy, color='#ed3eca', label='Nuclear Energy')\nax.scatter(years, thermal_energy, color='#4ef542', label='Thermal Energy')\n\n\n# Set title and labels\nax.set_title('Energy Sources')\nax.set_xlabel('Years')\nax.set_ylabel('Energy in Terawatt-hours (TWh)')\n\n# Create a legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/302.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich hobby is preferred by more people in Group A compared to Group B?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nhobbies = ['Gaming', 'Reading', 'Fishing', 'Singing', 'Painting']\npeople_A = [65, 90, 55, 80, 60]\npeople_B = [85, 70, 75, 110, 95]\n\nfig, ax = plt.subplots(figsize=(12, 7))\n\n# Create the scatter plots with specific markers\nax.scatter(hobbies, people_A, marker='o', label='People A')\nax.scatter(hobbies, people_B, marker='^', label='People B')\n\n# Add labels and title\nax.set_xlabel('Hobbies', size=15)\nax.set_ylabel('People Engaged (in thousands)', size=15)\nax.set_title('Hobbies Comparison between Group A and B', size=20)\n\nplt.xticks(rotation=45)\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/303.png')\n\nplt.show()\n```\nChoices:['Gaming', 'Singing', 'Reading', 'Fishing', 'Painting']\nStudent's Response:Reading\n",
    "Question Text:\nWhat of the following was the highest in 2005 based on the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nyears = np.arange(2000, 2020)\nco2_emissions = np.array([25, 27, 29, 31, 33, 32, 32, 32, 34, 35, 37, 38, 40, 43, 45, 47, 50, 50, 51, 52])  # billions of tons\ndeforestation = np.array([30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11])  # million hectares\nglacier_melt = np.array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29])  # meters cubed x 1e6\n\nplt.figure(figsize=[10,5])\n\nplt.plot(years, co2_emissions, color='#cd9de5', marker='o', label='CO2 Emissions')\nplt.plot(years, deforestation, color='#8fdfed', marker='o', label='Deforestation')\nplt.plot(years, glacier_melt, color='#f2cd9d', marker='o', label='Glacier Melt')\nplt.legend()\n\nplt.title('Global Warming Indicators Over Time')\nplt.xlabel('Years')\nplt.ylabel('Amount')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/304.png')\nplt.show()\n```\nChoices:['CO2 Emissions', 'Deforestation', 'Glacier Melt']\nStudent's Response:CO2 Emissions\n",
    "Question Text:\nIn which year was the number of comedy movies the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data series\nromance = [24, 23, 22, 21, 25]\ncomedy = [28, 26, 30, 24, 26]\naction = [25, 27, 29, 28, 30]\nthriller = [22, 23, 21, 20, 22]\ndocumentary = [21, 22, 20, 21, 20]\n\n# Years\nyears = [2016, 2017, 2018, 2019, 2020]\n\n# Create scatter plot\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Add data to the plot\nax.scatter(years, romance, color='blue', marker='o', label=\"Romance\")\nax.scatter(years, comedy, color='red', marker='o', label=\"Comedy\")\nax.scatter(years, action, color='green', marker='o', label=\"Action\")\nax.scatter(years, thriller, color='orange', marker='o', label=\"Thriller\")\nax.scatter(years, documentary, color='purple', marker='o', label=\"Documentary\")\n\n# Set the title and labels\nax.set_title('Number of Movies Released by Genre and Year', fontsize=14)\nax.set_xlabel('Year', fontsize=12)\nax.set_ylabel('Number of Movies', fontsize=12)\n\n# Add legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/305.png')\n\n# Display the figure\nplt.show()\n```\nChoices:['2016', '2017', '2018', '2019', '2020']\nStudent's Response:2018\n",
    "Question Text:\nDid the Gothic style of architecture have higher popularity than the Neoclassical style every year between 1800 and 1900?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for 5 architectural style's popularity over time\ngothic = [1, 2, 3, 5, 7, 11, 13, 15, 17, 19]\nrenaissance = [2, 3, 5, 6, 8, 10, 12, 13, 15, 17]\nmodern = [1, 1, 2, 2, 3, 5, 6, 7, 8, 9]\nbaroque = [2, 2, 3, 3, 4, 5, 6, 6, 7, 7]\nneoclassical = [1, 1, 2, 2, 2, 3, 3, 3, 4, 4]\n\nyears = [i for i in range(1800, 1900, 10)]\n\n# Create plot\nplt.figure(figsize=(10, 5))\n\nplt.plot(years, gothic, marker='o', label='Gothic')\nplt.plot(years, renaissance, marker='o', label='Renaissance')\nplt.plot(years, modern, marker='o', label='Modern')\nplt.plot(years, baroque, marker='o', label='Baroque')\nplt.plot(years, neoclassical, marker='o', label='Neoclassical')\n\n# Formatting graph\nplt.title('Popularity of Architectural Styles Over Time')\nplt.xlabel('Years')\nplt.ylabel('Number of Buildings Constructed (in thousands)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/308.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nFrom the plot, which student has the same score in both Math and English?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Grades of students in Math and English\nmath_grades = [78, 85, 95, 82, 99, 78, 73, 85, 90, 81]\nenglish_grades = [85, 90, 90, 82, 96, 79, 85, 80, 85, 80]\n\n# Students' names\nstudents = ['Alex', 'Bob', 'Charlie', 'Dave', 'Eva', 'Felix', 'George', 'Hannah', 'Ivy', 'Jack']\n\nplt.figure(figsize=(10,5)) \n\n# Create Scatter plot\nplt.scatter(students, math_grades, color='#7896b1', marker='o', label='Math grades')\nplt.scatter(students, english_grades, color='#cd4bb1', marker='o', label='English grades')\n\n# Titles and labels\nplt.title('Grades in Math and English')\nplt.xlabel('Students')\nplt.ylabel('Grades')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/309.png')\nplt.show()\n```\nChoices:['Alex', 'Bob', 'Charlie', 'Dave', 'Eva', 'Felix', 'George', 'Hannah', 'Ivy', 'Jack']\nStudent's Response:Bob\n",
    "Question Text:\nIn which year does the line representing the popularity of pop music first reach a score of 80?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2021))\npopularity_scores = [45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 70, 65, 60, 70, 75, 80, 85, 90, 95, 100]\n\n# Create the plot\nplt.figure(figsize=(10,5))\nplt.plot(years, popularity_scores, marker='o', color='#4c00bf', label='Pop Music')\n\n# Add a legend, labels and title\nplt.legend()\nplt.xlabel('Year')\nplt.ylabel('Popularity Score')\nplt.title('Popularity of Pop Music over the Years')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/310.png')\nplt.show()\n```\nChoices:[2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008]\nStudent's Response:2007\n",
    "Question Text:\nWhich sport's scores remained steady from 2000 - 2010(the sport that did not have as much increase in score)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data for plotting\nyears = list(range(2000, 2011))\nfootball_scores = [10, 15, 19, 22, 25, 34, 40, 52, 62, 66, 75]\nbasketball_scores = [9, 14, 18, 21, 27, 32, 37, 44, 58, 66, 69]\ntennis_scores = [7, 13, 17, 21, 26, 31, 36, 42, 48, 55, 63]\n\nplt.figure(figsize=(10, 5))\nplt.plot(years, football_scores, marker='x', color='#0bad5d', label='Football')\nplt.plot(years, basketball_scores, marker='o', color='#ee39b2', label='Basketball')\nplt.plot(years, tennis_scores, marker='v', color='#7d5de2', label='Tennis')\n\nplt.title('Sports Scores from 2000 - 2010')\nplt.xlabel('Years')\nplt.ylabel('Scores')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/314.png')\nplt.show()\n```\nChoices:['Football', 'Basketball', 'Tennis']\nStudent's Response:Basketball\n",
    "Question Text:\nWhich city had the highest number of visitors?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncities = ['Paris', 'New York', 'Tokyo', 'Rio']\nvisitors = [15, 20, 25, 10]\ndays_stayed = [5, 7, 8, 10]\nmoney_spent = [1250, 1500, 1600, 800]\nflights = [90, 120, 150, 60]\n\nplt.figure(figsize=[10,8])\n\nplt.scatter(cities, visitors, color='#265e4e', label='Number of visitors (in thousands)')\nplt.scatter(cities, days_stayed, color='blue', label='Average days stayed')\nplt.scatter(cities, money_spent, color='red', label='Average money spent (in $)')\nplt.scatter(cities, flights, color='green', label='Number of Flights (in thousands)')\n\nplt.xlabel('Cities')\nplt.ylabel('Values')\nplt.title('Travel Data')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/315.png')\n\nplt.show()\n```\nChoices:['Paris', 'New York', 'Tokyo', 'Rio']\nStudent's Response:Tokyo\n",
    "Question Text:\nWhat was the festival with the lowest number of participants in 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for plotting\nFestival_data = {\n    \"Diwali\": [413, 435, 487, 528, 569],\n    \"Christmas\": [390, 421, 459, 488, 515],\n    \"Easter\": [325, 345, 360, 383, 405],\n    \"Halloween\": [295, 315, 345, 372, 400]\n}\n\nyears = [2015, 2016, 2017, 2018, 2019]\n\n\n# Plotting the data\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.plot(years, Festival_data[\"Diwali\"], marker='o', label='Diwali')\nax.plot(years, Festival_data[\"Christmas\"], marker='o', label='Christmas')\nax.plot(years, Festival_data[\"Easter\"], marker='o', label='Easter')\nax.plot(years, Festival_data[\"Halloween\"], marker='o', label='Halloween')\n\nax.set(title='Number of Participants in Festivals per Year', xlabel='Year', ylabel='Number of participants')\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/317.png')\n\nplt.show()\n```\nChoices:['Diwali', 'Christmas', 'Easter', 'Halloween']\nStudent's Response:'Halloween'\n",
    "Question Text:\nWhat was the real estate type whose price kept increasing each year from 2000 to 2020 without any decrease?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2021))\nhouse_prices = [100000, 120000, 140000, 150000, 140000, 150000, 200000, 210000, 230000, \n                240000, 250000, 260000, 270000, 280000, 290000, 310000, 320000, 330000, \n                340000, 360000, 370000]\napartment_prices = [80000, 90000, 95000, 100000, 110000, 120000, 130000, 140000, \n                    150000, 160000, 170000, 180000, 190000, 200000, 210000, 220000, \n                    230000, 240000, 250000, 260000, 270000]\nland_prices = [50000, 60000, 65000, 70000, 75000, 80000, 85000, 90000, 95000, 100000, \n               105000, 110000, 115000, 120000, 125000, 130000, 135000, 140000, 145000, \n               150000, 155000]\n\nplt.figure(figsize=(10, 6))\n\n# Plotting the lines\nplt.plot(years, house_prices, color='#1c944a', marker='o', label='House Prices')\nplt.plot(years, apartment_prices, color='r', marker='o', label='Apartment Prices')\nplt.plot(years, land_prices, color='b', marker='o', label='Land Prices')\n\n# Adding a legend\nplt.legend()\n\n# Adding labels and title\nplt.xlabel('Year')\nplt.ylabel('Price (in dollars)')\nplt.title('Real Estate Price Trends from 2000 to 2020')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/318.png')\nplt.show()\n```\nChoices:['House', 'Apartment', 'Land']\nStudent's Response:'Land'\n",
    "Question Text:\nDid the number of exhibitions of 'The Persistence Of Memory' painting increase from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Initialize paintings data\nMonaLisa = [32, 25, 30, 27, 33]\nStarryNight = [27, 28, 32, 30, 29]\nTheScream = [31, 29, 32, 30, 31]\nThePersistenceOfMemory = [34, 35, 36, 35, 36]\nGirlWithPearlEarring = [32, 33, 32, 33, 34]\n\n# Define x-axis\nYears = [2000, 2005, 2010, 2015, 2020]\n\n# Create scatter plot\nplt.figure(figsize=(10, 7))\nplt.scatter(Years, MonaLisa, label='Painting - Mona Lisa')\nplt.scatter(Years, StarryNight, label='Painting - Starry Night')\nplt.scatter(Years, TheScream, label='Painting - The Scream')\nplt.scatter(Years, ThePersistenceOfMemory, label='The Persistence Of Memory')\nplt.scatter(Years, GirlWithPearlEarring, label='Painting - Girl With Pearl Earring')\n\n# Set relevant labels\nplt.xlabel('Years')\nplt.ylabel('Number of Exhibitions')\nplt.title('Number of Exhibitions of Paintings Over Years')\nplt.legend()\n\n# Save to the specified path\nplt.savefig('line_charts/line_charts_visual_linguistic/train/319.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAre there more Dogs than Cats in the scatter chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Specified data\nanimals = ['Dog', 'Cat', 'Mouse', 'Rabbit', 'Bird']\ncount = [22, 18, 15, 12, 20]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Scatter plot\nax.scatter(animals, count)\n\n# Set title and labels\nax.set_title('Number of Animals')\nax.set_xlabel('Animals')\nax.set_ylabel('Count')\n\n# Save image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/320.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich of the following best describes the general trend of the graphs for the period 1990-2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(1990, 2020))\nCO2_conc = [354.39, 356.21, 357.1, 358.83, 360.82, 362.61, 363.73, 366.7, 368.38, 369.52, 371.14, 373.28, 375.8, 377.49, 379.8, 381.9, 383.79, 385.59, 387.43, 391.65, 393.85, 396.52, 398.65, 400.83, 402.8, 404.83, 406.81, 408.52, 411.43, 413.32]\nglobal_temp = [14.62, 14.4, 14.73, 14.61, 14.63, 14.82, 14.83, 14.96, 14.98, 14.91, 14.98, 15.61, 15.63, 15.73, 15.93, 15.94, 15.99, 16.04, 15.86, 16.2, 16.03, 16.18, 16.51, 16.34, 16.53, 16.63, 16.69, 16.84, 16.79, 17]\nsea_ice_extent = [12, 11.9, 11.8, 11.6, 11.5, 11.3, 11, 10.7, 10.4, 10, 9.5, 9.2, 8.5, 8, 7.8, 7.5, 7.1, 6.8, 6.7, 6.5, 6.2, 5.9, 5.7, 5.5, 5.4, 5.2, 5, 4.8, 4.7, 4.5]\n\nplt.figure(figsize = (20, 10))\nplt.plot(years, CO2_conc, marker='o', color='#4914ce', label='CO2 concentration/ppm')\nplt.plot(years, global_temp, marker='o', color='r', label='Global temperature/\u00b0C')\nplt.plot(years, sea_ice_extent, marker='o', color='g', label='Sea-ice extent/million km^2')\n\nplt.title('Global Warming (1990-2019)')\nplt.xlabel('Years')\nplt.ylabel('Measurements')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/321.png')\nplt.show()\n```\nChoices:['CO2 concentration and global temperature have generally increased, while sea-ice extent has generally decreased.', 'CO2 concentration, global temperature and sea-ice extent have all generally increased.', 'CO2 concentration has generally decreased, while  global temperature and sea-ice extent have generally increased.', 'CO2 concentration, global temperature and sea-ice extent have all generally decreased.']\nStudent's Response:\"CO2 concentration and global temperature have generally increased, while sea-ice extent has generally decreased.\"\n",
    "Question Text:\nIs the number of Space Missions of China zero in the year 1970?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(1960, 2025, 5))\nUS_missions = [35, 28, 12, 20, 45, 50, 55, 60, 65, 70, 75, 85, 95]\nRussia_missions = [22, 35, 33, 50, 60, 65, 55, 60, 58, 62, 66, 71, 75]\nChina_missions = [0, 0, 0, 0, 5, 10, 15, 20, 30, 35, 40, 45, 50]\nIndia_missions = [0, 0, 0, 0, 0, 0, 2, 3, 5, 10, 15, 20, 25]\nEU_missions = [0, 0, 0, 4, 8, 12, 14, 16, 20, 30, 40, 45, 50]\n\nplt.figure(figsize=(10, 7))\nplt.plot(years, US_missions, marker='o', color='#76ccbe')\nplt.plot(years, Russia_missions, marker='o', color='#7addfb')\nplt.plot(years, China_missions, marker='o', color='#4fa033')\nplt.plot(years, India_missions, marker='o', color='#c311a0')\nplt.plot(years, EU_missions, marker='o', color='#000000')\n\nplt.title('Number of Space Missions by Nations Over The Years')\nplt.xlabel('Years')\nplt.ylabel('Number of Missions')\nplt.legend(['USA', 'Russia', 'China', 'India', 'EU'], loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/322.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhich crop has the highest production in 2020 according to the given chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nseries1 = [20, 15, 25, 16] # Production in 2017\nseries2 = [18, 16, 23, 17] # Production in 2018\nseries3 = [22, 16, 28, 19] # Production in 2019\nseries4 = [23, 17, 29, 19] # Production in 2020\n\ncategories = ['Corn', 'Wheat', 'Soybeans', 'Rice']\n\nplt.figure(figsize=(10,6))\n\nplt.scatter(categories, series1, marker='o', label='2017')\nplt.scatter(categories, series2, marker='o', label='2018')\nplt.scatter(categories, series3, marker='o', label='2019')\nplt.scatter(categories, series4, marker='o', label='2020')\n\nplt.title('Agriculture Production Over the Years')\nplt.xlabel('Crops')\nplt.ylabel('Production (in Million Tons)')\nplt.legend(loc='upper left')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/323.png')\nplt.show()\n```\nChoices:['Corn', 'Wheat', 'Soybeans', 'Rice']\nStudent's Response:Soybeans\n",
    "Question Text:\nWhich of the following continents had the highest increase in internet usage from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nyears = list(range(2015, 2021))\nasia = [44.9, 46.9, 49.7, 51.7, 54.6, 58.0]\nafrica = [16.2, 18.8, 20.5, 22.1, 23.6, 25.6]\neurope = [70.6, 72.5, 74.3, 75.7, 77.4, 78.9]\namerica = [64.5, 66.9, 69.1, 70.1, 72.2, 73.9]\noceania = [70.5, 73.3, 76.0, 78.5, 79.1, 80.5]\n\n# Plot data\nplt.figure(figsize=(10, 7))\nplt.scatter(years, asia, color=\"#d81aad\", label='Asia')\nplt.scatter(years, africa, color=\"#078141\", label='Africa')\nplt.scatter(years, europe, color=\"blue\", label='Europe')\nplt.scatter(years, america, color=\"orange\", label='America')\nplt.scatter(years, oceania, color=\"red\", label='Oceania')\n\n# Add labels and legend\nplt.title(\"Internet Usage Over Years In Different Continents\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Internet Usage %\")\nplt.legend()\n\n# Save the plot\nplt.savefig(\"line_charts/line_charts_visual_linguistic/train/324.png\")\n\nplt.show()\n```\nChoices:['Asia', 'Africa', 'Europe', 'America', 'Oceania']\nStudent's Response:'Asia'.\n",
    "Question Text:\nWhich aspect of medicine demonstrated the most progress over the course of the 10 years, according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\nx_values = list(range(1, 11))\n\n# Different series representing different aspects of medicine\ny_values1 = [1.5, 2.4, 3.1, 4.2, 5.8, 6.5, 7.4, 8.3, 9.5, 10.6]  # Research\ny_values2 = [1.2, 2.1, 3.3, 4.7, 5.6, 6.0, 7.5, 8.5, 9.4, 10.2]  # Education\ny_values3 = [2.5, 3.4, 4.1, 5.6, 6.7, 7.1, 8.2, 9.6, 10.5, 11.3] # Healthcare Services\ny_values4 = [2.3, 3.7, 4.5, 5.2, 6.8, 7.6, 8.9, 9.2, 10.6, 11.9] # New Medicine\n\nfig, ax = plt.subplots(figsize=[10, 10])\n\nax.scatter(x_values, y_values1, color=\"#257bdf\", label=\"Research\")\nax.scatter(x_values, y_values2, color=\"#d3cfb5\", label=\"Education\")\nax.scatter(x_values, y_values3, color=\"#6ef9b7\", label=\"Healthcare Services\")\nax.scatter(x_values, y_values4, color=\"#e73424\", label=\"New Medicine\")\n\nax.set_xlabel('Years (from Year 0 to Year 10)')\nax.set_ylabel('Progress in Medicine (normalized)')\nax.set_title('Progression in Various Aspects of Medicine over 10 Years')\n\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/325.png')\n```\nChoices:['Research', 'Education', 'Healthcare Services', 'New Medicine']\nStudent's Response:New Medicine\n",
    "Question Text:\nWhich retail chain had the highest sales in the 10th month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndata_1 = [23, 44, 56, 78, 98, 67, 88, 58, 69, 110]\ndata_2 = [43, 34, 66, 99, 60, 47, 89, 84, 79, 111]\ndata_3 = [33, 54, 76, 98, 56, 77, 90, 56, 78, 112]\n\nx = [i for i in range(1, 11)]\n\nplt.figure(figsize=(10,8))\n\nplt.scatter(x, data_1, color='#abdb9e', marker='o', label='Retail chain 1')\nplt.scatter(x, data_2, color='blue', marker='o', label='Retail chain 2')\nplt.scatter(x, data_3, color='red', marker='o', label='Retail chain 3')\n\nplt.title('Retail Performance over 10 months')\nplt.xlabel('Month')\nplt.ylabel('Sales (in thousand $)')\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/326.png')\nplt.show()\n```\nChoices:['Retail chain 1', 'Retail chain 2', 'Retail chain 3']\nStudent's Response:Retail chain 3\n",
    "Question Text:\nWas the soybean production in the year 2010 more than 70 million tons?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defined Data\nyears = range(2000, 2011)\ncotton_production = [30, 34, 41, 44, 45, 50, 56, 57, 63, 66, 70]\nwheat_production = [66, 70, 78, 80, 81, 85, 90, 92, 96, 100, 105]\nrice_production = [45, 47, 50, 52, 56, 60, 65, 67, 72, 75, 77]\ncorn_production = [56, 59, 66, 71, 73, 78, 85, 87, 91, 97, 100]\nsoybean_production = [48, 51, 54, 56, 58, 61, 66, 68, 70, 73, 75]\n\nplt.figure(figsize=[10,8])\n\n# Scatter plots\nplt.scatter(years, cotton_production, label=\"Cotton Production\")\nplt.scatter(years, wheat_production, label=\"Wheat Production\")\nplt.scatter(years, rice_production, label=\"Rice Production\")\nplt.scatter(years, corn_production, label=\"Corn Production\")\nplt.scatter(years, soybean_production, label=\"Soybean Production\")\n\n# Chart title, labels\nplt.title('Agriculture Production Trends (2000 - 2010)')\nplt.xlabel('Years')\nplt.ylabel('Production (in million tons)')\nplt.legend(loc=\"upper left\")\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/327.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nOut of the four continents represented in the scatter plot, which one has shown the largest increase in temperature anomaly from the year 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare the data\nyears = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]\ntemp_anomaly_Asia = [0.7, 0.75, 0.8, 0.9, 0.85, 0.9, 0.95, 1, 1.1, 1.2, 1.25]\ntemp_anomaly_Africa = [0.6, 0.65, 0.68, 0.73, 0.77, 0.8, 0.82, 0.85, 0.9, 0.95, 0.99]\ntemp_anomaly_Europe = [0.4, 0.43, 0.47, 0.5, 0.53, 0.56, 0.6, 0.63, 0.67, 0.7, 0.73]\ntemp_anomaly_America = [0.5, 0.55, 0.6, 0.65, 0.68, 0.73, 0.77, 0.8, 0.83, 0.86, 0.88]\n\n# Create scatter plots\nplt.figure(figsize=(12, 8))\nplt.scatter(years, temp_anomaly_Asia, marker='o', label='Asia')\nplt.scatter(years, temp_anomaly_Africa, marker='s', label='Africa')\nplt.scatter(years, temp_anomaly_Europe, marker='^', label='Europe')\nplt.scatter(years, temp_anomaly_America, marker='*', label='America')\n\n# Add titles and labels\nplt.title('Global Warming: Temperature Anomalies by Continent')\nplt.xlabel('Year')\nplt.ylabel('Temperature Anomaly (\u00b0C)')\nplt.legend(loc='upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/328.png')\nplt.show()\n```\nChoices:['Asia', 'Africa', 'Europe', 'America']\nStudent's Response:Asia\n",
    "Question Text:\nWas the housing price in SF higher than in NYC in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data\nyears = [2000, 2005, 2010, 2015, 2020]\nhousing_price_nyc = [200000, 250000, 300000, 350000, 400000]\nhousing_price_sf = [180000, 230000, 280000, 330000, 380000]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Plot data\nax.plot(years, housing_price_nyc, marker='o', label='NYC')\nax.plot(years, housing_price_sf, marker='s', label='SF')\n\n# Set label and title\nax.set_xlabel('Year')\nax.set_ylabel('Housing Price')\nax.set_title('Housing Price Trends in NYC and SF')\nax.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/329.png')\n\n# Display plot\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no.\n",
    "Question Text:\nDid Person B's income exceed Person A's income in any given year as shown by the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\nyears = [2014, 2015, 2016, 2017, 2018, 2019, 2020]\nincome1 = [40000, 45000, 50000, 55000, 60000, 65000, 70000]\nincome2 = [35000, 37000, 39000, 41000, 43000, 45000, 47000]\n\n# Increase figure size to accommodate long labels\nplt.figure(figsize=(10,6))\n\nplt.plot(years, income1, color='#a7dd22', marker=\"o\", label=\"Person A\")\nplt.plot(years, income2, color='#8ff4fa', marker=\"o\", label=\"Person B\")\n\nplt.xlabel(\"Year\", fontsize=12)\nplt.ylabel(\"Income in USD\", fontsize=12)\nplt.title(\"Annual Income of Person A vs Person B\", fontsize=14)\nplt.legend()\n\n# Create the directory if doesn't exist\ndirectory = \"line_charts/line_charts_visual_linguistic/train\"\nif not os.path.isdir(directory):\n    os.makedirs(directory)\n    \nplt.savefig('line_charts/line_charts_visual_linguistic/train/330.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich social media platform has consistently had the highest number of users over the 5 year span?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# 4 different series of data\nfacebook = [10, 20, 30, 40, 50]\ntwitter = [15, 25, 35, 45, 55]\ninstagram = [20, 30, 40, 50, 60]\nlinkedin = [25, 35, 45, 55, 65]\n\n# Create scatter plots\nplt.scatter([1, 2, 3, 4, 5], facebook, c='#70e640', label='Facebook', marker='o')\nplt.scatter([1, 2, 3, 4, 5], twitter, c='#bd8f69', label='Twitter', marker='o')\nplt.scatter([1, 2, 3, 4, 5], instagram, c='#9f7d2b', label='Instagram', marker='o')\nplt.scatter([1, 2, 3, 4, 5], linkedin, c='#f84187', label='LinkedIn', marker='o')\n\n# Assigning labels and titles\nplt.title('Social Media Usage Over 5 Years')\nplt.xlabel('Years')\nplt.ylabel('Number of Users (in millions)')\nplt.legend()\n\n# Adjusting figure size to accommodate legend\nplt.gcf().set_size_inches(15, 10)\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/331.png')\n\nplt.show()\n```\nChoices:['Facebook', 'Twitter', 'Instagram', 'LinkedIn']\nStudent's Response:LinkedIn\n",
    "Question Text:\nWhich city had the least population in 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Years from 2000 to 2020\nyears = list(range(2000, 2021))\n\n# Population data in millions for City A, City B and City C\npopulation_city_a = [80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180]\npopulation_city_b = [120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220]\npopulation_city_c = [70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170]\n\nplt.figure(figsize=[10,6])\n\nplt.scatter(years, population_city_a, color='#9dd248', label='City A')\nplt.scatter(years, population_city_b, color='#24775e', label='City B')\nplt.scatter(years, population_city_c, color='#ff8327', label='City C')\n\nplt.title('Population Growth from 2000 to 2020')\nplt.xlabel('Year')\nplt.ylabel('Population (in millions)')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/333.png')\n```\nChoices:['City A', 'City B', 'City C']\nStudent's Response:City C\n",
    "Question Text:\nIn which year did the Hasbro toy sales first surpass the Lego toy sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create dataset\nyears = ['2015', '2016', '2017', '2018', '2019', '2020']\nlego_sales = [25, 30, 28, 35, 30, 45]\nhasbro_sales = [22, 25, 35, 30, 34, 40]\n\n# Create the figure and the axes\nfig, ax = plt.subplots(figsize=(10,5)) \n\n# Plot Lego sales\nax.plot(years, lego_sales, marker='o', linestyle='-', color='b', label='Lego Sales')\n\n# Plot Hasbro sales\nax.plot(years, hasbro_sales, marker='o', linestyle='-', color='r', label='Hasbro Sales')\n\n# Set labels and title\nax.set_xlabel('Year')\nax.set_ylabel('# Units Sold (in millions)')\nax.set_title('Toys Sales Over the Years')\n\n# Set up the legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/334.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['2015', '2016', '2017', '2018', '2019', '2020']\nStudent's Response:'2017'\n",
    "Question Text:\nIs the number of 'Gym' hours in the 4th week less than 10?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10,8))\n\n# Define the data\nweeks = list(range(1, 13))\nrunning = [5, 6, 8, 10, 11, 12, 14, 16, 18, 20, 21, 23]\ncycling = [8, 9, 11, 15, 17, 18, 20, 21, 24, 26, 27, 29]\ngym = [3, 5, 7, 9, 11, 13, 15, 17, 19, 22, 23, 25]\nyoga = [2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12]\n\n# create line chart\nplt.plot(weeks, running, marker='o', color='#d4c688', linewidth=2, label='Running')\nplt.plot(weeks, cycling, marker='o', color='#0398fd', linewidth=2, label='Cycling')\nplt.plot(weeks, gym, marker='o', color='#4f3fc1', linewidth=2, label='Gym')\nplt.plot(weeks, yoga, marker='o', color='#38d563', linewidth=2, label='Yoga')\n\nplt.xlabel('Weeks', fontsize=14)\nplt.ylabel('Hours', fontsize=14)\nplt.title('Weekly Fitness Progress', fontsize=16)\nplt.grid(True)\nplt.legend()\n\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/336.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the percentage of vaccine use in the year 2006?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\nvaccine_use = [50, 60, 65, 70, 80, 85, 85, 90, 92, 95, 98]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\nax.scatter(years, vaccine_use, marker='o', color='b', label='Vaccine Use (%)')\n\n# Add labels and title\nplt.xlabel('Year')\nplt.ylabel('Vaccine Use (%)')\nplt.title('Vaccine Use over the years 2000-2010')\nplt.legend()\n\nplt.grid(True)\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/338.png')\nplt.show()\n```\nChoices:['50%', '60%', '85%', '95%', '98%']\nStudent's Response:85%\n",
    "Question Text:\nDid the Expenditure by Inbound Tourists exceed 1400 billion USD in the last 10 years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2011, 2021))\ninbound_tourist_arrivals = [847, 911, 968, 1026, 1089, 1157, 1234, 1309, 1386, 1466]\nexpenditure_inbound_tourists = [864, 923, 986, 1052, 1121, 1195, 1271, 1350, 1432, 1519]\n\n# Create figure and axes\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Plot the data\nax.scatter(years, inbound_tourist_arrivals, color='red', marker='o', label='Inbound Tourist Arrivals (millions)')\nax.scatter(years, expenditure_inbound_tourists, color='blue', marker='x', label='Expenditure by Inbound Tourists (billion USD)')\n\n# Set labels and title\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.title('Tourism trend over the years')\n\n# Set legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/339.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the chart \"Weather Variations over a week for two cities\", on which day does the temperature of City 1 and City 2 come closest to each other?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the plot\ndays = [1, 2, 3, 4, 5, 6, 7]\ntemp_1 = [20, 25, 28, 29, 25, 23, 22]\ntemp_2 = [17, 22, 27, 28, 22, 20, 19]\nhumidity = [80, 75, 70, 65, 60, 80, 75]\n\n# Create the plot\nplt.figure(figsize=(10, 6))  # Figure size specified to avoid overlapping labels\n\nplt.scatter(days, temp_1, color='#4b7a62', marker='o', label='Temperature - City 1')\nplt.scatter(days, temp_2, color='#6500b7', marker='v', label='Temperature - City 2')\nplt.scatter(days, humidity, color='#887804', marker='s', label='Humidity')\n\n# Adding labels, title and legend\nplt.xlabel('Days')\nplt.ylabel('Weather Parameters')\nplt.title('Weather Variations over a week for two cities')\nplt.legend()\n\n# Saving\nplt.savefig('line_charts/line_charts_visual_linguistic/train/340.png')\n\nplt.show()\n```\nChoices:['Day 1', 'Day 2', 'Day 3', 'Day 4']\nStudent's Response:'Day 4'\n",
    "Question Text:\nBased on the line chart \"GDP and Military Expenditure of Top 5 Countries\", which country has the highest military expenditure?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncountries = ['USA', 'China', 'India', 'Germany', 'UK']\nmilitary_expenditure = [732, 261, 71, 49, 59]  # In billion dollars\nGDP = [21.44, 15.42, 2.92, 3.96, 2.96]  # In trillion dollars\n\n# Create a figure\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set a title\nax.set_title('GDP and Military Expenditure of Top 5 Countries')\n\n# Plot data\nax.plot(countries, military_expenditure, color='#378f62', marker='o', label='Military Expenditure ($Billion)')\nax.plot(countries, GDP, color='orange', marker='s', label='GDP ($Trillion)')\n\n# Adding labels and legend\nax.set_xlabel('Countries')\nax.set_ylabel('Values')\nax.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/342.png')\n```\nChoices:['USA', 'China', 'India', 'Germany', 'UK']\nStudent's Response:USA\n",
    "Question Text:\nIn which year were the least number of fish caught?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# fishing data\nyear = [2014, 2015, 2016, 2017, 2018, 2019]\nfish_caught = [200, 210, 230, 240, 245, 255]\n\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# plot data\nax.plot(year, fish_caught, marker=\"o\", color='#c18132', label=\"Fish Caught\")\n\n# labels and title\nax.set_xlabel(\"Year\")\nax.set_ylabel(\"Number of Fish Caught\")\nax.set_title(\"Yearly Fishing Trends\")\n\n# add legend\nax.legend()\nplt.grid(True)\n\n# save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/343.png')\nplt.show()\n```\nChoices:[2014, 2015, 2016, 2017, 2018, 2019]\nStudent's Response:2014\n",
    "Question Text:\nIs the sales for the month of 'Dec' higher than the sales for the month of 'Jan'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Dataset\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsales = [1200, 1500, 1700, 1800, 2200, 2400, 2100, 2300, 2800, 3000, 3500, 4000]\n\nplt.figure(figsize=(10,6))\n\nplt.scatter(months, sales, label = 'Retail Sales', marker='o')\nplt.title('Retail Sales Over The Year')\nplt.xlabel('Months')\nplt.ylabel('Sales (in $)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/344.png')\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\n: Was there an increase in the number of satellites launched for space exploration from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2000, 2005, 2010, 2015, 2020]\nsatellites_launched = [10, 32, 51, 55, 90]\n\nplt.figure(figsize=(10, 5))\nplt.plot(years, satellites_launched, color='#130e0e', marker='o')\nplt.title('Number of Satellites Launched Annually for Space Exploration')\nplt.xlabel('Year')\nplt.ylabel('Number of Satellites Launched')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/345.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n(Yes/No) The advertising expenditure for the Internet over the years has been increasing?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data Prepared\nyears = list(range(2000, 2021))\nradio = [1.5, 1.7, 2.1, 2.5, 2.7, 3.1, 3.4, 3.7, 4.0, 4.3, 4.6, 5.0, 5.3, 5.7, 6.0, 6.3, 6.6, 7.0, 7.3, 7.7, 8.0]\ntv = [2.0, 2.2, 2.5, 2.8, 3.0, 3.3, 3.6, 3.9, 4.2, 4.5, 4.8, 5.1, 5.4, 5.7, 6.0, 6.2, 6.5, 6.8, 7.0, 7.3, 7.5]\ninternet = [0.5, 0.8, 1.3, 2.0, 3.0, 4.2, 5.6, 7.2, 9.0, 11.1, 13.5, 16.2, 19.2, 22.5, 26.0, 29.7, 33.5, 37.5, 41.7, 46.0, 50.5]\n\n# Figure Size\nplt.figure(figsize=(12, 8))\n\n# Plotting\nplt.plot(years, radio, color='#509c2c', marker='o', label='Radio')\nplt.plot(years, tv, color='#d1bcc1', marker='o', label='Television')\nplt.plot(years, internet, color='#d55259', marker='o', label='Internet')\n\n# Labels and Legends\nplt.xlabel('Year')\nplt.ylabel('Advertising Expenditure ($B)')\nplt.title('Advertising Expenditure Over Years')\nplt.legend()\n\n# Save the Image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/346.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the dog population (in millions) in the year 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Data for plotting\nyears = list(range(2000, 2021))\ndog_population = [60, 62, 63, 65, 69, 72, 74, 77, 80, 85, 88, 89, 90, 92, 94, 96, 100, 105, 110, 112, 120]\n\n# Plot the Dog population over the years\nfig, ax = plt.subplots(figsize=(10, 7))\nax.plot(years, dog_population, color='#de890a', marker='o')\n\nax.set(xlabel='Year', ylabel='Dog Population (in millions)',\n       title='Dog Population Over the Years')\nax.grid()\n\n# Create the directory if it doesn't exist\nif not os.path.exists('line_charts/line_charts_visual_linguistic/train'):\n    os.makedirs('line_charts/line_charts_visual_linguistic/train')\n\nfig.savefig('line_charts/line_charts_visual_linguistic/train/347.png')\nplt.show()\n```\nChoices:[80, 88, 90, 96]\nStudent's Response:89\n",
    "Question Text:\nWhat festival had the greatest number of attendees in the 3rd week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the plot\nspring_festival = [20, 35, 30, 35, 27]\nsummer_festival = [25, 32, 34, 20, 25]\nautumn_festival = [24, 35, 30, 35, 27]\nwinter_festival = [22, 15, 14, 30, 24]\n\nfestivals = [spring_festival, summer_festival, autumn_festival, winter_festival]\ncolors = ['#122cb9', '#633797', '#87f54f', 'r']\nlabels = ['Spring Festival', 'Summer Festival', 'Autumn Festival', 'Winter Festival']\n\n# Creating the plot\nplt.figure(figsize=[10,8])\nfor festival, color, label in zip(festivals, colors, labels):\n    plt.scatter(range(1,6), festival, color=color, label=label)\n\nplt.title('Attendance at Different Festivals')\nplt.xlabel('Week')\nplt.ylabel('Number of Attendees (in thousands)')\nplt.legend(loc=\"upper left\")\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/348.png')\nplt.show()\n```\nChoices:['Spring Festival', 'Summer Festival', 'Autumn Festival', 'Winter Festival']\nStudent's Response:Summer Festival\n",
    "Question Text:\nDoes the scatter plot indicates that the price of properties generally increases with the increase in their size?\nFigure Code:\n```\nimport matplotlib.pyplot as plt  \n\n# Assume the following data represents the size of property in sqft and its price in USD\nproperty_size = [800, 1000, 1200, 1500, 2000, 2500, 3000, 3500, 4000, 4500]\nproperty_price = [200000, 250000, 300000, 375000, 500000, 625000, 750000, 875000, 1000000, 1125000]\n\nplt.figure(figsize=(10, 6))  # Making figure size sufficiently large to avoid word overlap, if any\nplt.scatter(property_size, property_price, marker='o')\nplt.title('Real Estate Prices by Property Size')\nplt.xlabel('Size of property (sqft)')\nplt.ylabel('Price of property (USD)')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/349.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the population of dogs always greater than the population of birds?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\nx = list(range(1, 6)) # [1, 2, 3, 4, 5]\n# Animals data\ncats = [5, 9, 3, 7, 6]\ndogs = [8, 7, 6, 5, 4]\nbirds = [3, 4, 5, 4, 3]\nfish = [2, 2, 3, 4, 4]\nhorses = [9, 8, 7, 6, 5]\n\n# Create scatter plot\nplt.figure(figsize=(10, 6)) # Large figure to avoid overlap of long labels\n\n# Plot data with different colors and markers\nplt.scatter(x, cats, color='#c60a07', marker='o', label='Cats')\nplt.scatter(x, dogs, color='#2750a3', marker='x', label='Dogs')\nplt.scatter(x, birds, color='green', marker='s', label='Birds')\nplt.scatter(x, fish, color='purple', marker='*', label='Fish')\nplt.scatter(x, horses, color='orange', marker='+', label='Horses')\n\n# Labels, title and legend\nplt.xlabel('Time')\nplt.ylabel('Population')\nplt.title('Animals')\nplt.legend() \n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/350.png') \n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich artist's Painting for \"Artwork 1\" is priced similar to \"Artwork 2\"?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndata1 = [40, 10, 30, 25, 60]\ndata2 = [30, 20, 10, 50, 40]\n\nartists = ['Da Vinci', 'Van Gogh', 'Picasso', 'Monet', 'Dali']\n\nplt.figure(figsize=(10, 6))\n\nplt.scatter(artists, data1, color='#24b74f', marker='o', label='Artwork 1')\nplt.scatter(artists, data2, color='#323232', marker='x', label='Artwork 2')\n\nplt.title('Prices of paintings by different artists')\nplt.xlabel('Artists')\nplt.ylabel('Price in USD(in thousands)')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/351.png')\nplt.show()\n```\nChoices:['Da Vinci', 'Van Gogh', 'Picasso', 'Monet', 'Dali']\nStudent's Response:'Van Gogh'\n",
    "Question Text:\nThe question related to the chart could be: On the last day of the month, which mode of transport covered the longest distance?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting the figure size\nplt.figure(figsize=(10, 6))\n\n# Series of data\ndays = list(range(1, 11)) # assume these are the days in a month\ntrain_travel = [21, 20, 25, 22, 23, 25, 26, 29, 31, 28] # kilometres travelled by train\nbus_travel = [15, 16, 17, 13, 11, 12, 15, 17, 18, 19] # kilometres travelled by bus\ncar_travel = [30, 32, 31, 29, 27, 24, 26, 30, 32, 31] # kilometres travelled by car\n\n# Line chart for train travel\nplt.plot(days, train_travel, 'go-', color='#d83224', label='Train')\n\n# Line chart for bus travel\nplt.plot(days, bus_travel, 'bo-', color='#d689d4', label='Bus')\n\n# Line chart for car travel\nplt.plot(days, car_travel, 'ro-', label='Car')\n\n# Setting the title and labels for the chart\nplt.title('Daily Travel Distances for Different Transport Modes')\nplt.xlabel('Day of the Month')\nplt.ylabel('Travel Distance (km)')\n\n# Adding legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/353.png')\n\nplt.show()\n```\nChoices:['Train', 'Bus', 'Car']\nStudent's Response:Car\n",
    "Question Text:\nIn which month did the two plants show the same growth?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Plant data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nplant1 = [12, 17, 22, 24, 28, 32, 31, 29, 25, 19, 14, 11]\nplant2 = [10, 11, 16, 17, 22, 28, 30, 25, 21, 18, 13, 11]\n\n# Create the plot\nplt.figure(figsize=(8, 5))\nplt.plot(months, plant1, marker='o', color='blue', label='Plant 1')\nplt.plot(months, plant2, marker='o', color='green', label='Plant 2')\n\n# Add title and labels\nplt.title('Growth of Two Different Plants Over a Year')\nplt.xlabel('Months')\nplt.ylabel('Growth (in cm)')\n\n#show legends\nplt.legend()\n\n# Render the plot\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/354.png')\nplt.show()\n```\nChoices:['January', 'February', 'March', 'April', 'September', 'October']\nStudent's Response:The plants growth value can be seen from the 'plant1' and 'plant2' data lists. Looking at these lists, you can find that the two lists have the same value in the first and the last position, which represent the growth in January and December. Therefore, the correct answer is either January or December. But December is not given as an option, so the final answer is 'January'.\n",
    "Question Text:\nIs the population of terrestrial wildlife higher than that of marine wildlife in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nx = [2000, 2005, 2010, 2015, 2020]\ny1 = [1500000, 1300000, 1250000, 1150000, 1000000] # Population of terrestrial wildlife\ny2 = [2300000, 2200000, 2000000, 1850000, 1700000] # Population of marine wildlife\n\nfig, ax = plt.subplots(figsize=(10,5))\nax.scatter(x, y1, c='red', marker='o', alpha=0.7, label=\"Terrestrial Wildlife Pop.\")\nax.scatter(x, y2, c='blue', marker='v', alpha=0.7, label=\"Marine Wildlife Pop.\")\n\nax.set_title(\"Wildlife Conservation\", fontsize=16)\nax.set_xlabel(\"Year\", fontsize=12)\nax.set_ylabel(\"Population (in millions)\", fontsize=12)\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/355.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the usage of Instagram increased everyday over these 5 days?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Social media usage stats in hours per day (made-up data)\nfacebook_hours = [2.3, 2.5, 2.7, 2.9, 3.1]\ntwitter_hours = [1.5, 1.7, 2.0, 2.3, 2.5]\ninstagram_hours = [1.0, 1.2, 1.5, 2.0, 2.5]\n\ndays = [1, 2, 3, 4, 5]\n\nplt.figure(figsize=(10, 8))\n\nplt.plot(days, facebook_hours, color='#fce70c', marker='o', label='Facebook')\nplt.plot(days, twitter_hours, color='#b6161f' , marker='o', label='Twitter')\nplt.plot(days, instagram_hours, color='#638fe5', marker='o', label='Instagram')\n\nplt.title('Social media usage over 5 days')\nplt.xlabel('Days')\nplt.ylabel('Hours spent')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/356.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nFrom this scatter plot, do the sales of tablets outsell computers in 2025?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\ncomputers_sold_over_time = [10, 30, 40, 25]\nsmartphones_sold_over_time = [30, 50, 80, 70]\ntablets_sold_over_time = [5, 15, 30, 40]\nlaptops_sold_over_time = [15, 30, 45, 35]\n\nyears = ['2010', '2015', '2020', '2025']\n\n# Create scatter plot\nplt.figure(figsize=(8, 6))\nplt.scatter(years, computers_sold_over_time, color='#6b0e30', marker='^', label='Computers')\nplt.scatter(years, smartphones_sold_over_time, color='#b5de70', marker='o', label='Smartphones')\nplt.scatter(years, tablets_sold_over_time, color='#0000ff', marker='s', label='Tablets')\nplt.scatter(years, laptops_sold_over_time, color='#ff0000', marker='D', label='Laptops')\n\n# Customize plot\nplt.xlabel('Year')\nplt.ylabel('Quantity Sold (millions)')\nplt.title('Sale of different Computer peripherals over time')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/357.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nFrom the year 2010 to 2017, which category of phones has the highest increase in sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the 4 series\nphones_over_years = [100, 180, 350, 450, 680, 1000, 1550, 2030]    # Phones sold over the years \nyears = range(2010, 2018)\n\nsmartphones_over_years = [20, 50, 100, 220, 310, 500, 840, 1300]   # Smartphones sold over the years \n\nlandline_over_years = [80, 130, 250, 230, 370, 500, 710, 730]      # Landlines sold over the years \n\nothers_over_years = [0, 0, 0, 0, 0, 0, 0, 0]                      # Other types of phones sold over the years \n\n# Creating the scatter plot\nplt.figure(figsize=[10,6])\n\nplt.scatter(years, phones_over_years, color='#0d1307', marker='o', label='Phones')\nplt.scatter(years, smartphones_over_years, color='#d1d263', marker='x', label='Smartphones')\nplt.scatter(years, landline_over_years, color='#eb844d', marker='*', label='Landlines')\nplt.scatter(years, others_over_years, color='blue', marker='s', label='Others')\n\n# Labels and Title\nplt.xlabel('Years')\nplt.ylabel('Number of Phones Sold (in Million)')\nplt.title('Phone Sales Over the Years')\nplt.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/358.png')\n\nplt.show()\n```\nChoices:['Phones', 'Smartphones', 'Landlines', 'Others']\nStudent's Response:Phones\n",
    "Question Text:\nDoes the scatter plot indicate that the travel frequency increases as distance traveled increases?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# let's consider Frequency of travel by distance traveled\ntravel_frequency = [10, 13, 15, 14, 12, 10, 11, 14, 15, 16, 15, 19, 18]\ndistance_traveled = [50, 150, 100, 300, 350, 450, 200, 50, 250, 300, 200, 100, 400]\n\nplt.figure(figsize=(10, 8))\nplt.scatter(distance_traveled, travel_frequency, marker='o', color='b')\nplt.title('Travel Frequency vs Distance Traveled')\nplt.xlabel('Distance Traveled (miles)')\nplt.ylabel('Frequency of travel')\nplt.grid(True)\nplt.legend([\"Travel Frequency\"])\nplt.savefig('line_charts/line_charts_visual_linguistic/train/359.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is represented by the 'X' marked series on the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nx_values = [1, 2, 3, 4, 5]\ny1_values = [1, 4, 9, 16, 25]  # Corresponds to forest land (in '000 acres)\ny2_values = [2, 3, 8, 15, 27]  # Corresponds to urban land (in '000 acres)\ny3_values = [3, 7, 14, 25, 36]  # Corresponds to agricultural land (in '000 acres)\n\n# Creating a new figure\nplt.figure(figsize=(10, 6))\n\n# Plotting the three series\nplt.scatter(x_values, y1_values, c='#b2c910', marker='o', label='Forest')\nplt.scatter(x_values, y2_values, c='#a8cd48', marker='x', label='Urban')\nplt.scatter(x_values, y3_values, c='#c571b8', marker='s', label='Agricultural')\n\n# Adding a title\nplt.title('Land Usage Over Time')\n\n# Adding labels\nplt.xlabel('Time (years)')\nplt.ylabel('Area (in \\'000 acres)')\n\n# Adding legend\nplt.legend(title='Land Type')\n\n# Save the figure to external .png file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/360.png')\n\n# Showing the plot\nplt.show()\n```\nChoices:['Urban land usage', 'Agricultural land usage', 'Forest land usage', 'Total land usage']\nStudent's Response:'Urban land usage'\n",
    "Question Text:\n: According to the scatter plot, which country had the lowest GDP in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncountries = ['Brazil', 'Canada', 'China', 'Germany', 'India']\npopulation_2020 = [211.0, 37.6, 1439.3, 83.8, 1380.0]  # in millions\ngdp_2020 = [1.84, 1.64, 15.42, 3.78, 2.62]  # in trillion dollars\naverage_temperature = [24.9, -3.0, 16.5, 7.9, 24.8]  # in celsius\ntotal_cases_covid19 = [13.5, 0.9, 0.1, 2.1, 10.3]  # in millions\nactive_cases_covid19 = [0.68, 0.03, 0.00, 0.28, 0.08]  # in millions\n\nplt.figure(figsize=(15, 10))\n\n# Scatter plots\nplt.scatter(countries, population_2020, color='#b92ecb', marker='o', label='Population in 2020 (Millions)')\nplt.scatter(countries, gdp_2020, color='#3aedf8', marker='x', label='GDP in 2020 (Trillions of Dollars)')\nplt.scatter(countries, average_temperature, color='#18177d', marker='+', label='Average Temperature (Celsius)')\nplt.scatter(countries, total_cases_covid19, color='#2E8B57', marker='s', label='Total Cases of Covid-19 (Millions)')\nplt.scatter(countries, active_cases_covid19, color='#D2691E', marker='d', label='Active Cases of Covid-19 (Millions)')\n\n# Setting labels and title\nplt.xlabel('Countries')\nplt.ylabel('Metrics')\nplt.title('Countries Scatter plot')\nplt.legend()\n\n# Save the pyplot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/361.png')\n\nplt.show()\n```\nChoices:['Brazil', 'Canada', 'China', 'Germany', 'India']\nStudent's Response:Canada\n",
    "Question Text:\n: Was the sale of plushies higher than the sale of action figures in March?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nplushies_sold = [1000, 800, 450, 700]\naction_figures_sold = [200, 250, 500, 1200]\neducational_toys_sold = [500, 600, 900, 700]\npuzzles_sold = [400, 300, 700, 800]\n\nmonths = ['January', 'February', 'March', 'April']\n\n# scatter plot\nplt.scatter(months, plushies_sold, marker='o', color='#a7feb2', label='Plushies')\nplt.scatter(months, action_figures_sold, marker='o', color='#76063f', label='Action Figures')\nplt.scatter(months, educational_toys_sold, marker='o', color='#f9d2f4', label='Educational Toys')\nplt.scatter(months, puzzles_sold, marker='o', color='#dbcf1d', label='Puzzles')\n\nplt.title('Toys sold by Month')\nplt.xlabel('Months')\nplt.ylabel('Number of Toys Sold')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n\n# saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/362.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the average reading score exceed the average math score in the year 2005?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\nreading_scores = [520, 530, 540, 550, 560, 570, 580, 590, 600, 610, 620]\nmath_scores = [500, 510, 520, 530, 540, 550, 560, 570, 580, 590, 600]\n\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Plotting both series of data\nax.plot(years, reading_scores, marker='o', color='#98bb55', label='Reading scores')\nax.plot(years, math_scores, marker='o', color='blue', label='Math scores')\n\n# Adding legends and labels\nax.legend()\nax.set_xlabel('Year')\nax.set_ylabel('Scores')\nax.set_title('Average Reading and Math Scores from 2000 to 2010')\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/363.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich event had the highest magnitude in the year 2001?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Historical events with associated dates\ndates = [1789, 1865, 1945, 2001]\nevent1 = [1, 3, 5, 7]\nevent2 = [2, 5, 8, 9]\nevent3 = [3, 6, 9, 12]\nevent4 = [4, 8, 12, 16]\n\n# Setting the size of the figure to clearly fit all labels\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Plotting the different series\nax.plot(dates, event1, marker='o', color='blue', label='Event 1')\nax.plot(dates, event2, marker='s', color='red', label='Event 2')\nax.plot(dates, event3, marker='*', color='green', label='Event 3')\nax.plot(dates, event4, marker='^', color='purple', label='Event 4')\n\n# Setting the labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Magnitude')\nax.set_title('Historical Events Over Time')\n\n# Adding a legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/364.png')\n\nplt.show()\n```\nChoices:['Event 1', 'Event 2', 'Event 3', 'Event 4']\nStudent's Response:Event 4\n",
    "Question Text:\nWas the price of pasta more than the price of rice in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Food data\nrice = [5.70, 5.90, 6.20, 6.51, 6.60]\npasta = [3.89, 4.21, 4.40, 4.52, 4.92]\nchicken = [7.92, 8.11, 8.01, 8.09, 8.18]\nbeef = [9.94, 10.13, 10.41, 10.42, 10.51]\n\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=(12,8))\n\n# Plot lines\nplt.plot(years, rice, label='Rice', color='#c3a315', marker='o')\nplt.plot(years, pasta, label='Pasta', color='#23e2cf', marker='o')\nplt.plot(years, chicken, label='Chicken', color='#23a1cf', marker='o')\nplt.plot(years, beef, label='Beef', color='#c32a15', marker='o')\n\n# Labels\nplt.title('Average Prices of Food Items from 2016 to 2020')\nplt.xlabel('Year')\nplt.ylabel('Average Price (USD)')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/365.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich type of car had an increase in sales from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\ncars = ['Sedan', 'SUV', 'Truck', 'Sports', 'Hybrid']\nsales_2019 = [1500, 2300, 1400, 1500, 900]\nsales_2020 = [1300, 2100, 1600, 1450, 1100]\n\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# scatter plots\nax.scatter(cars, sales_2019, color='#a64d2a', label='Sales 2019', marker='o')\nax.scatter(cars, sales_2020, color='#b82461', label='Sales 2020', marker='x')\n\n# labels and title\nax.set_xlabel('Type of Car')\nax.set_ylabel('Number of Cars Sold')\nax.set_title('Comparison of car sales in 2019 and 2020')\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/366.png')\nplt.show()\n```\nChoices:['Sedan', 'SUV', 'Truck', 'Sports', 'Hybrid']\nStudent's Response:'Truck', 'Hybrid'\n",
    "Question Text:\nWhich festival has shown a continuous increase in the number of attendees over the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\nfestivals = ['Diwali', 'Christmas', 'Easter', 'Halloween']\nfestival_attendees = [[15, 20, 25, 30, 35], [28, 30, 32, 34, 36], [12, 15, 18, 21, 24], [22, 24, 26, 28, 30]]\nyears = [2017, 2018, 2019, 2020, 2021]\n\n# Increase figure size\nplt.figure(figsize=[10, 5])\n\n# Creating scatter plots for each festival\nfor idx, festival in enumerate(festivals):\n    plt.scatter(years, festival_attendees[idx], label=festival, color=['#5955c2', '#261cd9', '#2ee2bf', '#e64c2e'][idx])\n    \nplt.title('Number of attendees over years for different Festivals')\nplt.xlabel('Years')\nplt.ylabel('Number of Attendees (in thousands)')\nplt.legend()\n\n# Save the visual\nplt.savefig('line_charts/line_charts_visual_linguistic/train/367.png')\nplt.show()\n```\nChoices:['Diwali', 'Christmas', 'Easter', 'Halloween']\nStudent's Response:None of the options.\n",
    "Question Text:\nWhich was the genre with the most movies in the year 2018?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Movies data\nmovies_by_genre_year = {\n    'adventure': {2015: 15, 2016: 20, 2017: 23, 2018: 28, 2019: 30},\n    'drama': {2015: 30, 2016: 28, 2017: 33, 2018: 37, 2019: 42},\n    'comedy': {2015: 20, 2016: 62, 2017: 33, 2018: 47, 2019: 53},\n    'thriller': {2015: 10, 2016: 9, 2017: 13, 2018: 18, 2019: 23},\n}\n\ndef draw_line_chart():\n    plt.figure(figsize=(10, 5))\n\n    for genre, color in zip(movies_by_genre_year.keys(), ['#d9fd32', '#ea54e2', '#49f53a', 'blue']):\n        years = list(movies_by_genre_year[genre].keys())\n        movies = list(movies_by_genre_year[genre].values())\n        plt.scatter(years, movies, color=color, marker=\"o\", label=genre)\n\n    plt.title('Movies by genre (2015-2019)')\n    plt.xlabel('Year')\n    plt.ylabel('Number of movies')\n    plt.legend()\n    plt.savefig('line_charts/line_charts_visual_linguistic/train/368.png')\n\ndraw_line_chart();\n```\nChoices:['Adventure', 'Drama', 'Comedy', 'Thriller']\nStudent's Response:Comedy\n",
    "Question Text:\nWhich country had the most number of travelers in 2017?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncountries = ['USA', 'France', 'Italy', 'Spain']\nnum_travelers_2015 = [68.3, 83.7, 50.7, 68.2]\nnum_travelers_2016 = [75.6, 86.9, 52.4, 75.3]\nnum_travelers_2017 = [76.9, 89.4, 58.3, 81.8]\nnum_travelers_2018 = [77.3, 93.2, 63.2, 82.7]\n\n# Creating the scatter plot\nplt.figure(figsize=(12,7))\nplt.scatter(countries, num_travelers_2015, color='#d88a8b', label='2015')\nplt.scatter(countries, num_travelers_2016, color='#406fef', label='2016')\nplt.scatter(countries, num_travelers_2017, color='#fcbd78', label='2017')\nplt.scatter(countries, num_travelers_2018, color='#516f3c', label='2018')\n\n# Adding title and labels\nplt.title('Number of travelers by year and country (in millions)', fontsize=14)\nplt.xlabel('Country', fontsize=12)\nplt.ylabel('Number of travelers (in millions)', fontsize=12)\n\n# Adding legend\nplt.legend(loc='upper left', fontsize=10)\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/371.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['USA', 'France', 'Italy', 'Spain']\nStudent's Response:France\n",
    "Question Text:\nWhich hobby saw a decrease in participants from 2015 to 2016?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2015, 2016, 2017, 2018, 2019]\nrunning = [40, 30, 22, 6, 14]\njogging = [10, 15, 22, 17, 45]\ncycling = [34, 23, 10, 30, 25]\nswimming = [16, 29, 18, 21, 30]\n\nplt.figure(figsize=(10, 6))\n\n# Plotting lines\nplt.plot(years, running, color='#99ad77', marker='o', label='Running')\nplt.plot(years, jogging, color='#5cb200', marker='o', label='Jogging')\nplt.plot(years, cycling, color='blue', marker='o', label='Cycling')\nplt.plot(years, swimming, color='purple', marker='o', label='Swimming')\n\nplt.title('Hobbies Trend Over the Years')\nplt.xlabel('Years')\nplt.ylabel('No. of Participants')\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/372.png')\n```\nChoices:['Running', 'Jogging', 'Cycling', 'Swimming']\nStudent's Response:Running\n",
    "Question Text:\nWhich food item's consumption quantity is increasing at the fastest rate over the year?\nFigure Code:\n```\n# import the necessary packages\nimport matplotlib.pyplot as plt\n\n# series data for 4 food items in different months\nmonths = list(range(1, 13))\n\npizza = [45, 50, 55, 60, 65, 70, 68, 71, 72, 78, 80, 85]\npasta = [40, 45, 50, 55, 60, 65, 67, 70, 73, 78, 82, 85]\nburger = [30, 35, 40, 44, 48, 50, 55, 60, 65, 70, 75, 80]\ntaco = [25, 30, 35, 40, 45, 47, 50, 52, 54, 58, 60, 63]\n\nplt.figure(figsize=(8,6))\n\n# plot the graph for each food item\nplt.plot(months, pizza, marker='o', color='#144cdf', label='Pizza')\nplt.plot(months, pasta, marker='o', color='#287677', label='Pasta')\nplt.plot(months, burger, marker='o', color='green', label='Burger')\nplt.plot(months, taco, marker='o', color='red', label='Taco')\n\n# set labels and title\nplt.xlabel('Months', fontsize=14)\nplt.ylabel('Quantity Consumed', fontsize=14)\nplt.title(\"Food Consumption over Months\", fontsize=16)\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/373.png')\n\nplt.show()\n```\nChoices:['Pizza', 'Pasta', 'Burger', 'Taco']\nStudent's Response:Burger\n",
    "Question Text:\nAmong Python, Java, and C#, which language had the highest number of users in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['2016', '2017', '2018', '2019', '2020']\npython_users = [10, 30, 60, 120, 200]\njava_users = [15, 45, 70, 100, 180]\ncsharp_users = [8, 25, 45, 62, 85]\n\nplt.figure(figsize=(10, 6))\nplt.plot(languages, python_users, marker='o', color='#3fd635', label='Python')\nplt.plot(languages, java_users, marker='o', color='#58e26b', label='Java')\nplt.plot(languages, csharp_users, marker='o', color='#5be18b', label='C#')\n\nplt.title('Number of Users of Different Programming Languages Over the Years')\nplt.xlabel('Year')\nplt.ylabel('Number of Users (in thousands)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/374.png')\nplt.show()\n```\nChoices:['Python', 'Java', 'C#']\nStudent's Response:Python\n",
    "Question Text:\nDid party B receive more votes than party A in the year 2010 according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\nyears = list(range(2000, 2021))\nparty_A_votes = [55, 57, 60, 62, 65, 68, 70, 73, 75, 77, 80, 83, 85, 88, 90, 92, 95, 97, 100, 102, 105]\nparty_B_votes = [52, 54, 57, 59, 62, 65, 67, 69, 72, 74, 77, 80, 82, 84, 87, 90, 92, 94, 97, 99, 102]\nparty_C_votes = [50, 52, 55, 58, 61, 63, 66, 68, 70, 73, 75, 78, 80, 83, 85, 87, 90, 92, 95, 97, 100]\n\n# Create scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(years, party_A_votes, color='#47a8d6', marker='o', label='Party A')\nplt.scatter(years, party_B_votes, color='#b82ac6', marker='o', label='Party B')\nplt.scatter(years, party_C_votes, color='#a7c947', marker='o', label='Party C')\n\n# Add details to the plot\nplt.title('Number of votes by Political Parties Over The Years')\nplt.xlabel('Years')\nplt.ylabel('Number of Votes (in millions)')\nplt.legend()\nplt.grid(True)\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/375.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n:\nIs the scatter plot considering the annual sales of only 3 fashion brands?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\nDesigners = [1, 2, 3, 4]\nGucci = [350, 365, 370, 380]\nVersace = [300, 310, 320, 330]\nPrada = [280, 290, 300, 314]\nArmani = [250, 260, 270, 280]\n\n# Create the scatter plot\nplt.figure(figsize=(10,6))\nplt.scatter(Designers, Gucci, color='#e4e151', label='Gucci')\nplt.scatter(Designers, Versace, color='#774285', label='Versace')\nplt.scatter(Designers, Prada, color='#6c80df', label='Prada')\nplt.scatter(Designers, Armani, color='r', label='Armani')\n\n# Add the legend and labels\nplt.legend(loc='upper left')\nplt.xlabel('Designers')\nplt.ylabel('Sales in millions')\nplt.title('Annual sales of Fashion Brands')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/376.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the Internet usage rate for Europe increase from 2010 to 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nyears = list(range(2010, 2020))\n\n# assuming internet usage rate (percentage of population with Internet access)\ninternet_usage_Asia = [23.6, 28.5, 33.3, 38.7, 42.6, 47.9, 51.9, 55.7, 60.2, 64.8]\ninternet_usage_Africa = [9.6, 12.3, 14.8, 19.6, 23.0, 26.9, 30.1, 34.5, 40.0, 45.5]\ninternet_usage_Europe = [63.9, 68.6, 72.1, 75.7, 78.2, 81.7, 84.7, 87.2, 90.5, 93.8]\ninternet_usage_Americas = [49.6, 52.8, 58.2, 61.8, 65.9, 69.5, 73.6, 78.3, 82.4, 86.8]\ninternet_usage_Oceania = [62.4, 66.7, 70.7, 73.9, 76.5, 79.6, 82.3, 85.1, 88.6, 92.0]\n\nax.plot(years, internet_usage_Asia, marker='o', color='#1a7a80', label='Asia')\nax.plot(years, internet_usage_Africa, marker='s', color='#14e0b3', label='Africa')\nax.plot(years, internet_usage_Europe, marker='p', color='#f93d38', label='Europe')\nax.plot(years, internet_usage_Americas, marker='X', color='#9b59b6', label='Americas')\nax.plot(years, internet_usage_Oceania, marker='P', color='#f1c40f', label='Oceania')\n\nax.set_xlabel('Years')\nax.set_ylabel('Internet Usage Rate (%)')\nax.set_title('Internet Usage Over time')\nax.legend(loc='lower right')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/377.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year did Party B have more votes than Party A?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the data\nelection_years = list(range(1990, 2021, 5))\nparty_a_voters = [60, 50, 70, 55, 65, 72, 59]\nparty_b_voters = [40, 50, 30, 45, 35, 28, 41]\n\n# Creating the scatter plot \nplt.figure(figsize=(10,6))\nplt.scatter(election_years, party_a_voters, color='#de0e97', marker='o', label = \"Party A\")\nplt.scatter(election_years, party_b_voters, color='#c28e3b', marker='x', label = \"Party B\")\n\n# Adding labels and title\nplt.title('Votes for Party A and Party B over the years')\nplt.xlabel('Election Years')\nplt.ylabel('Voters (in millions)')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/378.png')\n\n# Displaying the scatter plot\nplt.show()\n```\nChoices:[1995, 2005, 2015, 2025]\nStudent's Response:1995\n",
    "Question Text:\nDid 'Charity 1' receive more donations than 'Charity 2'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\ncharities = ['Charity 1', 'Charity 2', 'Charity 3', 'Charity 4', 'Charity 5']\ndonations = [50000, 60000, 30000, 45000, 56000]\n\n# Create a figure of appropriate size\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create scatter plot\nplt.scatter(charities, donations, color='#fc9388', marker='o')\n\n# Set chart labels and title\nplt.xlabel('Charities')\nplt.ylabel('Donations in USD')\nplt.title('Donations Received by Different Charities')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/379.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which year did the number of Twitter users first surpass the number of Facebook users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Declaring a list for the years and for two different social media platforms:\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nfacebook_users = [500, 800, 1000, 1200, 1350, 1690, 1900, 2100, 2300, 2600, 2800]\ntwitter_users = [250, 300, 500, 650, 800, 950, 1000, 1100, 1500, 2000, 2300]\n\n# Plotting the data:\nplt.figure(figsize=(10, 5))\nplt.plot(years, facebook_users, marker='o', label='Facebook users (Millions)')\nplt.plot(years, twitter_users, marker='o', label='Twitter users (Millions)')\n\n# Adding the labels, legend, and title:\nplt.xlabel('Year')\nplt.ylabel('Number of Users (Millions)')\nplt.legend()\nplt.title('Number of Users on Facebook and Twitter from 2010 to 2020')\n\n# Saving the figure:\nplt.savefig('line_charts/line_charts_visual_linguistic/train/380.png')\n\n# Displaying the plot:\nplt.show()\n```\nChoices:[2011, 2012, 2015, 2017, 2018, 2019, 2020]\nStudent's Response:2019\n",
    "Question Text:\nDid population of Country B exceed 5 billion in the year 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\nyears = list(range(2000, 2021))\npopulation_A = [6.12, 6.22, 6.33, 6.42, 6.52, 6.6, 6.69, 6.77, 6.84, 6.92, 6.99, 7.07, 7.13, 7.2, 7.25, 7.32, 7.38, 7.44, 7.5, 7.57, 7.63]\npopulation_B = [3.56, 3.68, 3.8, 3.91, 4.02, 4.13, 4.23, 4.34, 4.44, 4.53, 4.62, 4.72, 4.79, 4.87, 4.94, 5.01, 5.08, 5.13, 5.19, 5.24, 5.29]\npopulation_C = [2.58, 2.64, 2.69, 2.74, 2.79, 2.84, 2.88, 2.93, 2.97, 3.01, 3.05, 3.09, 3.13, 3.17, 3.2, 3.24, 3.27, 3.31, 3.34, 3.37, 3.4]\n\nfig, ax = plt.subplots()\n\n# Plotting the scatter plots\nax.scatter(years, population_A, marker='o', color='#8d70e3', label='Country A')\nax.scatter(years, population_B, marker='^', color='#c54ef6', label='Country B')\nax.scatter(years, population_C, marker='s', color='#63d297', label='Country C')\n\n# Adding labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Population (Billions)')\nax.set_title('Population Growth')\n\n# Adding legend\nax.legend(loc='upper left')\n\n# Ensuring the figure is large enough\nfig.set_size_inches(10, 6)\n\n# Saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/381.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhat is the maximum consumption of water in gallons over the period of 10 days?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nx = list(range(1,11))  # intervels of days\ny = [70, 75, 80, 85, 70, 65, 60, 65, 70, 75]  # water usage in gallons\n\nplt.figure(figsize=(10, 5))\n\nplt.plot(x, y, marker='o', label='Daily Water Consumption')\nplt.xlabel('Days of Month')\nplt.ylabel('Water Usage in Gallons')\nplt.title('Water Usage Over 10 Days of a Month')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/382.png')\nplt.show()\n```\nChoices:[70, 75, 80, 85, 90]\nStudent's Response:85\n",
    "Question Text:\nAccording to the scatter plot above, what was the trend in temperature increase and CO2 level between years 2000 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n  \nyear = [2000, 2005, 2010, 2015, 2020]\nCO2_level = [369.52, 379.8, 389.9, 400.83, 412.5]\nTemperature_increase = [0.42, 0.62, 0.70, 0.87, 1.02]\n\nplt.figure(figsize=(10, 6))\nplt.scatter(year, CO2_level, color ='b',label='CO2 level in PPM') \nplt.scatter(year, Temperature_increase, color ='r', label='Temperature increase in \u00b0C')\n  \nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Value', fontsize=14)\n\nplt.title('Global Warming: CO2 levels and Temperature increase over time', fontsize=16) \n\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/383.png')\nplt.show()\n```\nChoices:['Both Temperature and CO2 level Increased', 'Both Temperature and CO2 level decreased', 'Temperature increased, CO2 level decreased', 'Temperature decreased, CO2 level increased']\nStudent's Response:Both Temperature and CO2 level Increased\n",
    "Question Text:\nHas the housing price in Sydney been consistently lower than in New York City from 2000 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Four series' of housing data (in thousands)\nyears = list(range(2000, 2021))\nprices_tokyo = [320, 325, 335, 340, 360, 375, 390, 400, 420, 430, 440, 450, 470, 500, 520, 540, 570, 600, 620, 650, 680]\nprices_nyc = [230, 250, 270, 295, 320, 350, 380, 400, 420, 450, 480, 510, 540, 570, 600, 620, 650, 690, 700, 730, 750]\nprices_paris = [190, 210, 230, 250, 280, 305, 330, 350, 380, 410, 440, 470, 500, 530, 560, 590, 610, 630, 660, 680, 710 ]\nprices_sydney = [180, 200, 225, 245, 270, 290, 310, 330, 350, 370, 390, 410, 430, 460, 480, 510, 540, 560, 590, 610, 630]\n\nplt.figure(figsize=(10,7))\n\nplt.plot(years, prices_tokyo, color='#45bfc6', marker='o', label='Tokyo')\nplt.plot(years, prices_nyc, color='#42d4da', marker='o', label='New York City')\nplt.plot(years, prices_paris, color='#eae834', marker='o', label='Paris')\nplt.plot(years, prices_sydney, color='#23ae3c', marker='o', label='Sydney')\n\nplt.xlabel('Years')\nplt.ylabel('Housing Prices (in thousands $)')\nplt.title('Trend of Housing Prices in 4 major cities from 2000 to 2021')\nplt.legend(loc='upper left')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/384.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Charity 2 always raise more funds than Charity 3 from 2015 through 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Data\nyears = [2015, 2016, 2017, 2018, 2019, 2020]\ncharity1_funds = [10000, 15000, 20000, 25000, 30000, 35000]\ncharity2_funds = [5000, 7000, 10000, 12000, 20000, 22000]\ncharity3_funds = [6000, 8000, 10000, 12000, 20000, 30000]\n\n# Plot\nplt.figure(figsize=(10, 6))\nplt.plot(years, charity1_funds, color='#ab0f63', marker='o', label='Charity 1')\nplt.plot(years, charity2_funds, color='#ae13ee', marker='v', label='Charity 2')\nplt.plot(years, charity3_funds, color='green', marker='s', label='Charity 3')\n\nplt.title('Funds Raised by Charities Over Years')\nplt.xlabel('Year')\nplt.ylabel('Funds raised (in USD)')\nplt.legend()\n\n# Save plot\nif not os.path.exists('line_charts/line_charts_visual_linguistic/train'):\n    os.makedirs('line_charts/line_charts_visual_linguistic/train')\n    \nplt.savefig('line_charts/line_charts_visual_linguistic/train/385.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich Shop has the highest price for Cherries?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nfruits = ['Apple', 'Banana', 'Blueberry', 'Cherry']\nvalues1 = [12, 15, 13, 16]\nvalues2 = [17, 19, 16, 18]\nvalues3 = [19, 22, 21, 25]\nvalues4 = [24, 28, 25, 27]\n\n# Create scatter plot\nplt.figure(figsize=(10,5))\n\nplt.scatter(fruits, values1, color='#4a4b58', label=\"Shop A\")\nplt.scatter(fruits, values2, color='r', label=\"Shop B\")\nplt.scatter(fruits, values3, color='b', label=\"Shop C\")\nplt.scatter(fruits, values4, color='g', label=\"Shop D\")\n\n# Set title and labels\nplt.title('Fruit Prices in Different Shops')\nplt.xlabel('Fruits')\nplt.ylabel('Price ($)')\n\n# Setting legend\nplt.legend()\n    \n# Save the plot as a figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/386.png', bbox_inches='tight')\n    \n# Show the plot\nplt.show()\n```\nChoices:['Shop A', 'Shop B', 'Shop C', 'Shop D']\nStudent's Response:Shop D\n",
    "Question Text:\nDid the global average temperature increase between the years 2000 and 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2000, 2005, 2010, 2015, 2020]\nglobal_temperatures = [14.6, 14.8, 14.9, 15.1, 15.2]\n\n# Create a figure and plot\nplt.figure(figsize=(10,5))\nplt.plot(years, global_temperatures, marker='o', label='Global Average Temperature')\n\n# Add labels, title, and legend\nplt.ylabel('Temperature in \u00b0C')\nplt.xlabel('Year')\nplt.title('Global Warming - Average Worldwide Temperature Change')\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/387.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the year 2021, which programming language was more popular between C++ and Java?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Python', 'Java', 'C++', 'JavaScript', 'C#']\nyears = [2017, 2018, 2019, 2020, 2021]\n\npopularity_python = [15, 20, 25, 30, 33]\npopularity_java = [22, 20, 18, 16, 15]\npopularity_cplusplus = [10, 12, 14, 16, 18]\npopularity_javascript = [13, 16, 19, 22, 24]\npopularity_csharp = [5, 7, 9, 11, 12]\n\nplt.figure(figsize=(10, 8))\n\nplt.plot(years, popularity_python, marker='o', label='Python')\nplt.plot(years, popularity_java, marker='o', label='Java')\nplt.plot(years, popularity_cplusplus, marker='o', label='C++')\nplt.plot(years, popularity_javascript, marker='o', label='JavaScript')\nplt.plot(years, popularity_csharp, marker='o', label='C#')\n\nplt.xlabel('Years')\nplt.ylabel('Language Popularity')\nplt.title('Language Popularity Over the Years')\nplt.legend(loc='best')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/388.png')\nplt.show()\n```\nChoices:['C++', 'Java', 'Both were equally popular', 'Cannot be determined from the graph']\nStudent's Response:Java\n",
    "Question Text:\nDid the employment in Sector 1 always increase each year from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data for five series of Employment in five different sectors over the years 2000 to 2020\nyears = list(range(2000, 2021))\nsector1 = [1.1, 2.5, 3.6, 4.5, 5.1, 6.0, 7.5, 8.3, 9.2, 10.0, 10.2, 11.5, 12.3, 12.9, 13.4, 14.0, 14.6, 15.1, 15.6, 16.0, 16.5]\nsector2 = [1.2, 2.7, 3.2, 4.3, 5.2, 5.8, 7.1, 8.0, 8.5, 9.9, 10.5, 11.3, 12.0, 13.2, 14.0, 14.5, 14.9, 15.8, 16.2, 16.6, 17.2]\nsector3 = [1.3, 2.4, 3.5, 4.2, 5.5, 6.1, 7.4, 8.5, 9.1, 10.6, 10.8, 11.9, 12.5, 13.7, 14.1, 14.8, 15.3, 15.7, 16.1, 16.3, 16.7]\nsector4 = [1.4, 2.2, 3.3, 4.0, 5.3, 6.4, 7.6, 8.7, 9.5, 10.7, 11.0, 12.1, 12.6, 13.5, 14.3, 14.7, 15.2, 15.9, 16.5, 16.8, 17.3]\nsector5 = [1.5, 2.1, 3.1, 4.8, 5.6, 6.7, 7.2, 8.1, 9.0, 10.1, 11.2, 12.2, 12.8, 13.9, 14.2, 14.9, 15.4, 15.6, 16.7, 16.9, 17.6]\n\n# Setting figure size\nplt.figure(figsize=(10,5))\n\n# Scatter plots for each sector\nplt.scatter(years, sector1, marker='o', label='Sector 1')\nplt.scatter(years, sector2, marker='o', label='Sector 2')\nplt.scatter(years, sector3, marker='o', label='Sector 3')\nplt.scatter(years, sector4, marker='o', label='Sector 4')\nplt.scatter(years, sector5, marker='o', label='Sector 5')\n\n# Setting labels, titles and legends\nplt.xlabel(\"Years\")\nplt.ylabel(\"Employment (in millions)\")\nplt.title(\"Employment in different sectors over the years (2000 - 2020)\")\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/389.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the world population exceed 2 billion before 1950?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [1850, 1900, 1950, 2000]\nworld_population = [1.26, 1.65, 2.52, 6.12]  # in billions\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.plot(years, world_population, color='#3fe63a', marker='o')\n\nax.set_xlabel(\"Year\", fontsize=14)\nax.set_ylabel(\"World Population (billions)\", fontsize=14)\nax.set_title(\"World Population Growth Over Time\", fontsize=16)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/390.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWas the attendance of Band A's concert on day 7 lower than Band B's concert?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nx = [1, 2, 3, 4, 5, 6, 7]\ny1 = [2, 3, 7, 9, 11, 9, 3]\ny2 = [4, 7, 8, 11, 9, 3, 2]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create scatter plot\nax.scatter(x, y1, color='#ca4978', marker='o', label='Band A Concert Attendance')\nax.scatter(x, y2, color='green', marker='x', label='Band B Concert Attendance')\n\n# Set labels and title\nax.set_xlabel('Days of Week', fontsize=14)\nax.set_ylabel('Number of People', fontsize=14)\nax.set_title('Concert Attendance of Two Bands Over a Week', fontsize=16)\n\n# Set legend\nax.legend(loc='best')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/391.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich language had the lowest popularity index for all the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for plotting\nlanguages = ['Python', 'Java', 'C++', 'JS', 'Swift']\nyears = list(range(2016, 2021))\n\npython_popularity = [50, 53, 58, 60, 65]\njava_popularity = [62, 63, 60, 57, 55]\ncpp_popularity = [45, 44, 46, 45, 47]\njs_popularity = [70, 68, 69, 66, 70]\nswift_popularity = [10, 12, 16, 20, 25]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.plot(years, python_popularity, marker='o', color='#ea523d', label='Python')\nax.plot(years, java_popularity, marker='o', color='#390f6f', label='Java')\nax.plot(years, cpp_popularity, marker='o', color='green', label='C++')\nax.plot(years, js_popularity, marker='o', color='blue', label='JS')\nax.plot(years, swift_popularity, marker='o', color='orange', label='Swift')\n\nax.set(xlabel='Years', ylabel='Popularity Index',\n       title='Popularity of Languages over the years')\nax.grid()\nax.legend()\n\nfig.savefig('line_charts/line_charts_visual_linguistic/train/392.png')\n\nplt.show()\n```\nChoices:['Python', 'Java', 'C++', 'JS', 'Swift']\nStudent's Response:Swift\n",
    "Question Text:\nIn which semester did the Math grades first exceed the English grades?\"\n\nThe answer options are:\n\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nmath_grades = [85, 90, 70, 78, 83, 88, 92, 79, 88, 90]\nenglish_grades = [70, 76, 78, 88, 90, 92, 90, 88, 85, 86]\n\nplt.figure(figsize=(10,6))\n\nplt.plot(math_grades, marker='o', color='#2a0989', label='Math Grades')\nplt.plot(english_grades, marker='s', color='#de2b08', label='English Grades')\n\nplt.title('Math and English Grades over 10 Semesters')\nplt.xlabel('Semesters')\nplt.ylabel('Grades')\nplt.legend()\nplt.grid()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/393.png')\nplt.show()\n```\nChoices:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nStudent's Response:2\n",
    "Question Text:\nIn which year the land used for agriculture was at its lowest value?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# data\nyears = list(range(1990, 2021))\nland_used_for_agriculture = [48.2, 47.8, 47.7, 47.4, 46.8, 46.8, 46.6, 46.6, 46.3, 46.1, \n                             45.9, 45.8, 45.8, 45.7, 45.6, 45.5, 45.4, 45.2, 45.0, 44.9, \n                             44.9, 44.7, 44.5, 44.3, 44.1, 43.7, 43.5, 43.3, 43.1, 42.8, 42.6]\nforest_area_percentage = [31.8, 31.6, 31.4, 31.2, 31.0, 30.8, 30.6, 30.4, 30.2, 30.0, \n                          29.8, 29.6, 29.4, 29.2, 29.0, 28.8, 28.6, 28.4, 28.2, 28.0, \n                          27.8, 27.7, 27.5, 27.3, 27.1, 26.9, 26.7, 26.5, 26.4, 26.2, 26.0]\n\n# Create figure\nplt.figure(figsize=(10, 5))\n\n# Plot lines\nplt.plot(years, land_used_for_agriculture, marker='o', label='Land used for agriculture (%)')\nplt.plot(years, forest_area_percentage, marker='o', label='Forest area (%)')\n\n# Add labels, title and legend\nplt.xlabel('Year')\nplt.ylabel('Percentage of land (%)')\nplt.title('Land use over Time')\nplt.legend()\n\n# Save the figure\nif not os.path.exists('line_charts/line_charts_visual_linguistic/train'):\n    os.makedirs('line_charts/line_charts_visual_linguistic/train')\nplt.savefig('line_charts/line_charts_visual_linguistic/train/395.png')\n\nplt.show()\n```\nChoices:['1990', '2000', '2010', '2020']\nStudent's Response:'2020'\n",
    "Question Text:\nFrom the line chart, in which year can we observe the maximum increase in the protected area from the previous year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the years as x-axis\nyears = list(range(2010, 2021))\n\n# Define three series of data about wildlife conservation \nwildlife_population = [45000, 47000, 49000, 52000, 54000, 56000, 58000, 62000, 64000, 66000, 68000]\nprotected_area = [10000, 12000, 13000, 14000, 15000, 16000, 17000, 19000, 20000, 21000, 23000]\ndonations = [5000, 7000, 10000, 12000, 14000, 16000, 18000, 20000, 22000, 25000, 28000]\n\n# Create the line chart\nfig, ax = plt.subplots(figsize=(10, 6))\n\nplt.plot(years, wildlife_population, marker=\"o\", color='#b76b8a', label='Wildlife Population')\nplt.plot(years, protected_area, marker=\"o\", color='#1d7da9', label='Protected Area (in sq.km)')\nplt.plot(years, donations, marker=\"o\", color='#5ac18e', label='Donations (in thousands $)')\n\n# Set the chart's title and labels\nax.set_title(\"Wildlife Conservation Efforts (2010-2020)\", fontsize=14)\nax.set_xlabel(\"Years\", fontsize=12)\nax.set_ylabel(\"Quantity\", fontsize=12)\n\n# Create legend\nplt.legend()\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/396.png')\n\nplt.show()\n```\nChoices:['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020']\nStudent's Response:2020\n",
    "Question Text:\nDid the number of sales in Fiction books increase from 2017 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nfiction = [100, 150, 230, 180]\nnon_fiction = [120, 180, 200, 240]\nchildren_lit = [80, 90, 120, 140]\nyoung_adult = [90, 140, 130, 120]\nx = ['2017', '2018', '2019', '2020'] # data points\n\n# Creating the scatter plot\nplt.figure(figsize=(10,8))\nplt.scatter(x, fiction, color='#997798', marker='o', label='Fiction')\nplt.scatter(x, non_fiction, color='#a0e570', marker='o', label='Non-Fiction')\nplt.scatter(x, children_lit, color='#ff5733', marker='o', label='Childrens Literature')\nplt.scatter(x, young_adult, color='#33c3ff', marker='o', label='Young Adult')\nplt.title('Book Sales')\nplt.xlabel('Year')\nplt.ylabel('Sales (in thousands)')\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/397.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nWhich advertising medium seems to have the strongest correlation with sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define some data\ntv = [230.1, 44.5, 17.2, 151.5, 180.8, 8.7, 57.5, 120.2, 8.6, 199.8]\nradio = [37.8, 39.3, 45.9, 41.3, 10.8, 48.9, 32.8, 19.6, 2.1, 2.6]\nnewspaper = [69.2, 45.1, 69.3, 58.5, 58.4, 75.0, 23.5, 11.6, 1.0, 21.2]\nsales = [22.1, 10.4, 9.3, 18.5, 12.9, 7.2, 11.8, 13.2, 4.8, 10.6]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(8, 8))\n\n# Plot the data\nax.scatter(tv, sales, color='#84dbc8', label='TV')\nax.scatter(radio, sales, color='#39911b', label='Radio')\nax.scatter(newspaper, sales, color='#75df15', label='Newspaper')\nax.scatter(tv, radio, color='#ac4cda', label='TV vs Radio')\n\n# Add a legend\nax.legend()\n\n# Add labels\nax.set_xlabel('Advertising budget (in thousands)')\nax.set_ylabel('Sales (in thousands)')\nax.set_title('Advertising budget vs Sales')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/399.png')\nplt.show()\n```\nChoices:['TV', 'Radio', 'Newspaper', 'TV vs Radio']\nStudent's Response:'TV'\n",
    "Question Text:\nDid Alice receive a higher grade in Math than English?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Grades for two different classes\nmath_grades = [85, 90, 77, 92, 88, 76, 95, 89, 94, 90]\nenglish_grades = [80, 85, 90, 87, 88, 92, 85, 84, 86, 83]\n\n# Students\nstudents = ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace', 'Heidi', 'Ivan', 'Judy']\n\n# Size of the plot\nplt.figure(figsize=(10,5))\n\n# Plotting Math grades\nplt.scatter(students, math_grades, c='#01d28c', marker='o', label='Math Grades')\n\n# Plotting English grades\nplt.scatter(students, english_grades, c='blue', marker='x', label='English Grades')\n\nplt.title(\"Students' Grades in Math and English\")\nplt.xlabel('Students')\nplt.ylabel('Grades')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/400.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nDid the population of Country A increase consistently over the years according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(1960, 2022, 10))\npop_a = [3.0, 3.6, 4.3, 5.2, 5.8, 6.1, 6.5]\npop_b = [2.5, 3.0, 3.5, 4.0, 4.3, 4.6, 4.8]\npop_c = [5.0, 5.5, 6.0, 6.5, 7.0, 7.3, 7.6]\npop_d = [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5]\n\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Creating the scatter plots.\nax.scatter(years, pop_a, color='#967c97', label='Country A')\nax.scatter(years, pop_b, color='#cf04ff', label='Country B')\nax.scatter(years, pop_c, color='#5a017b', label='Country C')\nax.scatter(years, pop_d, color='#bfeaf0', label='Country D')\n\n# Setting the labels, title and legend\nax.set_xlabel('Years')\nax.set_ylabel('Population (in billions)')\nax.set_title('Population Growth')\nax.legend(loc='upper left')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/401.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich game had the highest sales in 2020 according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Variables\nyears = list(range(2010, 2021))\nproduct1 = [17, 19, 23, 26, 31, 33, 37, 41, 47, 52, 58]\nproduct2 = [29, 32, 34, 37, 40, 44, 47, 50, 54, 59, 63]\nproduct3 = [15, 18, 22, 24, 27, 30, 33, 38, 40, 45, 50]\nproduct4 = [5, 7, 10, 12, 17, 20, 24, 27, 29, 33, 37]\nproduct5 = [0, 3, 5, 8, 10, 15, 18, 20, 23, 27, 30]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Plot each product with a different color\nax.plot(years, product1, color='#bd3944', marker='o', label='Game A')\nax.plot(years, product2, color='#a2ee65', marker='o', label='Game B')\nax.plot(years, product3, color='#0679df', marker='o', label='Game C')\nax.plot(years, product4, color='purple', marker='o', label='Game D')\nax.plot(years, product5, color='orange', marker='o', label='Game E')\n\n# Name the x and y axis\nax.set_xlabel('Years')\nax.set_ylabel('Millions of Units Sold')\n\n# Set the title\nplt.title('Gaming Sales (2010-2020)')\n\n# Add a legend\nax.legend()\n\n# Necessary to avoid word overlap if labels are very long\nplt.tight_layout()\n\n# Save the plot as a PNG image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/403.png')\n\nplt.show()\n```\nChoices:['Game A', 'Game B', 'Game C', 'Game D', 'Game E']\nStudent's Response:Game B\n",
    "Question Text:\nWho had the least GDP growth from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Data\nyears = range(2000, 2010)\nGDP_china = [1.211, 1.339, 1.470, 1.631, 1.811, 1.938, 2.267, 2.655, 3.111, 3.597]\nGDP_usa = [10.285, 10.587, 10.64, 11.511, 12.213, 12.989, 13.815, 14.549, 14.721, 14.419]\nGDP_uk = [1.635, 1.647, 1.679, 1.837, 2.100, 2.321, 2.397, 2.621, 2.689, 2.256]\nGDP_france = [1.362, 1.383, 1.455, 1.853, 2.219, 2.276, 2.303, 2.581, 2.674, 2.606]\n\nplt.figure(figsize=(10, 7))\n\n# Plotting\nplt.plot(years, GDP_china, marker='o', color='#99f7ca', label=\"China\")\nplt.plot(years, GDP_usa, marker='o', color='#602aa4', label=\"USA\")\nplt.plot(years, GDP_uk, marker='o', color='#ff7f50', label=\"UK\")\nplt.plot(years, GDP_france, marker='o', color='#808080', label=\"France\")\n\nplt.xlabel('Year')\nplt.ylabel('GDP (trillion $)')\nplt.title('GDP growth from 2000 to 2010')\nplt.legend()\n\n# Save chart\nos.makedirs('line_charts/line_charts_visual_linguistic/train/', exist_ok=True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/405.png')\nplt.close()\n```\nChoices:['China', 'USA', 'UK', 'France']\nStudent's Response:France\n",
    "Question Text:\nWhich year has the highest number of trees planted and what is the number in millions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2021))\ntotal_forestry_area = [4.2, 4.3, 4.3, 4.2, 4.1, 4.2, 4.1, 4.1, 4.0, 4.0, 4.0, 4.1, 4.1, 4.1, 4.2, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7]\nplanted_trees_millions = [30, 45, 63, 75, 84, 95, 102, 110, 120, 130, 139, 143, 147, 151, 155, 157, 160, 165, 170, 175, 180]\ndeforestation_thousand_ha = [15, 14, 13, 12, 11, 12, 10, 9, 8, 8, 7, 7, 6, 6, 6, 5, 4, 3, 3, 2, 2]\nreplanting_thousand_ha = [2, 3, 3.5, 3.5, 4, 4, 4, 4.5, 5, 5, 5.5, 5.5, 6, 6, 6, 6, 6.5, 7, 7.5, 8, 8]\nactions_taken = [10, 11, 12, 14, 17, 20, 23, 26, 30, 34, 37, 38, 39, 40, 42, 44, 47, 50, 53, 57, 60]\n\n# Size of the figure\nplt.figure(figsize=(14, 7))\n\n# Plots\nplt.plot(years, total_forestry_area, color='#3a7d71', marker='o', label='Total Forestry Area (Billion hectare)')\nplt.plot(years, planted_trees_millions, color='#2708a4', marker='s', label='No. of Trees Planted (Millions)')\nplt.plot(years, deforestation_thousand_ha, color='#212128', marker='^', label='Deforestation (Thousand ha)')\nplt.plot(years, replanting_thousand_ha, color='#8592ca', marker='v', label='Re-foresting (Thousand ha)')\nplt.plot(years, actions_taken, color='#1d2a24', marker='x', label='Protection Actions Taken')\n\n# labels & title\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Metrics', fontsize=14)\nplt.title('Forestry Data Analysis From 2000 to 2021', fontsize=16)\n\n# Legend at the upper left corner\nplt.legend(loc='upper left')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/406.png')\nplt.show()\n```\nChoices:['2000, 30 million', '2005, 95 million', '2010, 139 million', '2015, 157 million', '2020, 180 million']\nStudent's Response:'2020, 180 million'\n",
    "Question Text:\nAccording to the scatter plot, in 2019, was the lake level higher in meters than the ground water level?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values for x axis\nyears = range(2000, 2020)\n\n# Values for y axis for each series\nrainfall = [100, 110, 105, 115, 120, 130, 125, 135, 140, 150, 145, 155, 160, 170, 165, 175, 180, 190, 185, 195]\ngroundwater = [80, 90, 85, 95, 100, 105, 100, 105, 110, 110, 105, 110, 115, 115, 110, 115, 120, 120, 115, 125]\nsnowfall = [60, 70, 65, 75, 70, 80, 85, 90, 85, 95, 90, 100, 105, 110, 105, 115, 110, 120, 115, 125]\nlake_level = [40, 50, 45, 55, 60, 65, 70, 75, 70, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130]\n\n# Create scatter plot\nplt.figure(figsize=(10,6))\nplt.scatter(years, rainfall, color='#84c071', marker='o', label='Rainfall (mm)')\nplt.scatter(years, groundwater, color='#2e34f8', marker='x', label='Groundwater (m)')\nplt.scatter(years, snowfall, color='r', marker='s', label='Snowfall (cm)')\nplt.scatter(years, lake_level, color='m', marker='d', label='Lake Level (m)')\n\n# Adding title and legend\nplt.title('Water related data over years')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/407.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich year had the highest sales in gaming?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define years and corresponding gaming sales data in millions\nyears = [2015, 2016, 2017, 2018, 2019, 2020]\nsales = [24.6, 26.8, 36.9, 43.8, 49.5, 57.9]\n\n# Create a new figure\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Generate the line chart\nax.plot(years, sales, marker='o', linestyle='-', color='b')\n\n# Add labels and title to the chart\nax.set_xlabel('Year')\nax.set_ylabel('Sales (in Millions)')\nax.set_title('Gaming Sales Over the Years')\n\n# Add grid\nax.grid(True)\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/408.png')\n\n# Display the plot\nplt.show()\n```\nChoices:[2015, 2016, 2017, 2018, 2019, 2020]\nStudent's Response:2020\n",
    "Question Text:\nIs Tennis the sport with the least number of players according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsports = ['Football', 'Basketball', 'Baseball', 'Tennis', 'Golf']\nplayers_count = [1000, 800, 600, 400, 200]\n\nplt.figure(figsize=(10,5))\nplt.plot(sports, players_count, marker='o', label='Player Counts')\nplt.title('Number of Players in Different Sports')\nplt.xlabel('Sports')\nplt.ylabel('Number of Players')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/409.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the scatter plot, which of the following feelings do cats generally have as they get older?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating four different series of data\ncat_age = [2, 3, 5, 8, 3, 5, 10, 6, 7, 12]\ncat_weight = [4, 6, 7, 10, 6, 7, 14, 9, 10, 16]\nmouse_caught = [3, 5, 7, 8, 3, 6, 9, 8, 6, 5]\nnap_hours = [12, 10, 11, 13, 9, 11, 10, 13, 14, 8]\n\n# Size of the plot\nplt.figure(figsize=(10, 6))\n\n# Creating scatter plot of given data\nplt.scatter(cat_age, cat_weight, c='blue', label='Weight of Cat with their Age')\nplt.scatter(cat_age, mouse_caught, c='green', label='Mice Caught by Cat by Age')\nplt.scatter(cat_age, nap_hours, c='red', label='Hours Slept by Cat by Age')\n\n# Creating legend\nplt.legend(loc='upper right')\n\n# Creating labels\nplt.xlabel(\"Cat Age (years)\")\nplt.ylabel(\"Numbers/Weight\")\nplt.title(\"Cat's age relation with Weight, Mice caught, Hours Slept\")\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/410.png')\n\nplt.show()\n```\nChoices:['Decrease in Weight', 'Increase in Hunting', 'Less Hours of Sleep', 'More Mice Caught']\nStudent's Response:'Less Hours of Sleep'\n",
    "Question Text:\nDid the cricket team score more than the soccer team in Game4?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sample data\ncricket_scores = [65, 85, 70, 80, 95, 100, 105]\nsoccer_scores = [55, 50, 75, 90, 120, 125, 130]\ngames = ['Game1', 'Game2', 'Game3', 'Game4', 'Game5', 'Game6', 'Game7']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Scatter plot\nax.scatter(games, cricket_scores, color='#ed2cd3', label='Cricket Scores')\nax.scatter(games, soccer_scores, color='blue', label='Soccer Scores')\n\n# Title and labels\nax.set_title('Sports Scores')\nax.set_xlabel('Games')\nax.set_ylabel('Scores')\nax.legend()\n\nfig.tight_layout()\n\n# Save the plot as a .png image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/411.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the line chart 'Average Animal Population in Different Areas', which animal population is the highest in Area2?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Average population of 4 species in four different areas\ntiger_population = [65, 80, 45, 50]\nelephant_population = [85, 95, 60, 70]\nbear_population = [55, 60, 70, 80]\nrabbit_population = [120, 130, 115, 100]\n\n# place for each area\nplaces = ['Area1', 'Area2', 'Area3', 'Area4']\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# plotting each line\nax.plot(places, tiger_population, color='#5d0a1b', marker='o', label='Tigers')\nax.plot(places, elephant_population, color='blue', marker='s', label='Elephants')\nax.plot(places, bear_population, color='green', marker='d', label='Bears')\nax.plot(places, rabbit_population, color='purple', marker='x', label='Rabbits')\n\nax.set(title='Average Animal Population in Different Areas',\n       xlabel='Area',\n       ylabel='Population')\n\n# showing legend\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/413.png')\nplt.show()\n```\nChoices:['Tigers', 'Elephants', 'Bears', 'Rabbits']\nStudent's Response:Elephants\n",
    "Question Text:\nIn the fifth month, where was fishing more productive?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The 4 series of data\nlake_fish = [10, 20, 30, 40, 50, 60]\nriver_fish = [12, 24, 36, 48, 60, 72]\npond_fish = [15, 30, 45, 60, 75, 90]\nsea_fish = [18, 36, 54, 72, 90, 108]\n\n# Creating the line chart\nplt.figure(figsize=(10,7))\nplt.plot(lake_fish, marker='o', label='Lake')\nplt.plot(river_fish, marker='v', label='River')\nplt.plot(pond_fish, marker='s', label='Pond')\nplt.plot(sea_fish, marker='*', label='Sea')\n\n# Creating labels and titles \nplt.title('Fishing Trend Over 6 Months')\nplt.xlabel('Month')\nplt.ylabel('Number of Fish Caught')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/414.png')\n\nplt.show()\n```\nChoices:['Sea', 'Pond', 'River', 'Lake']\nStudent's Response:'Sea'\n",
    "Question Text:\nBased on the graph, which sector's water consumption oscillates similarly to the rate of evaporation?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# These are the \"Time\" and the \"Water Consumption\" data\ntime = np.linspace(0, 2*np.pi, 400)\nwater_consumption_residential = np.sin(time)\nwater_consumption_commercial = np.cos(time)\nwater_consumption_industrial = np.sin(2 * time)\nevaporation_rate = np.cos(2 * time)\n\nplt.figure(figsize=(10,5))\nplt.plot(time, water_consumption_residential, marker='o', color='#246b13', linewidth=2, label='Residential')\nplt.plot(time, water_consumption_commercial, marker='o', color='blue', linewidth=2, label='Commercial')\nplt.plot(time, water_consumption_industrial, marker='o', color='red', linewidth=2, label='Industrial')\nplt.plot(time, evaporation_rate, marker='o', color='green', linewidth=2, label='Evaporation')\n\nplt.xlabel(\"Time\")\nplt.ylabel(\"Water Consumption\")\nplt.title(\"Water Consumption vs Time\")\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/415.png')\nplt.show()\n```\nChoices:['Residential', 'Commercial', 'Industrial', 'None of the above']\nStudent's Response:The rate of evaporation line in the graph oscillates in a manner similar to the 'Commercial' sector's water consumption. Both lines follow a similar pattern over time, suggesting that commercial water consumption and rate of evaporation oscillate concurrently. Although there is somewhat a similarity with the Residential and Industrial consumption, the 'Commercial' line more closely mimics the evaporation line across the time period.\n",
    "Question Text:\nDid the damages caused by natural disasters exceed 70 billion USD in 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009]\ndisaster_damages = [12, 56, 78, 32, 60, 85, 71, 65, 76, 80]  # Assume this is in billions USD\n\nplt.figure(figsize=(10, 5))\n\nplt.scatter(years, disaster_damages, color='#229efd', label='Damages', marker='o')\n\nplt.title('Damages Caused by Natural Disasters Over the Years')\nplt.xlabel('Years')\nplt.ylabel('Damages (in Billions USD)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/418.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBy approximately how much did the forest cover decrease from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Data\nyears = [2000, 2005, 2010, 2015, 2020]\nforest_cover_kmsq = [5000, 4500, 4300, 4000, 3700]  # Forest Cover in sq km\n\n# Create directories if not exists\nif not os.path.exists('line_charts/line_charts_visual_linguistic/train'):\n    os.makedirs('line_charts/line_charts_visual_linguistic/train')\n\n# Create a new figure\nplt.figure(figsize=(10,7))\n\n# Create a scatter plot\nplt.scatter(years, forest_cover_kmsq, color='green', marker='o')\n\n# Adding Title and Labels\nplt.title('Forestry Cover over the Years', fontsize=16)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Forest Cover (in sq kms)', fontsize=14)\n\n# Adding a legend\nplt.legend(['Forest Cover'], loc='upper right')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/419.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['500 sq kms', '800 sq kms', '1000 sq kms', '1300 sq kms']\nStudent's Response:1300\n",
    "Question Text:\nDid the number of travelers keep increasing every year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# This is the data\nyears = [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]\ntravelers_in_millions = [690, 700, 750, 770, 800, 850, 900, 950, 1000, 1050]\n\n# Create a plot with a specific size\nplt.figure(figsize = (10, 6))\n\n# Plot the data\nplt.plot(years, travelers_in_millions, marker = 'o', color = '#714adb')\n\n# Add labels and title\nplt.title(\"Number of Travelers Over the Years\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Number of Travelers (In Millions)\")\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/420.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: How many architectural structures were estimated to be there in the year 2015?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# defining data for the plot\nyears = [2000, 2005, 2010, 2015, 2020]\narchitectural_structures = [1800, 2000, 2100, 2250, 2400]\n\n# defining the size of the plot\nplt.figure(figsize=(10,6))\n\n# plotting the line chart\nplt.plot(years, architectural_structures, marker='o', color='#8dbdc7', label='Architectural Structures')\n\n# label the plot\nplt.title('Evolution of Architectural Structures over the Years')\nplt.xlabel('Year')\nplt.ylabel('Number of Architectural Structures (in thousands)')\nplt.legend()\n\n# save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/421.png')\n\nplt.show()\n```\nChoices:['1800', '2000', '2100', '2250', '2400']\nStudent's Response:'2250'\n",
    "Question Text:\nIs the amount of \"Plastic Waste\" constantly increasing (from 2010 to 2020)?\nFigure Code:\n```\n# Importation of the required libraries\nimport matplotlib.pyplot as plt\n\n# Define data\ncarbon_emission = [8, 10, 20, 22, 25, 28, 30, 32, 35, 37, 40]\nplastic_waste = [18, 20, 22, 28, 30, 35, 40, 42, 45, 48, 50]\ndeforestation = [10, 12, 16, 20, 25, 28, 30, 33, 35, 38, 40]\n\nyear = range(2010, 2021)\n\n# Create scatter plot\nplt.figure(figsize=(10, 7))\nplt.scatter(year, carbon_emission, color='#751e3a', marker='o', label='Carbon Emission')\nplt.scatter(year, plastic_waste, color='#96aa3f', marker='x', label='Plastic Waste')\nplt.scatter(year, deforestation, color='#ba7e82', marker='^', label='Deforestation')\n\nplt.xlabel('Year')\nplt.ylabel('Amount in Millions Metric Tons')\nplt.title('Environmental Issues from 2010-2020')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/423.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich region had the highest forest cover increase from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2021))\nforest_cover_north = [30.2, 30.5, 30.7, 30.8, 30.9, 30.9, 31.0, 31.1, 31.1, 31.2, 31.2, 31.3, 31.3, 31.4, 31.5, 31.6, 31.6, 31.7, 31.8, 31.9, 32.0]\nforest_cover_south = [18.2, 18.3, 18.3, 18.4, 18.5, 18.6, 18.7, 18.8, 18.8, 18.9, 19.0, 19.1, 19.1, 19.2, 19.3, 19.4, 19.5, 19.6, 19.7, 19.8, 20.0]\nforest_cover_east = [22.5, 22.6, 22.6, 23.0, 23.2, 23.4, 23.5, 23.7, 23.8, 24.0, 24.2, 24.4, 24.5, 24.7, 25.0, 25.2, 25.4, 25.6, 25.8, 26.0, 26.2]\nforest_cover_west = [14.1, 14.3, 14.4, 14.5, 14.6, 14.8, 15.0, 15.2, 15.4, 15.6, 15.7, 15.9, 16.1, 16.3, 16.5, 16.7, 16.9, 17.1, 17.3, 17.5, 17.7]\nforest_cover_central = [25.3, 25.7, 25.9, 26.1, 26.2, 26.3, 26.5, 26.6, 26.8, 27.0, 27.2, 27.4, 27.6, 27.8, 28.0, 28.2, 28.4, 28.6, 28.8, 29.0, 29.2]\n\n# Plot\nplt.figure(figsize=(10, 8))\nplt.scatter(years, forest_cover_north, marker='o', label=\"North\")\nplt.scatter(years, forest_cover_south, marker='o', label=\"South\")\nplt.scatter(years, forest_cover_east, marker='o', label=\"East\")\nplt.scatter(years, forest_cover_west, marker='o', label=\"West\")\nplt.scatter(years, forest_cover_central, marker='o', label=\"Central\")\n\nplt.title('Forestry Coverage Over Years')\nplt.xlabel('Year')\nplt.ylabel('Forest Cover (%)')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/424.png')\nplt.show()\n```\nChoices:['North', 'South', 'East', 'West', 'Central']\nStudent's Response:'Central'\n",
    "Question Text:\nWhat is the difference in donations to Charity A and Charity E in the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nyears = [2016, 2017, 2018, 2019, 2020]\ncharity_A = [500, 600, 700, 800, 900]\ncharity_B = [450, 550, 650, 750, 850]\ncharity_C = [400, 500, 600, 700, 800]\ncharity_D = [350, 450, 550, 650, 750]\ncharity_E = [300, 400, 500, 600, 700]\n\n# Plot a line chart\nplt.figure(figsize=(10, 5))\nplt.plot(years, charity_A, color='#33eac2', marker='o', label='Charity A')\nplt.plot(years, charity_B, color='#1a5c67', marker='o', label='Charity B')\nplt.plot(years, charity_C, color='#213a0a', marker='o', label='Charity C')\nplt.plot(years, charity_D, color='#d3e002', marker='o', label='Charity D')\nplt.plot(years, charity_E, color='#84bc8c', marker='o', label='Charity E')\n\n# Add labels, title and legend\nplt.xlabel('Years')\nplt.ylabel('Donations in $K')\nplt.title('Donations to Charities Over the Years')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/425.png') \nplt.show()\n```\nChoices:['$100K', '$200K', '$300K', '$400K', '$500K']\nStudent's Response:$400K\n",
    "Question Text:\nDid 'Adam' score better than 'Ray'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define grades information\nstudents = ['Adam', 'Luca', 'Ray', 'Dia', 'Jes']\ngrades = [89, 92, 76, 95, 84]\n\n# Create figure\nplt.figure(figsize=(10,5))\n\n# Scatter plot of grades\nplt.scatter(students, grades, marker='o', color='b')\n\n# Set labels on chart\nplt.xlabel('Students')\nplt.ylabel('Grades')\nplt.title('Grades Scatter Plot')\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/426.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the plotted line chart, in which year did the number of floods exceed the number of earthquakes for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = range(2000, 2020)\nearthquakes = [14, 17, 22, 18, 20, 16, 21, 26, 24, 19, 28, 27, 30, 28, 36, 35, 38, 43, 40, 42]\nfloods = [33, 35, 38, 42, 39, 46, 50, 52, 54, 55, 58, 61, 64, 65, 66, 70, 74, 75, 80, 82]\n\nplt.figure(figsize=(10,5))\nplt.plot(years, earthquakes, marker='o', color='#3c0302', label='Earthquakes')\nplt.plot(years, floods, marker='o', color='#533bcf', label='Floods')\n\nplt.title('Number of Natural Disasters per Year (2000-2020)')\nplt.xlabel('Year')\nplt.ylabel('Number of Natural Disasters')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/428.png')\nplt.show()\n```\nChoices:['2000', '2005', '2010', '2015']\nStudent's Response:2005\n",
    "Question Text:\nBased on the scatter plot, what hobby is the most popular among students?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nhobbies = ['Reading', 'Photography', 'Travel', 'Dancing', 'Cooking']\nstudents_count = [42, 35, 48, 30, 40]\n\n# Create line chart\nplt.figure(figsize=(10, 5))\nplt.scatter(hobbies, students_count, color='#eb45f5', marker='o')\nplt.title('Number of Students Interested in Different Hobbies')\nplt.xlabel('Hobbies')\nplt.ylabel('Number of Students')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/430.png')\nplt.show()\n```\nChoices:['Reading', 'Photography', 'Travel', 'Dancing', 'Cooking']\nStudent's Response:Travel\n",
    "Question Text:\nIs a Software Engineer's income more than a Nurse's income in the 10th year of their career?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndelivery_driver = [30, 35, 40, 45, 50, 55, 60, 65, 70, 75]\nsoftware_engineer = [70, 75, 80, 85, 90, 95, 100, 105, 110, 115]\nnurse = [60, 65, 70, 75, 80, 85, 90, 95, 100, 105]\nteacher = [50, 55, 60, 65, 70, 75, 80, 85, 90, 95]\n\nyears = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nplt.figure(figsize=(10, 8))\nplt.plot(years, delivery_driver, marker='o', color='#e77cc9', label='Delivery Driver')\nplt.plot(years, software_engineer, marker='o', color='#f08e03', label='Software Engineer')\nplt.plot(years, nurse, marker='o', color='#4109bd', label='Nurse')\nplt.plot(years, teacher, marker='o', color='#7f5545', label='Teacher')\n\nplt.xlabel('Years of Experience')\nplt.ylabel('Income (in thousands)')\nplt.title('Income vs Years of Experience for different jobs')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/431.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich plant showed the most growth in the 6th week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nsunflower_growth = [30, 45, 70, 85, 110, 150]\ntulip_growth = [15, 25, 35, 40, 55, 60]\nrose_growth = [25, 40, 55, 75, 100, 120]\nweeks = [1, 2, 3, 4, 5, 6]\n\n# Creating the scatter plot\nplt.figure(figsize=(10,6))\nplt.scatter(weeks, sunflower_growth, color='#5f5f12', marker='o', label='Sunflower Growth')\nplt.scatter(weeks, tulip_growth, color='#850324', marker='x', label='Tulip Growth')\nplt.scatter(weeks, rose_growth, color='#1be378', marker='s', label='Rose Growth')\n\n# Adding labels, title and legend\nplt.xlabel('Weeks')\nplt.ylabel('Growth in cm')\nplt.title('Plant Growth over weeks')\nplt.legend()\n\n# Saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/432.png')\nplt.show()\n```\nChoices:['Sunflower', 'Tulip', 'Rose']\nStudent's Response:Sunflower\n",
    "Question Text:\nHas the amount of charity donations been increasing every year from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2015, 2021))\ndonations = [100, 150, 130, 200, 210, 230]\n\nfig = plt.figure(figsize=(10,6))\nplt.plot(years, donations, marker='o', label=\"Charity Donations\")\nplt.xlabel('Year')\nplt.ylabel('Donations (in $ thousands)')\nplt.title('Charity Donations from 2015 - 2020')\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/434.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the graph, which of the following is true about the trend of global and Arctic average temperatures from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2020))\nglobal_temp = [14.4, 14.5, 14.6, 14.8, 14.9, 15.2, 15.4, 15.5, 15.6, 15.8, 15.9, 16.0, 16.2, 16.3, 16.5, 16.7, 16.8, 16.9, 17.0, 17.2]\narctic_temp = [12, 12.2, 12.5, 13, 13.2, 13.5, 14, 14.3, 14.6, 15, 15.3, 15.6, 16, 16.3, 16.7, 17, 17.3, 17.6, 18, 18.3]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.plot(years, global_temp, marker='o', color='#b40a1d', label='Global Average Temperature')\nax.plot(years, arctic_temp, marker='o', color='#bb420e', label='Arctic Average Temperature')\n\nax.set_xlabel('Years')\nax.set_ylabel('Temperature (\u00b0C)')\nax.set_title('Global Warming: Global and Arctic Average Temperature')\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/435.png')\nplt.show()\n```\nChoices:['Both global and Arctic average temperatures have remained constant.', 'Both global and Arctic average temperatures have decreased.', 'Both global and Arctic average temperatures have increased.', 'Global average temperature has increased while Arctic average temperature has decreased.', 'Global average temperature has remained constant while Arctic average temperature has increased.']\nStudent's Response:'Both global and Arctic average temperatures have increased.'\n",
    "Question Text:\nDid Event 2 happen more times than Event 1 in 1940?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Variables to store dates and events\nyears = range(1900, 2000, 10)\nevent1_happened = [5, 7, 8, 3, 10, 12, 5, 7, 10, 8]\nevent2_happened = [7, 6, 8, 5, 10, 8, 5, 6, 7, 15]\n\n\n# Create the Figure and Axes objects\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Plot the data\nax.plot(years, event1_happened, marker='o', label='Event 1')\nax.plot(years, event2_happened, marker='x', label='Event 2')\n\n# Set the title and labels\nax.set_title('Historical Events Overview')\nax.set_xlabel('Years')\nax.set_ylabel('Number of times an event happened')\n\n# Show the legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/436.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIs the sales of 'Bear' toy in 2021 higher than in 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntoys = ['Bear', 'Doll', 'Car', 'Train', 'Lego']\nsales_2019 = [200, 150, 300, 100, 250]\nsales_2021 = [220, 110, 350, 95, 270]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# creating the scatter plot\nax.scatter(toys, sales_2019, color ='b', label='2019 Sales') \nax.scatter(toys, sales_2021, color ='r', label='2021 Sales') \n\n# setting labels \nplt.xlabel('Toys') \nplt.ylabel('Sales in thousand')\n  \n# 'loc' for location of legend\nax.legend(loc='upper right')\n\n# setting the title\nplt.title('Sales of Toys in 2019 and 2021') \n\n# saving the plot as a 'png'\nplt.savefig('line_charts/line_charts_visual_linguistic/train/437.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the sector with the least employment in 2020 according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Employment Data, in thousands\nyear = range(2010,2021)\nemployment_tech = [1325, 1430, 1570, 1720, 1845, 1920, 2100, 2270, 2380, 2500, 2600]\nemployment_healthcare = [2080, 2250, 2365, 2510, 2630, 2740, 2890, 3005, 3135, 3270, 3400]\nemployment_finance = [1680, 1700, 1740, 1800, 1840, 1890, 1950, 2000, 2085, 2150, 2200]\nemployment_education = [2100, 2125, 2200, 2260, 2340, 2400, 2490, 2550, 2600, 2660, 2700]\n\nplt.figure(figsize=(10,6))\n\nplt.scatter(year, employment_tech, color='#56745f', label='Tech')\nplt.scatter(year, employment_healthcare, color='#f54242', label='Healthcare')\nplt.scatter(year, employment_finance, color='#42a7f5', label='Finance')\nplt.scatter(year, employment_education, color='#f5a142', label='Education')\n\nplt.title('Employment in Thousands (2010 - 2020)')\nplt.xlabel('Year')\nplt.ylabel('Employment (in thousands)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/438.png')\nplt.show()\n```\nChoices:['Tech', 'Healthcare', 'Finance', 'Education']\nStudent's Response:Finance\n",
    "Question Text:\nDoes the scatter plot show that as the number of travel days increases, the cost of travel also increases?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nnumber_of_people = [70, 80, 75, 90, 85]\nnumber_of_days = [10, 15, 20, 25, 30]\ncost_of_travel = [1000, 1500, 2000, 2500, 3000]\n\n# Create Scatter plot\nplt.figure(figsize=(10, 6))\nplt.scatter(number_of_days, number_of_people, marker='o', color='r', label='Number of People')\nplt.scatter(number_of_days, cost_of_travel, marker='o', color='g', label='Cost of Travel')\n\n# Labels and Title\nplt.title(\"Travel: Number of People vs Days and Cost of Travel vs Days\")\nplt.xlabel(\"Number of Days\")\nplt.ylabel(\"Number of People and Cost of Travel\")\nplt.legend()\n\n# Save Figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/440.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Does the scatter plot show that more calories are burned every single day?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data for fitness activities, assumed to be in time order\ndays = list(range(1, 31))  # 30 days in a month\ncalories_burned = [400, 420, 450, 470, 480, 510, 530, 550, 580, 600, 620, 640, 660, 680, 700, \n                   720, 740, 750, 770, 790, 820, 840, 860, 880, 890, 920, 940, 950, 970, 990]  \n\nfig = plt.figure(figsize=(10,5)) # Figsize to avoid overlap\nplt.scatter(days, calories_burned, color='b', marker='o')\n\n# design elements\nplt.title('Calories Burned vs. Day of the Month')\nplt.xlabel('Day of the Month')\nplt.ylabel('Calories Burned')\n\n# save to file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/441.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of fires in 2001, as shown in the chart, greater than the number of floods in the same year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the data sets\nearthquakes = [7.0, 6.5, 7.2, 6.8, 6.9]\ntornadoes = [800, 1100, 1200, 850, 900]\nfires = [50000, 60000, 65000, 58000, 62000]\nfloods = [2000, 3000, 2500, 2700, 2600]\nheatwaves = [120, 130, 110, 120, 125]\n\n# Defining the index\nindex = ['2000', '2001', '2002', '2003', '2004']\n\n# Creating scatter plots\nplt.scatter(index, earthquakes, label='Earthquakes')\nplt.scatter(index, tornadoes, label='Tornadoes')\nplt.scatter(index, fires, label='Fires')\nplt.scatter(index, floods, label='Floods')\nplt.scatter(index, heatwaves, label='Heatwaves')\n\n# Making legend, labels for the axes and chart title\nplt.legend()\nplt.xlabel('Year')\nplt.ylabel('Number of Occurrences')\nplt.title('Natural Disasters from 2000 to 2004')\n\n# Saving the chart as an image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/442.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid City1 had fewer crime rates in 1980 compared to 1970?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncities = ['City1', 'City2', 'City3', 'City4', 'City5']\ncrime_rates = [100, 125, 50, 180, 160]\n\n\n# Scatter plot\nplt.figure(figsize=(10, 7)) \nplt.scatter(cities, crime_rates, color ='#474e10', label='2010')\nplt.scatter(cities, [90, 110, 55, 175, 155], color ='#7b37a3', label='2000')\nplt.scatter(cities, [80, 98, 60, 170, 145], color ='#33557B', label='1990')\nplt.scatter(cities, [75, 92, 65, 160, 140], color ='#931330', label='1980')\nplt.scatter(cities, [70, 85, 70, 150, 130], color ='#1E3409', label='1970')\n\n# Labels and Title\nplt.title('Citywide Crime Rates over the years')\nplt.xlabel('Cities')\nplt.ylabel('Crime Rates')\nplt.legend(title='Years')\n\n# Save Figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/444.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the population of India surpass that of Brazil in the year of 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Population growth data\nyears = list(range(1970, 2021, 10))\nusa_pop = [209.6, 228.8, 250.7, 282.2, 304.9, 331.5]\nchina_pop = [818.3, 988.7, 1148.4, 1262.6, 1337.7, 1444.0]\nindia_pop = [553.6, 687.7, 845.5, 1020.6, 1210.8, 1392.7]\nbrazil_pop = [95.8, 120.9, 146.0, 174.0, 192.8, 213.8]\n\n# Create a scatter plot\nplt.figure(figsize=(12, 8))\nplt.scatter(years, usa_pop, color='#cc2031', label='USA', marker='o')\nplt.scatter(years, china_pop, color='#f19f19', label='China', marker='s')\nplt.scatter(years, india_pop, color='#7f3344', label='India', marker='*')\nplt.scatter(years, brazil_pop, color='#19897f', label='Brazil', marker='x')\n\n# Set labels, title, and legend\nplt.xlabel('Years')\nplt.ylabel('Population (Millions)')\nplt.title('Population Growth')\nplt.legend(loc='upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/445.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nAccording to the line chart, which fitness regime do people spend the most time on in the 8th month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonths = list(range(1, 13)) # Representing Months\nrunning = [80, 85, 88, 90, 98, 100, 101, 105, 101, 120, 119, 125]\nyoga = [70, 72, 77, 85, 90, 92, 95, 99, 112, 113, 120, 122]\nweights = [50, 60, 70, 90, 100, 110, 112, 115, 115, 120, 125, 130]\nswimming = [20, 25, 30, 40, 45, 60, 65, 70, 85, 90, 100, 105]\n\nplt.figure(figsize=(10, 6))\n\n# Plots\nplt.plot(months, running, color='#758873', marker='o', label='Running')\nplt.plot(months, yoga, color='#81fd78', marker='s', label='Yoga')\nplt.plot(months, weights, color='#b86ce9', marker='v', label='Weights')\nplt.plot(months, swimming, color='#a89eb0', marker='^', label='Swimming')\n\n# Labels\nplt.title('Comparative Analysis of Different Kinds of Fitness Regimes')\nplt.xlabel('Monthly Progress')\nplt.ylabel('Time Spent in Mins')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/446.png')\n\nplt.show()\n```\nChoices:['Running', 'Yoga', 'Weights', 'Swimming']\nStudent's Response:Running\n",
    "Question Text:\nWas the duration of Yoga activity longer than Cardio every day in the week?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Assuming arbitrary data on fitness metrics over a week period\ndays = list(range(1, 8))\ncardio = [20, 25, 15, 18, 22, 21, 23]\nweights = [15, 17, 18, 16, 19, 20, 21]\nyoga = [30, 35, 32, 33, 34, 36, 35]\n\nplt.figure(figsize=(10,5))\n\nplt.plot(days, cardio, marker='o', color='#dc9e71', label='Cardio')\nplt.plot(days, weights, marker='o', color='#9a8594', label='Weights')\nplt.plot(days, yoga, marker='o', color='#77a8a8', label='Yoga')\n\nplt.xlabel('Days')\nplt.ylabel('Duration (minutes)')\nplt.title('Fitness Activity Duration over a week')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/447.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the period between 2000 and 2020, which organization showed a significant increase in the number of space missions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Assuming we have years and the number of space missions launched by NASA and SpaceX\nyears = np.array([2000, 2005, 2010, 2015, 2020])\nnasa_missions = np.array([17, 25, 18, 31, 24])\nspacex_missions = np.array([0, 0, 2, 6, 25])\n\n# Creating a larger figure to prevent word overlap\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Plot for NASA Missions\nax.scatter(years, nasa_missions, c='#42313e', label=\"NASA Missions\", marker='o')\n\n# Plot for SpaceX Missions\nax.scatter(years, spacex_missions, c='orange', label=\"SpaceX Missions\", marker='^')\n\n# Applying labels, title and legend\nplt.xlabel('Years')\nplt.ylabel('Number of Missions')\nplt.title('Space Exploration')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/448.png')\n\n# Displaying the plot\nplt.show()\n```\nChoices:['NASA', 'SpaceX', 'Both showed the same increase', 'None of them']\nStudent's Response:SpaceX\n",
    "Question Text:\nHas the income of Person D increased every year from year 1 to year 7?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for incomes of 5 people over 7 years\nyrs = list(range(1,8))\nA = [30000, 32000, 35000, 36000, 37000, 40000, 41000]\nB = [35000, 38000, 40000, 42000, 43000, 45000, 46000]\nC = [40000, 41000, 42000, 43000, 44000, 45000, 46000]\nD = [28000, 29000, 29500, 30000, 31000, 32000, 33000]\nE = [37000, 38000, 39000, 40000, 42000, 43000, 44000]\n\nplt.figure(figsize=[10,10])\n\n# Scatter plots for each person's income over the years\nplt.scatter(yrs, A, color ='#a1f6d5', label ='Person A', marker='o')\nplt.scatter(yrs, B, color ='r', label ='Person B', marker='v')\nplt.scatter(yrs, C, color ='b', label ='Person C', marker='*')\nplt.scatter(yrs, D, color ='g', label ='Person D', marker='s')\nplt.scatter(yrs, E, color ='y', label ='Person E', marker='+')\n\n# Titles and labels\nplt.xlabel('Years')\nplt.ylabel('Income in dollars')\nplt.title('Income over time for 5 individuals')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/449.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nBased on the line chart, by how much (in mm) has the sea level changed from the year 1970 to the forecasted value in the year 2030?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(1970, 2030))\nco2_levels = [324.45, 326.51, 328.54, 330.59, 332.75, 334.78, 336.84, 338.75, 340.87, 343.01,\n              345.21, 347.34, 349.23, 351.48, 354.19, 356.23, 358.89, 361.33, 363.73, 366.65,\n              369.55, 372.25, 375.02, 377.49, 379.92, 382.63, 385.61, 388.71, 391.67, 394.50,\n              397.11, 400.85, 403.72, 406.64, 409.55, 412.57, 415.79, 419.05, 421.04, 423.96,\n              426.51, 429.34, 432.46, 435.59, 438.52, 441.46, 444.57, 447.58, 450.70, 453.93, \n              457.21, 460.43, 463.79, 467.21, 470.64, 474.17, 477.85, 481.65, 485.52, 489.45]\navg_temp_anomalies = [0.01, 0.03, 0.04, 0.05, 0.07, 0.09, 0.11, 0.13, 0.16, 0.19,\n                      0.22, 0.26, 0.30, 0.34, 0.39, 0.44, 0.49, 0.55, 0.61, 0.68,\n                      0.75, 0.83, 0.91, 1.00, 1.09, 1.19, 1.30, 1.41, 1.53, 1.65,\n                      1.78, 1.92, 2.06, 2.21, 2.37, 2.53, 2.70, 2.88, 3.06, 3.25,\n                      3.45, 3.66, 3.87, 4.09, 4.32, 4.56, 4.80, 5.05, 5.31, 5.58,\n                      5.86, 6.15, 6.45, 6.76, 7.08, 7.41, 7.75, 8.10, 8.46, 8.83]\nsealevel_changes = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,\n                    1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,\n                    2.1, 2.3, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 3.9,\n                    4.1, 4.3, 4.5, 4.7, 5.0, 5.3, 5.6, 5.9, 6.2, 6.5,\n                    6.9, 7.3, 7.7, 8.1, 8.5, 8.9, 9.4, 9.9, 10.3, 10.8,\n                    11.3, 11.8, 12.3, 12.9, 13.5, 14.0, 14.6, 15.2, 15.8, 16.5]\n\nplt.figure(figsize=(15, 8))\n\nplt.plot(years, co2_levels, '#e7517e', marker='o', label='CO2 Levels (ppm)')\nplt.plot(years, avg_temp_anomalies, 'g', marker='o', label='Average Temp Anomalies (\u00b0C)')\nplt.plot(years, sealevel_changes, 'b', marker='o', label='Sea Level Changes (mm)')\n\nplt.title('Global Warming Indicators (1970 - 2030)')\nplt.xlabel('Years')\nplt.ylabel('Values')\nplt.legend(loc='upper left')\n\nplt.grid(True)\nplt.tight_layout()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/450.png')\nplt.show()\n```\nChoices:['4.9mm', '16.5mm', '26.8mm', '35.0mm']\nStudent's Response:16.5mm\n",
    "Question Text:\nBased on the line chart, which land type saw a consistent increase in coverage from 2000 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Data\nyears = [x for x in range(2000, 2021)]\nforests = [30.0, 29.7, 29.5, 29.2, 28.9, 28.7, 28.5, 28.3, 28.0, 27.8, 27.5, 27.3, 27.0, 26.8, 26.5, 26.2, 26.1, 25.9, 25.6, 25.4, 25.2]\nrangelands = [27.3, 27.0, 27.7, 27.9, 28.2, 28.5, 28.3, 28.5, 28.7, 28.9, 29.0, 29.2, 29.4, 29.6, 29.8, 30.0, 30.2, 30.4, 30.5, 30.7, 31.0]\ncrops = [21.1, 21.3, 21.6, 21.8, 22.0, 22.2, 22.5, 22.7, 22.9, 23.2, 23.4, 23.7, 23.9, 24.1, 24.4, 24.6, 24.8, 24.9, 25.2, 25.4, 25.6]\nurban = [8.1, 8.3, 8.6, 8.8, 9.0, 9.2, 9.6, 9.8, 10.0, 10.2, 10.4, 10.7, 10.8, 11.0, 11.2, 11.4, 11.6, 11.9, 12.1, 12.3, 12.5]\nwetlands = [13.5, 13.7, 13.9, 14.2, 14.4, 14.6, 14.9, 15.0, 15.2, 15.4, 15.8, 15.9, 16.2, 16.3, 16.6, 16.8, 16.9, 17.1, 17.3, 17.5, 17.8]\n\n# Ensure appropriate folders exist\nos.makedirs(\"line_charts/line_charts_visual_linguistic/train/\", exist_ok = True)\n\n# Plot size\nplt.figure(figsize=(12, 8))\n\n# Plotting data\nplt.plot(years, forests, color='#df6581', marker='o', label=\"Forests\")\nplt.plot(years, rangelands, color='#44de90', marker='o', label=\"Rangelands\")\nplt.plot(years, crops, color='#3a3e16', marker='o', label=\"Crops\")\nplt.plot(years, urban, color='#da15dd', marker='o', label=\"Urban Areas\")\nplt.plot(years, wetlands, color='#8961f9', marker='o', label=\"Wetlands\")\n\n# Axes labels\nplt.xlabel('Years')\nplt.ylabel('Coverage in %')\n\n# Title\nplt.title('Land Coverage Over the Period of 2000-2021')\n\n# Legends\nplt.legend()\n\n# Saving figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/451.png')\n\nplt.show()\n```\nChoices:['Forests', 'Rangelands', 'Crops', 'Urban Areas', 'Wetlands']\nStudent's Response:\"Urban Areas\"\n",
    "Question Text:\nDoes the population increase over the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Years as X-axis\nyears = [2000, 2005, 2010, 2015, 2020]\n\n# Population (in billions) as Y-axis\npopulation = [6.12, 6.41, 6.92, 7.35, 7.79 ]\n\nplt.figure(figsize=(10,5))\nplt.scatter(years, population, c='#d7357c', marker='o')\nplt.title('Population Growth')\nplt.xlabel('Years')\nplt.ylabel('Population (in billions)')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/452.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich artist consistently painted the same number of paintings every year over the span of 5 years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create some data\npainting1 = [5, 8, 10, 3, 9]\npainting2 = [9, 5, 8, 10, 3]\npainting3 = [8, 9, 5, 3, 10]\npainting4 = [5, 3, 10, 9, 8]\n\n# Create a figure and plot the data\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.scatter(range(5), painting1, color='#0a23a3', label='Picasso')\nax.scatter(range(5), painting2, color='#9088d3', label='Van Gogh')\nax.scatter(range(5), painting3, color='#7ff531', label='Monet')\nax.scatter(range(5), painting4, color='#9d78fa', label='Da Vinci')\n\n# Set the labels and title\nax.set_xlabel('Years')\nax.set_ylabel('Number of Paintings')\nax.set_title('Number of Paintings by Artist over Years')\n\n# Show the legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/453.png')\n\nplt.show()\n```\nChoices:['Picasso', 'Van Gogh', 'Monet', 'Da Vinci']\nStudent's Response:None\n",
    "Question Text:\nAccording to the line chart, in which factor has the increase been most evident from 1980 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Sample data\nyears = np.linspace(1980, 2020, 5)\ntemperature_increase = [0.6, 0.8, 1.2, 1.5, 1.8]\nco2_emission_increase = [338, 357, 385, 398, 416]\nforest_cover_loss = [15.7, 16.2, 16.6, 17.1, 17.7]\nglacier_melt = [0.3, 0.5, 0.9, 1.1, 1.3]\nsea_level_rise = [0.2, 0.3, 0.5, 0.7, 1.1]\n\nplt.figure(figsize=(10, 8))\n\n# Plotting\nplt.plot(years, temperature_increase, color='#5f86de', marker='o', label='Temperature Rise (\u00b0C)')\nplt.plot(years, co2_emission_increase, color='#61ece5', marker='o', label='CO2 Emission Increase (ppm)')\nplt.plot(years, forest_cover_loss, color='#6d1884', marker='o', label='Forest Cover Loss (%)')\nplt.plot(years, glacier_melt, color='y', marker='o', label='Glacier Melting (meters)')\nplt.plot(years, sea_level_rise, color='r', marker='o', label='Sea Level Rise (inches)')\n\n# Customizations\nplt.xlabel('Years')\nplt.ylabel('Increase')\nplt.title('Global Warming Factors Over the Years')\nplt.legend()\nplt.grid()\n\n# Save plot to disk\nplt.savefig('line_charts/line_charts_visual_linguistic/train/454.png')\n\nplt.show()\n```\nChoices:['Temperature Rise (\u00b0C)', 'CO2 Emission Increase (ppm)', 'Forest Cover Loss (%)', 'Glacier Melting (meters)', 'Sea Level Rise (inches)']\nStudent's Response:'CO2 Emission Increase (ppm)'\n",
    "Question Text:\nHow many minutes were spent on cardio in week 1 according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nweek = [1, 2, 3, 4, 5]\ncardio_minutes = [150, 170, 155, 180, 210]\nstrength_minutes = [60, 70, 65, 75, 90]\nyoga_minutes = [30, 40, 50, 45, 50]\ncycling_minutes = [50, 80, 60, 100, 90]\n\nplt.figure(figsize=(10, 6))\n\nplt.plot(week, cardio_minutes, '#4d1938', marker='o', label='Cardio')\nplt.plot(week, strength_minutes, 'b', marker='s', label='Strength')\nplt.plot(week, yoga_minutes, 'g', marker='d', label='Yoga')\nplt.plot(week, cycling_minutes, 'y', marker='*', label='Cycling')\n\nplt.title('Weekly Fitness Routine')\nplt.xlabel('Week')\nplt.ylabel('Minutes')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/455.png')\nplt.show()\n```\nChoices:[120, 150, 180, 210]\nStudent's Response:150\n",
    "Question Text:\nIn which year, according to the chart, were more novels published than poems?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Creating series of data \nyears = list(range(2000, 2020))\nnovels_published = [15, 20, 18, 22, 25, 28, 30, 32, 35, 37, 40, 42, 45, 48, 50, 52, 55, 57, 60, 63]\npoems_published = [10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n\n# Creating the size of the figure to prevent word overlap\nplt.figure(figsize=(12,6))\n\n# Plotting the series of data\nplt.plot(years, novels_published, color='#e4040b', marker='o', label='Novels published')\nplt.plot(years, poems_published, color='#055038', marker='o', label='Poems published')\n\n# Adding labels and legend to the plot\nplt.title('Literature Publication over the years (2000 - 2019)')\nplt.xlabel('Years')\nplt.ylabel('Number of publications')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/456.png')\nplt.show()\n```\nChoices:['2000', '2005', 'none of the above', 'all of the above']\nStudent's Response:'2000', '2005'\n",
    "Question Text:\nWhich historical event has the highest number of occurrences in the year 1980?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define years as per historical events\nyears = list(range(1900, 2020, 20))\n\n# Number of historical events (made up data)\nworld_war_events = [7, 10, 13, 15, 22, 27]\ncold_war_events = [6, 8, 18, 22, 30, 40]\nspace_exploration_events = [0, 2, 20, 35, 50, 60]\n\nplt.figure(figsize=[10,5])\n\nplt.plot(years, world_war_events, color='#98a719', marker='o', label='World War Events')\nplt.plot(years, cold_war_events, color='#a70060', marker='o', label='Cold War Events')\nplt.plot(years, space_exploration_events, color='#0023a7', marker='o', label='Space Exploration Events')\n\nplt.xlabel('Years')\nplt.ylabel('Number of Events')\nplt.title('Number of Different Historical Events Over Time')\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/457.png')\nplt.show()\n```\nChoices:['World War Events', 'Cold War Events', 'Space Exploration Events']\nStudent's Response:Space Exploration Events\n",
    "Question Text:\nDid 'Author 4' sell more books than 'Author 1' in the 3rd month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data of books sold by different authors\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\ndata = [ [10, 15, 5, 14, 10], [6, 10, 13, 6, 14], [2, 15, 10, 14, 0], [6, 17, 4, 14, 15]]\n\nfig,axs = plt.subplots(figsize=(10,8)) \n\nfor ix, author in enumerate(authors):\n    plt.scatter(range(1,6), data[ix], label=author, color=['#0f2fa3', '#b92895', '#620197', '#0f9876'][ix])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Number of books sold\")\nplt.title(\"Books sold by authors over 5 months\")\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/459.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat color represents Blood Pressure in scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ntime = list(range(1, 11))\nheart_rate = [80, 82, 84, 90, 92, 94, 96, 100, 102, 104]\nblood_pressure = [120, 122, 124, 125, 127, 130, 132, 134, 136, 138]\nsugar_level = [100, 102, 103, 105, 106, 108, 110, 111, 113, 114]\ncalories_burnt = [200, 210, 220, 230, 240, 250, 260, 270, 280, 290]\nweight = [75, 74.5, 74, 73.5, 73, 72.5, 72, 71.5, 71, 70.5]\n\n# Scatter plot\nfig = plt.figure(figsize=(10, 10))\nplt.scatter(time, heart_rate, c='#fe6bd7', label=\"Heart Rate\")\nplt.scatter(time, blood_pressure, c='#8302ac', label=\"Blood Pressure\")\nplt.scatter(time, sugar_level, c='g', label=\"Sugar Level\")\nplt.scatter(time, calories_burnt, c='b', label=\"Calories Burnt\")\nplt.scatter(time, weight, c='r', label=\"Weight\")\n\n# Labels\nplt.title('Health Metrics Over Time')\nplt.xlabel('Time (months)')\nplt.ylabel('Metrics')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/460.png')\nplt.show()\n```\nChoices:['#fe6bd7', '#8302ac', 'g', 'b', 'r']\nStudent's Response:'#8302ac'\n",
    "Question Text:\nWhich natural disaster had the highest number of occurrences in the year 2005?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nearthquake = [5, 10, 15, 20, 25]\nfloods = [7, 14, 21, 28, 35]\nhurricane = [8, 16, 24, 32, 40]\nfires = [15, 30, 45, 60, 75]\ntsunamis = [2, 4, 6, 8, 10]\nyears = [2001, 2003, 2005, 2007, 2009]\n\nplt.figure(figsize=[10,8])\n\nplt.scatter(years, earthquake, color='#f135f5', label='Earthquakes')\nplt.scatter(years, floods, color='#4ad932', label='Floods')\nplt.scatter(years, hurricane, color='#846287', label='Hurricanes')\nplt.scatter(years, fires, color='#246eb4', label='Fires')\nplt.scatter(years, tsunamis, color='#4c4bbc', label='Tsunamis')\n\nplt.xlabel('Years')\nplt.ylabel('Number of Natural Disasters')\nplt.title('Number of Natural Disasters from 2001 to 2009')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/461.png')\nplt.show()\n```\nChoices:['Earthquakes', 'Floods', 'Hurricanes', 'Fires', 'Tsunamis']\nStudent's Response:Fires\n",
    "Question Text:\nWas the number of tourists in the UK consistently lower than the number of tourists in the USA from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2021))\ntourists_USA = [55.0, 62.3, 67.0, 69.8, 75.0, 77.5, 80.7, 76.9, 79.3, 80.0, 76.4]\ntourists_UK = [28.3, 29.2, 31.0, 32.7, 34.8, 36.6, 37.6, 38.2, 39.3, 39.9, 31.2]\n\nplt.figure(figsize=(12, 6))\n\nplt.plot(years, tourists_USA, marker='o', color='#4d4092', label='Tourists in the USA')\nplt.plot(years, tourists_UK, marker='o', color='#3d2947', label='Tourists in the UK')\n\nplt.title('Number of Tourists (in millions) over the Years')\nplt.xlabel('Years')\nplt.ylabel('Number of tourists (millions)')\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/462.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the subject with consistently rising scores over the years 2001 - 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2001, 2011))\nreading_scores = [525, 530, 540, 545, 550, 570, 580, 590, 610, 615]\nmath_scores = [510, 520, 530, 540, 555, 570, 585, 600, 615, 630]\nscience_scores = [515, 525, 530, 540, 560, 575, 590, 605, 620, 635]\n\nplt.figure(figsize=[10,8])\nplt.plot(years, reading_scores, marker='o', color='#963b37', linewidth=2, label='Reading')\nplt.plot(years, math_scores, marker='o', color='#7c631e', linewidth=2, label='Math')\nplt.plot(years, science_scores, marker='o', color='#39ac39', linewidth=2, label='Science')\n\nplt.title('Average Scores in Reading, Math and Science (2001-2010)', fontsize=16)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Average Score', fontsize=14)\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/463.png')\nplt.show()\n```\nChoices:['Reading', 'Math', 'Science']\nStudent's Response:Math\n",
    "Question Text:\nDid the Business Income cross the Corporate Income in any year from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining the Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nincome_individual = [10000, 12000, 15000, 18000, 20000, 22500, 23500, 24500, 26000, 28000, 30000]\nincome_family = [20000, 24000, 30000, 35000, 40000, 44000, 47000, 50000, 52000, 56000, 60000]\nincome_business = [40000, 45000, 50000, 56000, 60000, 66000, 72000, 76000, 80000, 85000, 90000]\nincome_corporate = [80000, 86000, 92000, 100000, 110000, 120000, 128000, 136000, 145000, 150000, 160000]\n\nplt.figure(figsize=[10,6])\n\n# Plotting the Income data\nplt.plot(years, income_individual, marker='o', color='#4cdce3', label='Individual Income')\nplt.plot(years, income_family, marker='o', color='#f6cca2', label='Family Income')\nplt.plot(years, income_business, marker='o', color='#f190f5', label='Business Income')\nplt.plot(years, income_corporate, marker='o', color='#92a8d1', label='Corporate Income')\n\n# Adding labels and title\nplt.title('Yearly Income from 2010 to 2020')\nplt.xlabel('Year')\nplt.ylabel('Income ($)')\nplt.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/465.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat year had the highest iPhone sales according to the line chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n  \nyears = [2016, 2017, 2018, 2019, 2020]\niphone_sales = [210.9, 217.72, 217.96, 217.58, 217.88]\n  \nplt.figure(figsize=(8, 6))\nplt.plot(years, iphone_sales, color='#8c989d', marker='o', linestyle='solid')\n  \nplt.title('iPhone Sales from 2016 to 2020')\nplt.xlabel('Years')\nplt.ylabel('Sales (in million units)')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/466.png')\nplt.show()\n```\nChoices:[2016, 2017, 2018, 2019, 2020]\nStudent's Response:2018\n",
    "Question Text:\nDid the forestry income increase over the decade?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define values \nForestry_Income = [25000, 28000, 35000, 38000, 40000, 45000, 50000, 52000, 60000, 65000]\nYear = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nScale_of_Operation = [5,7,8,9,10,12,15,17,19,20]\nWorkers_Employed = [12, 14, 17, 20, 22, 24, 26, 28, 30, 33]\n\n# Create a scatter plot\nplt.figure(figsize=(10,6))\nplt.scatter(Year, Forestry_Income, label ='Forestry Income $', color='g', marker = \"o\")\nplt.scatter(Year, Scale_of_Operation, label ='Scale of Operation (in acres)', color='r', marker = \"*\")\nplt.scatter(Year, Workers_Employed, label ='Number of Workers', color='b', marker = \"^\")\n\n# Set title and labels for axes\nplt.xlabel(\"Year\")\nplt.ylabel(\"Forestry Data Series\")\nplt.title(\"Forestry Data Over a Decade\")\n\n# Add legend\nplt.legend(loc=\"best\")\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/467.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWas the food consumption least in the month of January?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nfood_consumption = [10, 15, 12, 18, 20, 22, 30, 28, 20, 15, 13, 10]\n\n# Create line chart\nplt.figure(figsize=(10, 7)) \nplt.plot(months, food_consumption, color='#704abc', marker='o')\nplt.title('Monthly Food Consumption in 2021')\nplt.xlabel('Months')\nplt.ylabel('Food Consumed (in Kg)')\nplt.grid(True)\n\n# Save the chart \nplt.savefig('line_charts/line_charts_visual_linguistic/train/469.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Is the number of toys sold in every month of 2021 higher than the number of toys sold in the corresponding month of 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# create the data series\ntoys_sold_in_2020 = [250, 380, 420, 520, 640, 700, 740, 820, 930, 1040]\ntoys_sold_in_2021 = [290, 420, 460, 560, 660, 730, 780, 840, 950, 1060]\n\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n\n# create the line chart\nplt.figure(figsize=(12, 8))\nplt.plot(months, toys_sold_in_2020, marker='o', label='Toys Sold in 2020')\nplt.plot(months, toys_sold_in_2021, marker='o', label='Toys Sold in 2021')\n\nplt.title('Number of Toys Sold per Month in 2020 and 2021')\nplt.xlabel('Months')\nplt.ylabel('Number of Toys Sold')\nplt.legend(loc='upper left')\n\n# save the line chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/470.png')\n\nplt.show()\n```\nChoices:['No', 'Yes']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the scatter plot demonstrate that Instagram had a higher number of active users than Twitter in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nfacebook = [280, 328, 370, 385, 412]\ntwitter = [310, 352, 367, 400, 450]\ninstagram = [150, 250, 300, 350, 420]\nlinkedin = [350, 400, 500, 560, 640]\nsnapchat = [100, 111, 212, 260, 300]\n\n# Years\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=[12, 8])\n\n# Plot data\nplt.scatter(years, facebook, color='#a88a56', label='Facebook', marker='o')\nplt.scatter(years, twitter, color='#b261a7', label='Twitter', marker='v')\nplt.scatter(years, instagram, color='#31d9ed', label='Instagram', marker='s')\nplt.scatter(years, linkedin, color='#5f1e2a', label='LinkedIn', marker='p')\nplt.scatter(years, snapchat, color='#02f7dd', label='Snapchat', marker='*')\n\nplt.legend(title='Social Media')\nplt.xlabel('Years')\nplt.ylabel('Active Users (in millions)')\nplt.title('Active User Growth of Different Social Media Platforms Over the Years')\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/471.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which year did the School Enrollment Rate surpass the Literacy Rate (Women)?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2005, 2016))\nliteracy_rate_men = [82.1, 83.5, 85.2, 86.4, 87.1, 88.2, 88.8, 89.3, 89.9, 90.1, 90.7]\nliteracy_rate_women = [76.7, 78.1, 79.9, 80.9, 81.7, 82.5, 83.4, 84, 84.3, 84.8, 85.4]\nschool_enrollment_rate = [77, 78.2, 79.4, 81, 82.1, 83.4, 84.7, 85.6, 86.3, 87, 87.7]\n\nplt.figure(figsize=(10, 8))\n\nplt.plot(years, literacy_rate_men, marker='o', color='#f7c5e7', label='Literacy Rate (Men)')\nplt.plot(years, literacy_rate_women, marker='o', color='#00e5ff', label='Literacy Rate (Women)')\nplt.plot(years, school_enrollment_rate, marker='o', color='#b388ff', label='School Enrollment Rate')\n\nplt.xlabel('Years')\nplt.ylabel('Rates (%)')\nplt.title('Education Statistic from 2005 to 2015')\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/472.png')\nplt.show()\n```\nChoices:['2006', '2007', '2008', '2009', '2010']\nStudent's Response:'2008'\n",
    "Question Text:\nIn which location did the number of tourists increase the most from year 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Specify the labels and colors for the data series\ntourism_locations = ['Turkey', 'France', 'Spain', 'China', 'USA']\ncolors = ['#295383', '#e4c1f3', '#4446f4', '#4CC2F4', '#91D936']\n\n# Generate data for the scatter plot\nyear = np.arange(2016, 2021)\ntourist_numbers = [np.arange(30, 35), np.arange(40, 45), \n                   np.arange(35, 40), np.arange(45, 50),\n                   np.arange(25, 30)]\n\n# Create a scatter plot\nplt.figure(figsize=(10,8))\nfor i in range(5):\n    plt.scatter(year, tourist_numbers[i], color = colors[i], label = tourism_locations[i])\n\n# Provide the elements for the plot\nplt.title('Number of Tourists (in millions) in Different Locations from 2016 to 2020')\nplt.xlabel('Year')\nplt.ylabel('Number of Tourists')\nplt.legend(loc='upper left')\nplt.grid()\n\n# Save the plot to a file (Add the right path on your local system)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/473.png')\nplt.show()\n```\nChoices:['Turkey', 'France', 'Spain', 'China', 'USA']\nStudent's Response:China\n",
    "Question Text:\nIs the number of birds in the forest always higher than in the city for all the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nbirds_in_city = [10, 17, 20, 24, 29]\nbirds_in_forest = [50, 56, 59, 63, 69]\nbirds_in_park = [25, 29, 31, 35, 40]\nbirds_in_seaside = [35, 37, 40, 42, 46]\n\n# Create a figure and axis\nfigure, ax = plt.subplots(figsize=(12, 6))\n\n# X axis values\nyears = [1, 2, 3, 4, 5]\n\n# Plots\nax.plot(years, birds_in_city, marker='o', label=\"City\")\nax.plot(years, birds_in_forest, marker='o', label=\"Forest\")\nax.plot(years, birds_in_park, marker='o', label=\"Park\")\nax.plot(years, birds_in_seaside, marker='o', label=\"Seaside\")\n\n# Setting labels, title and grid\nax.set_xlabel('Years')\nax.set_ylabel('Number of Birds')\nax.set_title('Birds population over years in different areas')\nax.legend()\nax.grid(True)\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/476.png')\n\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nThe multiple-choice question related to the chart is: What food had the highest popularity percentage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nfoods = ['Burger', 'Pizza', 'Biryani', 'Sushi', 'Tacos']\npopularity = [87, 90, 92, 88, 85]\n\n# Create scatter plot\nfig, ax = plt.subplots(figsize=(8, 5))\nax.scatter(foods, popularity, marker='o')\n\n# Set chart title and labels\nax.set_title('Food Popularity', fontsize=15)\nax.set_xlabel('Food', fontsize=12)\nax.set_ylabel('Popularity (%)', fontsize=12)\n\n# Save figure\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/478.png')\nplt.show()\n```\nChoices:['Burger', 'Pizza', 'Biryani', 'Sushi', 'Tacos']\nStudent's Response:Biryani\n",
    "Question Text:\nWhich country had the highest number of tourists visit in 2020 according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncountries = ['France', 'Spain', 'USA', 'China', 'Italy', 'Mexico', 'UK', 'Turkey', 'Germany', 'Thailand']\nvisitors = [89, 83, 79, 65, 63, 41, 36, 35, 35, 33]\n\nplt.figure(figsize=[10,5])\nplt.title('Number of Tourists in Different Countries in 2020 (in millions)')\nplt.plot(countries, visitors, marker='o', color='#4fe06a')\nplt.ylabel('Number of Tourists (in millions)')\nplt.xlabel('Countries')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/479.png')\nplt.show()\n```\nChoices:['France', 'Spain', 'USA', 'China', 'Italy']\nStudent's Response:France\n",
    "Question Text:\nBy approximately how much did the number of smartphone users in China increase between 2016 and 2020, according to the graph?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nsmartphone_users_2016 = [1280, 2659, 2293, 1018, 421]\nsmartphone_users_2020 = [1587, 2854, 2551, 1238, 467]\n\ncountries = ['USA', 'China', 'India', 'Russia', 'Brazil']\n\nplt.figure(figsize=(10,5))\n\nplt.plot(countries, smartphone_users_2016, marker='o', label='Smartphone Users 2016')\nplt.plot(countries, smartphone_users_2020, marker='o', label='Smartphone Users 2020')\n\nplt.xlabel('Countries')\nplt.ylabel('Number of Smartphone Users (in millions)')\nplt.title('Smartphone Users by Country in 2016 and 2020')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/480.png')\n\nplt.show()\n```\nChoices:['195 million', '21 million', '258 million', '55 million']\nStudent's Response:195\n",
    "Question Text:\nWhich movie had the highest box office revenue?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmovies = ['Avengers Endgame', 'The Lion King', 'Frozen 2', 'Spider-Man Far from Home', 'Captain Marvel']\nbox_office = [2797, 1656, 1450, 1132, 1128] # in millions USD\n\n# Create a scatter plot\nplt.figure(figsize=(10, 5))\nplt.scatter(movies, box_office, marker='o')\n\n# Add labels \nplt.xlabel('Movies')\nplt.ylabel('Box office(Millions USD)')\nplt.title('Box office revenue of different movies')\nplt.grid()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/482.png')\nplt.show()\n```\nChoices:['Avengers Endgame', 'The Lion King', 'Frozen 2', 'Spider-Man Far from Home', 'Captain Marvel']\nStudent's Response:'Avengers Endgame'\n",
    "Question Text:\nDo the presented hobbies (Reading, Gaming, Sports, and Travelling) increase in hours spent over time from 1990 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\nreading_data = [8, 13, 7, 15, 18, 21, 23, 26, 23, 24]\ngaming_data = [12, 17, 12, 18, 21, 22, 25, 29, 32, 35]\nsports_data = [10, 15, 11, 16, 22, 24, 26, 31, 34, 36]\ntravelling_data = [14, 17, 12, 20, 23, 26, 28, 32, 35, 38]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Plot data\nax.plot(reading_data, color='#e61a44', marker=\"o\", label='Reading')\nax.plot(gaming_data, color='#688740', marker=\"o\", label='Gaming')\nax.plot(sports_data, color='#cd5c5c', marker=\"o\", label='Sports')\nax.plot(travelling_data, color='#1e90ff', marker=\"o\", label='Travelling')\n\n# Adding labels, legend, and title\nplt.xlabel('Year (1990-2020)')\nplt.ylabel('Hours/Week')\nplt.title('Hobbies Comparison Over Years')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/483.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn what year did the price of Abstract paintings first exceed $6000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2011, 2021))\nabstract_prices = [5000, 5200, 5500, 5300, 5600, 6000, 6400, 6600, 7000, 7200]\nminimalist_prices = [4000, 4200, 4500, 4300, 4600, 5000, 5400, 5600, 6000, 6200]\n\n# Plot\nplt.figure(figsize=(10, 5))\nplt.scatter(years, abstract_prices, color='#106338', marker='o', label='Abstract')\nplt.scatter(years, minimalist_prices, color='#800000', marker='s', label='Minimalist')\n\n# Labels & Legends\nplt.title('Comparison of Painting Prices between Abstract and Minimalist Genres (2011-2020)')\nplt.xlabel('Year')\nplt.ylabel('Price ($)')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/488.png')\n\nplt.show()\n```\nChoices:['2014', '2015', '2016', '2017']\nStudent's Response:2016\n",
    "Question Text:\nIs the number of bikes higher than cars in each year represented on the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncars = [10, 20, 30, 40, 50, 60]\nbikes = [15, 25, 35, 45, 55, 65]\nyears = ['2005', '2010', '2015', '2020', '2025', '2030']\n\n# Create a new figure with a specific size\nplt.figure(figsize=(10, 6))\n\n# Plot data\nplt.scatter(years, cars, label='Cars')\nplt.scatter(years, bikes, label='Bikes', marker='^')\n\n# Set the title and labels\nplt.title('Number of Cars vs Bikes over the Years')\nplt.xlabel('Years')\nplt.ylabel('Number of Vehicles (in thousands)')\n\n# Showing the legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/489.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat mode of transportation shows a steady increase and reached about 64 billion km of travel in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data for 5 series representing different modes of travel\nyears = [year for year in range(2000, 2021)]\ncars = [20, 22, 24, 25, 28, 30, 33, 36, 38, 40, 43, 45, 47, 50, 52, 54, 56, 58, 60, 62, 64]\nbicycles = [15, 17, 16, 20, 22, 23, 25, 28, 30, 32, 33, 35, 36, 38, 40, 42, 43, 45, 47, 49, 50]\ntrains = [10, 12, 14, 16, 18, 20, 22, 23, 24, 26, 28, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46]\nplanes = [5, 6, 7, 8, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 40]\nships = [3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 18, 20, 22, 24, 26, 27, 29, 30, 32, 34, 35]\n\n# Define the figure size to avoid overlap of labels\nplt.figure(figsize=(10,7))\n\n# Define the scatter plots\nplt.scatter(years, cars, marker='o', label='Cars')\nplt.scatter(years, bicycles, marker='o', label='Bicycles')\nplt.scatter(years, trains, marker='o', label='Trains')\nplt.scatter(years, planes, marker='o', label='Planes')\nplt.scatter(years, ships, marker='o', label='Ships')\n\n# Define the labels, title and legend.\nplt.xlabel('Year')\nplt.ylabel('Amount of Travel (in billions of km)')\nplt.title('Amount of Travel per Year by Mode of Transport')\nplt.legend()\n\n# Save the figure \nplt.savefig('line_charts/line_charts_visual_linguistic/train/490.png')\n\n# Display the plot\nplt.show()\n```\nChoices:['Cars', 'Bicycles', 'Trains', 'Planes', 'Ships']\nStudent's Response:'Cars'\n",
    "Question Text:\nDid sales of Legos increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ntoys = ['Teddy Bear', 'Doll', 'Lego', 'Puzzle', 'Car']\nsale_2019 = [100, 150, 200, 80, 130]\nsale_2020 = [120, 180, 230, 80, 150]\n\nplt.figure(figsize=(10,7))\n\nplt.plot(toys, sale_2019, marker='o', color='#b75bc6', label='2019 sales')\nplt.plot(toys, sale_2020, marker='o', color='r', label='2020 sales')\n\nplt.title('Toy Sales in 2019 and 2020')\nplt.xlabel('Toy')\nplt.ylabel('Number of toys sold')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/491.png')  \nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nWhich company had the highest sales in the month of January?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Arbitrary data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\ncompany_a_sales = [1000, 1200, 800, 1300, 1700, 1400, 1600, 1800, 1500, 1650, 1750, 2000]\ncompany_b_sales = [1100, 1300, 850, 1400, 1750, 1450, 1600, 1850, 1550, 1650, 1800, 2100]\ncompany_c_sales = [1050, 1250, 830, 1350, 1650, 1420, 1650, 1850, 1580, 1620, 1750, 2050]\ncompany_d_sales = [1150, 1350, 880, 1450, 1700, 1500, 1700, 1900, 1600, 1700, 1850, 2150]\ncompany_e_sales = [1200, 1400, 900, 1500, 1800, 1550, 1750, 1950, 1650, 1750, 1900, 2200]\n\n# Create figure and plot\nplt.figure(figsize=(10,6))\nplt.plot(months, company_a_sales, marker='o', color='#d412cf', label='Company A')\nplt.plot(months, company_b_sales, marker='o', color='b', label='Company B')\nplt.plot(months, company_c_sales, marker='o', color='g', label='Company C')\nplt.plot(months, company_d_sales, marker='o', color='r', label='Company D')\nplt.plot(months, company_e_sales, marker='o', color='c', label='Company E')\n\n# Plot details\nplt.title('Monthly Sales in Retail For Different Companies in 2022')\nplt.xlabel('Months')\nplt.ylabel('Sales in USD')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/492.png')\n\nplt.show()\n```\nChoices:['Company A', 'Company B', 'Company C', 'Company D', 'Company E']\nStudent's Response:'Company E'\n",
    "Question Text:\nIn which year did the \"Tree Planting\" percentage exceed the \"Deforestation Rate\" for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000, 2023))\ndeforestation_rate = [16, 14.8, 15, 14.5, 14.4, 14, 13.7, 13.5, 13.2, 12.8, 12.5, 12, 11.8, 11.6, 11.4, 11, 10.8, 10.4, 10, 9.8, 9.6, 9.4, 9.4]\nconservation_efforts = [25, 27, 28.5, 30, 31.5, 34, 36.3, 39, 41, 45, 47, 50, 52, 55, 57, 60, 61, 63, 65, 67, 68, 70, 70]\ntree_planting = [10, 11, 11.5, 12, 12.5, 13, 13.5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n\nplt.figure(figsize=(12,6))\nplt.plot(years, deforestation_rate, marker='o', color='red', label='Deforestation Rate')\nplt.plot(years, conservation_efforts, marker='o', color='green', label='Conservation Efforts')\nplt.plot(years, tree_planting, marker='o', color='blue', label='Tree Planting')\n\nplt.xlabel('Years')\nplt.ylabel('Percentage (%)')\nplt.title('Forestry Statistics Over the Years (2000-2022)')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/493.png')\nplt.show()\n```\nChoices:['2004', '2006', '2008', '2010', '2012']\nStudent's Response:'2008'\n",
    "Question Text:\nIs the weight of an outdoor cat always less than the weight of an indoor cat for the same age?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#creating data\ncat_age = [2, 5, 7, 10, 15]\nindoor_cat_weight = [4, 7, 9, 11, 12]\noutdoor_cat_weight = [3, 6, 8, 9, 10]\nindoor_cat_length = [18, 21, 24, 26, 27]\noutdoor_cat_length = [16, 20, 22, 23, 25]\ncat_lifespans = [14, 15, 13, 12, 11]\n\nplt.figure(figsize=(10, 8))\n\nplt.scatter(cat_age, indoor_cat_weight, color = '#41d2dd', marker='o', label=\"Weight of Indoor Cats\")\nplt.scatter(cat_age, outdoor_cat_weight, color = 'red', marker='x', label=\"Weight of Outdoor Cats\")\nplt.scatter(cat_age, indoor_cat_length, color = 'green', marker='^', label=\"Length of Indoor Cats\")\nplt.scatter(cat_age, outdoor_cat_length, color = 'blue', marker='s', label=\"Length of Outdoor Cats\")\nplt.scatter(cat_age, cat_lifespans, color = 'yellow', marker='d', label=\"Cat Lifespans\")\n\nplt.title('Statistics of Cats')\nplt.xlabel('Cat Age')\nplt.ylabel('Measurements')\nplt.legend(loc='upper left')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/494.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nThe question related to the scatter plot would be:\n\n\"Which city district has the highest number of damaged houses?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ndistricts = ['District A', 'District B', 'District C', 'District D', 'District E']\nprices = [450000, 550000, 470000, 600000, 520000]\nnew_houses = [75, 55, 70, 60, 80]\nold_houses = [70, 80, 90, 70, 90]\nhouse_renovation = [70, 80, 70, 60, 80]\nhouse_damage = [75, 85, 80, 70, 86]\n\nplt.figure(figsize=(14, 10))\nplt.scatter(districts, prices, marker='o', color='#42946c', label='House Prices')\nplt.scatter(districts, new_houses, marker='s', color='b', label='No. of New Houses')\nplt.scatter(districts, old_houses, marker='x', color='#c63372', label='No. of Old Houses')\nplt.scatter(districts, house_renovation, marker='d', color='g', label='No. of Renovated Houses')\nplt.scatter(districts, house_damage, marker='*', color='y', label='No. of Damaged Houses')\n\nplt.title('Housing in City Districts')\nplt.xlabel('City Districts')\nplt.ylabel('Housing measurements')\nplt.legend()\nplt.grid()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/496.png')\n```\nChoices:['District A', 'District B', 'District C', 'District D', 'District E']\nStudent's Response:'District E'\n",
    "Question Text:\nDid the sales of the game \"Fifa 21\" increase from 2019 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Gaming data\ngames = ['Fifa 21', 'NBA 2K21', 'RDR 2', 'COD Modern Warfare', 'Fall Guys', 'Among Us']\nsales_2019 = [2, 2.5, 20, 22, 0, 0] # in millions\nsales_2020 = [8, 7, 22, 32, 2, 10] # in millions\n\nplt.figure(figsize=(10, 6))\n\n# Scattered plot 1\nplt.scatter(games, sales_2019, color='r', marker='o', label='2019 sales')\n\n# Scattered plot 2\nplt.scatter(games, sales_2020, color='b', marker='x', label='2020 sales')\n\nplt.title('Gaming Sales Comparision (in Million)')\nplt.xlabel('Games')\nplt.ylabel('Sales')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/497.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year did the number of modern architecture buildings exceed the number of design architecture buildings for the first time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Values\nyears = range(2000, 2011)\ndesign_buildings = [5, 7, 9, 7, 10, 12, 16, 25, 22, 20, 30]\nmodern_buildings = [10, 15, 20, 22, 25, 30, 35, 50, 45, 35, 40]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Plot data\nax.plot(years, design_buildings, marker='o', label='Design Architecture')\nax.plot(years, modern_buildings, marker='o', label='Modern Architecture')\n\n# Create labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Number of Buildings')\nax.set_title('Comparative Study of Architectural Styles over the Years')\nax.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/498.png')\n\nplt.show()\n```\nChoices:[2001, 2002, 2003, 2004]\nStudent's Response:2002\n",
    "Question Text:\nWhich charity organization has received the maximum donation in million dollars?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data to be plotted\ncharities = ['Save the Children', 'Red Cross', 'Unicef', 'World Vision', 'Doctors Without Borders']\ndonations = [25, 50, 60, 45, 60]  # in million dollars\n\n# Creating the scatter plot\nfig, ax = plt.subplots(figsize=(10, 6))\nplt.scatter(charities, donations, marker='o')\n\n# Setting plot labels\nplt.xlabel('Charities')\nplt.ylabel('Donations (in Million Dollars)')\nplt.title('Charity Donations Distribution')\nplt.grid(True)\n\n# Saving the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/499.png')\nplt.show()\n```\nChoices:['Save the Children', 'Red Cross', 'Unicef', 'World Vision', 'Doctors Without Borders']\nStudent's Response:'Unicef', 'Doctors Without Borders'\n",
    "Question Text:\nWhat was the increase in the employment rate for women from 1990 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n\nyears = list(range(1990, 2021))\nemployment_rate_men = [30, 31, 32, 35, 38, 40, 42, 45, 47, 50, 52, 55, 57, 60, 62, 65, 67, 68, 70, 73, 75, 77, 78, 80, 82, 85, 87, 90, 92, 95, 97]\nemployment_rate_women = [20, 21, 23, 26, 29, 30, 33, 35, 38, 40, 43, 45, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 85]\n\nplt.figure(figsize=(10,8))\nplt.plot(years, employment_rate_men, marker='o', label='Men')\nplt.plot(years, employment_rate_women, marker='o', label='Women')\nplt.xlabel('Year')\nplt.ylabel('Employment Rate (%)')\nplt.title('Employment rate by sex from 1990 to 2020')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/500.png')\nplt.show()\n```\nChoices:['10%', '25%', '30%', '65%']\nStudent's Response:325.0\n",
    "Question Text:\nBased on the line chart, in which month did Retailer 2 surpass Retailer 1 in sales for the first time in 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nretailer1_sales = [120, 200, 180, 210, 250, 220, 280, 300, 350, 400, 450, 500]\nretailer2_sales = [150, 220, 205, 235, 265, 290, 330, 370, 410, 460, 520, 570]\n\n# Create figure and axes\nplt.figure(figsize=[10,6])\n\n# Plot the data\nplt.plot(months, retailer1_sales, marker='o', label='Retailer 1')\nplt.plot(months, retailer2_sales, marker='o', label='Retailer 2')\n\n# Labels and Title\nplt.title('Monthly Sales of Two Retailers in 2021')\nplt.xlabel('Months')\nplt.ylabel('Sales (in thousands)')\n\n# Legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/501.png')\n\nplt.show()\n```\nChoices:['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nStudent's Response:February\n",
    "Question Text:\nOver the 5 year period, was the increase in the population of dogs greater than that of cats?\n\nThe process behind this question is to analyze the given data. Checking the starting and ending points for both dogs and cats, we find that dogs went from 25 to 34 and cats went from 18 to 32.\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nanimals_x = range(1, 6)  # 1 to 5\npigeons_y = [10, 17, 16, 18, 20]\nducks_y = [12, 15, 19, 22, 26]\ndogs_y = [25, 27, 29, 31, 34]\ncats_y = [18, 23, 24, 30, 32]\nrabbits_y = [5, 9, 12, 16, 18]\n\n# Size of the figure\nplt.figure(figsize=(10,5))\n\n# Scatter Plots\nplt.scatter(animals_x, pigeons_y, color ='#b58ce9', marker='o', label='Pigeons')\nplt.scatter(animals_x, ducks_y, color ='#af9196', marker='s', label='Ducks')\nplt.scatter(animals_x, dogs_y, color ='#758364', marker='v', label='Dogs')\nplt.scatter(animals_x, cats_y, color ='#7e32fe', marker='*', label='Cats')\nplt.scatter(animals_x, rabbits_y, color ='#FFD700', marker='+', label='Rabbits')\n\n# Labels\nplt.xlabel('Year',fontsize=14)\nplt.ylabel('Population',fontsize=14)\nplt.title('Population of Animals over the Years',fontsize=20)\n\n# Legend\nplt.legend(loc='upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/502.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the scatter plot, which environmental issue had a decreasing trend in the years from 2000 to 2011?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2000,2011))\nCO2_emission = [32,34,36,38,40,42,44,48,50,52,54]\ndeforestation = [14,15,16,14,15,17,16,16,17,17,17]\noil_spill = [50,52,54,58,60,64,65,66,70,72,75]\nplastic_waste = [42,46,48,52,55,58,60,64,68,70,73]\n\nplt.figure(figsize=(10, 7))\n\nplt.scatter(years, CO2_emission, c=\"#19bea0\", label=\"CO2 Emission\", marker=\"o\")\nplt.scatter(years, deforestation, c=\"#80e94e\", label=\"Deforestation\", marker=\"v\")\nplt.scatter(years, oil_spill, c=\"#e55e5e\", label=\"Oil Spill\", marker=\"+\")\nplt.scatter(years, plastic_waste, c=\"#247ba0\", label=\"Plastic Waste\", marker=\"x\")\n\nplt.title(\"Environmental Issues Over Years\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Environmental Impact Score\")\nplt.legend(loc=\"upper right\")\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/503.png')\n\nplt.show()\n```\nChoices:['CO2 Emission', 'Deforestation', 'Oil Spill', 'Plastic Waste']\nStudent's Response:'Deforestation' \n",
    "Question Text:\nDid Art Festival attendance exceed Street Festival attendance in the 5th year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [1, 2, 3, 4, 5]\nmusic_festival_attendance = [1000, 1200, 1400, 2000, 2200]\nart_festival_attendance = [800, 900, 1100, 1300, 1500]\nfilm_festival_attendance = [2000, 2300, 2600, 3000, 3300]\nfood_festival_attendance = [3000, 3200, 3500, 3700, 4000]\nstreet_festival_attendance = [1500, 1600, 1700, 1800, 2000]\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 8)) # Figure size to avoid word overlap\nax.plot(years, music_festival_attendance, color='#6c9ca8', marker='o', label='Music Festival')\nax.plot(years, art_festival_attendance, color='r', marker='s', label='Art Festival')\nax.plot(years, film_festival_attendance, color='g', marker='^', label='Film Festival')\nax.plot(years, food_festival_attendance, color='b', marker='x', label='Food Festival')\nax.plot(years, street_festival_attendance, color='c', marker='d', label='Street Festival')\n\nax.set_xlabel('Years')\nax.set_ylabel('Attendance')\nax.set_title('Festival Attendance Over Years')\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/504.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid Charity B receive more donations in 2020 than in 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2000, 2005, 2010, 2015, 2020]\ncharity_A = [5, 7, 9, 12, 15]\ncharity_B = [4, 6.5, 8, 11, 14]\ncharity_C = [6, 8, 11, 14, 16]\ncharity_D = [7, 9, 13, 17, 20]\n\n# Plot\nplt.figure(figsize=[10,8])\nplt.plot(years, charity_A, marker='o', color='#cb4d0a', label=\"Charity A\")\nplt.plot(years, charity_B, marker='x', color='blue', label=\"Charity B\")\nplt.plot(years, charity_C, marker='s', color='#c03919', label=\"Charity C\")\nplt.plot(years, charity_D, marker='d', color='green', label=\"Charity D\")\n\nplt.xlabel(\"Year\")\nplt.ylabel(\"Amount Donated (in million dollars)\")\nplt.title(\"Comparison of Charitable Donations Over the Years\")\nplt.legend()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/505.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the mode of transport that has traveled the most hours over 10 days the train?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nx = list(range(1, 11))\nseries1 = [24, 32, 35, 43, 57, 76, 85, 93, 105, 116]\nseries2 = [29, 42, 49, 59, 78, 95, 110, 125, 140, 160]\nseries3 = [31, 50, 61, 72, 79, 88, 98, 112, 125, 130]\nseries4 = [22, 37, 43, 53, 70, 83, 97, 109, 121, 137]\nseries5 = [26, 39, 47, 55, 63, 75, 88, 99, 112, 126]\n\n# Plot\nplt.figure(figsize=(10,8))\nplt.scatter(x, series1, color='#a7ef3e', marker='o', label='Bus')\nplt.scatter(x, series2, color='#91c770', marker='o', label='Train')\nplt.scatter(x, series3, color='#48a9a6', marker='o', label='Plane')\nplt.scatter(x, series4, color='#c1666b', marker='o', label='Boat')\nplt.scatter(x, series5, color='#d9bf77', marker='o', label='Car')\n\nplt.title('Travel Time Comparison')\nplt.xlabel('Days')\nplt.ylabel('Hours Travelled')\nplt.legend(loc='upper left')\nplt.savefig('line_charts/line_charts_visual_linguistic/train/506.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich transport covers the minimum distance in 3 hours?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series of data\ncar = [50, 42, 39, 34, 32, 28, 26, 25, 24, 22]\nbus = [72, 67, 62, 57, 50, 45, 42, 37, 33, 30]\ntrain = [80, 78, 75, 72, 68, 65, 60, 55, 51, 48]\nbike = [35, 33, 30, 28, 26, 23, 20, 18, 16, 15]\n\ntime = list(range(1, 11)) # Time periods\n\nplt.figure(figsize=(12, 8))\n\n# Create scatter plots\nplt.scatter(time, car, label='Cars', marker='o')\nplt.scatter(time, bus, label='Buses', marker='s')\nplt.scatter(time, train, label='Trains', marker='D')\nplt.scatter(time, bike, label='Bikes', marker='^')\n\n# Labels and legends\nplt.title('Transportation over time')\nplt.xlabel('Time (in hrs)')\nplt.ylabel('Distance covered (in miles)')\nplt.legend(loc='upper right')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/507.png')\nplt.show()\n```\nChoices:['Cars', 'Buses', 'Trains', 'Bikes']\nStudent's Response:'Bikes'\n",
    "Question Text:\nBased on the line chart, in which sector has the water usage decreased the most from 2000 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data sets\nyears = [2000, 2005, 2010, 2015, 2020]\nusage_in_industry = [30, 28, 31, 35, 33]\nusage_in_agriculture = [40, 38, 41, 45, 43]\nusage_in_household = [30, 34, 28, 20, 24]\n\n# Create the plot\nplt.figure(figsize=(10, 5))\nplt.plot(years, usage_in_industry, 'o-', label='Used in Industry')\nplt.plot(years, usage_in_agriculture, 's-', label='Used in Agriculture')\nplt.plot(years, usage_in_household, '^-', label='Used in Household')\n\n# Create labels\nplt.title(\"Percentage of Water Usage over The Years\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Percentage of Water Used (%)\")\n\n# Create a legend\nplt.legend(loc=\"best\")\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/508.png')\n\nplt.show()\n```\nChoices:['Industry', 'Agriculture', 'Household']\nStudent's Response:Household.\n",
    "Question Text:\nIs the sales count for computers in the first quarter more than the rentals?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define data\nx = [1, 2, 3, 4, 5]\ny1 = [1, 4, 2, 3, 5]\ny2 = [5, 3, 2, 4, 1]\n\n# Create plot\nplt.figure(figsize=[10,7])\nplt.scatter(x, y1, color='#16ce45', label='Computer Sales')\nplt.scatter(x, y2, color='#3a857f', label='Computer Rentals')\n\n# Set up labels and titles\nplt.xlabel('Quarter')\nplt.ylabel('Count in 1000s')\nplt.title('Computer Sales vs Rentals by Quarter')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/509.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nFrom 2000 to 2010, in which year was the decline in deaths due to heart disease highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\nheart_disease_deaths = [234.9, 232.7, 227.8, 223.0, 217.3, 210.3, 205.6, 201.7, 196.5, 192.3, 186.2]\n\n# Create a new figure\nplt.figure(figsize=(10,5))\n\n# Create scatter plot\nplt.scatter(years, heart_disease_deaths, color='red', marker='o')\n\n# Adding title and labels\nplt.title('Heart Disease Deaths per 100,000 population from 2000 to 2010')\nplt.xlabel('Years')\nplt.ylabel('Deaths per 100,000 population due to Heart Disease')\nplt.grid(True)\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/510.png')\nplt.show()\n```\nChoices:['2001-2002', '2004-2005', '2005-2006', '2006-2007', '2009-2010']\nStudent's Response:'2004-2005'\n",
    "Question Text:\n:\nApproximately, how much is the population of lion expected to decrease from 2020 to 2030, according to the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Defining data\nanimals = ['Elephant', 'Lion', 'Giraffe', 'Kangaroo']\npopulation_2015 = [50000, 35000, 85000, 5000]\npopulation_2020 = [48000, 33000, 80000, 5000]\npopulation_2025 = [45000, 30000, 75000, 5500]\npopulation_2030 = [40000, 25000, 70000, 6000]\n\nfig, ax = plt.subplots(figsize=(8,6))  # set size to avoid overlap\n\n# Plotting each series of data\nax.scatter(animals, population_2015, color='#c35fd6', marker='o', label = '2015')\nax.scatter(animals, population_2020, color='#7673be', marker='s', label = '2020')\nax.scatter(animals, population_2025, color='#6a40a9', marker='v', label = '2025')\nax.scatter(animals, population_2030, color='#0ec39d', marker='x', label = '2030')\n\n# Rest of the plot customization\nplt.title(\"Population of Different Animals Over the Years\")\nplt.xlabel(\"Animals\")\nplt.ylabel(\"Population\")\nplt.legend()\n\n# Save your figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/512.png')\n\nplt.show()\n```\nChoices:['10000', '5000', '8000', '6000']\nStudent's Response:8000\n",
    "Question Text:\nWhat was the highest house price in 2019 according to the plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\nhouse_prices = [230, 235, 232, 245, 260, 275, 280, 288, 290, 298, 310, 320]\nrental_prices = [1200, 1250, 1255, 1270, 1290, 1300, 1350, 1380, 1390, 1400, 1420, 1450]\nmortgage_rate = [2.8, 2.85, 2.83, 2.82, 2.82, 2.80, 2.77, 2.75, 2.73, 2.70, 2.68, 2.65]\n\n# Create figure and plot space\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Add lines\nax.plot(months, house_prices, color='#813c32', marker='o', label='House Prices (in $1000)')\nax.plot(months, rental_prices, color='#2d34f0', marker='o', label='Rental Prices (in $)')\nax.plot(months, mortgage_rate, color='#4b5dcc', marker='o', label='Mortgage Interest Rate (%)')\n\n# Set title and labels for axes\nax.set(xlabel=\"Months\",\n       ylabel=\"Value\",\n       title=\"Real Estate Trends Over 2019\")\n    \n# Add legend\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/513.png')\nplt.show()\n```\nChoices:['$230,000', '$245,000', '$260,000', '$320,000']\nStudent's Response:'$320,000'\n",
    "Question Text:\nWhat is the cost of building material for traditional architecture in the 3rd year?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\ntraditional_architecture_cost = [5, 8, 12, 15, 18, 25, 30]\nmodern_architecture_cost = [3, 6, 9, 15, 20, 28, 35]\nyears = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the figure size \nplt.figure(figsize=(10,8))\n\n# Plot traditional architecture cost over the years\nplt.scatter(years, traditional_architecture_cost, color='#f7c311', marker='o', label=\"Traditional Architecture\")\n# Plot modern architecture cost over year\nplt.scatter(years, modern_architecture_cost, color='#c2d9c0', marker='v', label=\"Modern Architecture\")\n\n# Set the labels and title\nplt.ylabel('Cost of Building Material (in $1000\\'s)')\nplt.xlabel('Number of Years')\nplt.title('Cost of Building Material for Traditional vs Modern Architecture over Years')\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/515.png')\n\nplt.show()\n```\nChoices:[3, 12, 9, 15]\nStudent's Response:12.\n",
    "Question Text:\nGiven the line chart, which mode of travel saw the most significant increase in traveler count from 2015 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# We define the years from 2015 to 2020\nyears = list(range(2015, 2021))\n\n# We have four series, each for a different mode of travel\ntravel_by_car = [500, 600, 700, 650, 750, 850]\ntravel_by_train = [100, 200, 300, 400, 500, 600]\ntravel_by_air = [250, 350, 450, 550, 650, 750]\ntravel_by_cruise = [100, 200, 150, 250, 350, 450]\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, travel_by_car, marker='o', label='Travel by car')\nplt.plot(years, travel_by_train, marker='o', label='Travel by train')\nplt.plot(years, travel_by_air, marker='o', label='Travel by air')\nplt.plot(years, travel_by_cruise, marker='o', label='Travel by cruise')\n\nplt.xlabel('Year')\nplt.ylabel('Number of Travels (in thousands)')\nplt.title('Travel by Different Modes Over the Years')\nplt.legend(loc='best')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/517.png')\nplt.show()\n```\nChoices:['Travel by car', 'Travel by train', 'Travel by air', 'Travel by cruise']\nStudent's Response:'Travel by train', 'Travel by air'\n",
    "Question Text:\nBased on the scatter plot, which subject shows an improving trend over the years?\nFigure Code:\n```\nimport os\nos.makedirs(\"line_charts/line_charts_visual_linguistic/train/\", exist_ok=True)\n\n\nimport matplotlib.pyplot as plt\n\n# Sample data\nyears = list(range(2000, 2022))\nmath_scores = [67, 70, 72, 75, 73, 76, 75, 77, 79, 82, 80, 81, 83, 84, 85, 88, 90, 89, 92, 95, 94, 96]\nscience_scores = [70, 72, 75, 77, 79, 80, 82, 85, 87, 88, 89, 92, 93, 95, 97, 98, 99, 100, 100, 100, 100, 100]\nreading_scores = [65, 67, 70, 72, 75, 76, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97]\nwriting_scores = [60, 62, 65, 67, 70, 72, 75, 76, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95]\n\n# Create scatter plot\nplt.figure(figsize=(10, 6))\n\nplt.scatter(years, math_scores, c='#fe6d3f', marker='o', label='Math Scores')\nplt.scatter(years, science_scores, c='#9d586b', marker='o', label='Science Scores')\nplt.scatter(years, reading_scores, c='#ac8414', marker='o', label='Reading Scores')\nplt.scatter(years, writing_scores, c='#317f43', marker='o', label='Writing Scores')\n\nplt.title('Education Scores Over Time')\nplt.xlabel('Years')\nplt.ylabel('Scores')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/518.png')\nplt.show()\n```\nChoices:['Math', 'Science', 'Reading', 'Writing']\nStudent's Response:'Science'\n",
    "Question Text:\nWhat is the donation amount for the Environment charity when the number of donors is 3 million?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\neducation = [10, 15, 20, 25, 30]\nhealthcare = [8, 12, 16, 20, 24]\nenvironment = [12, 18, 24, 30, 36]\ndonors = [1, 2, 3, 4, 5]\n\nplt.figure(figsize = (10,5))\nplt.scatter(donors, education, marker='o', label='Education')\nplt.scatter(donors, healthcare, marker='o', label='Healthcare')\nplt.scatter(donors, environment, marker='o', label='Environment')\n\nplt.title(\"Donations to Charities\")\nplt.xlabel(\"Numer of Donors (x1,000,000)\")\nplt.ylabel(\"Amount Donated (x1,000,000)\")\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/519.png')\nplt.show()\n```\nChoices:['12 million', '18 million', '24 million', '30 million', '36 million']\nStudent's Response:\"24 million\"\n",
    "Question Text:\nIn which city was the average temperature in January the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nboston_temps = [1, 1, 5, 9, 15, 20, 24, 23, 18, 13, 8, 3]\nmiami_temps = [20, 21, 22, 24, 26, 28, 29, 30, 28, 26, 24, 22]\nsf_temps = [12, 14, 15, 16, 17, 18, 18, 19, 20, 19, 16, 14]\nseattle_temps = [6, 7, 9, 12, 16, 19, 22, 22, 19, 14, 9, 7]\n\nplt.figure(figsize=(12,6))\nplt.scatter(months, boston_temps, color='#e9c7f8', marker='o', label='Boston')\nplt.scatter(months, miami_temps, color='#a0f8c7', marker='o', label='Miami')\nplt.scatter(months, sf_temps, color='#f8c7a0', marker='o', label='San Francisco')\nplt.scatter(months, seattle_temps, color='#a0f8f8', marker='o', label='Seattle')\n\nplt.xlabel('Months')\nplt.ylabel('Average Temperature (\u00b0C)')\nplt.title('Average Monthly Temperatures of Different U.S. Cities')\nplt.legend(loc='best')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/520.png')\nplt.show()\n```\nChoices:['Boston', 'Miami', 'San Francisco', 'Seattle']\nStudent's Response:Miami\n",
    "Question Text:\nDoes 'Twilight' have less than 500 pages?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create some data\nbooks = ['Harry Potter', 'Twilight', 'The Lord of the Rings', 'The Chronicles of Narnia', 'To Kill a Mockingbird']\npages = [309,498,1077,1956,281]\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(15, 7))\n\n# Create a scatter plot\nax.scatter(books, pages, marker='o')\n\n# Set the labels and title\nplt.xlabel('Books')\nplt.ylabel('Number of Pages')\nplt.title('Number of Pages in Different Books')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/521.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes\n",
    "Question Text:\nIn what year was the sales count of Puzzles closest to the sales count of Action Figures?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# You may have to create directories to match this path\nfilename = 'line_charts/line_charts_visual_linguistic/train/522.png'\n\nYears = [2000, 2005, 2010, 2015, 2020]\n\n# Assuming these are sales of various types of toys in millions\nBoard_Game_Sales = [11, 13, 15, 18, 23]\nAction_Figure_Sales = [10, 12, 14, 17, 20]\nPuzzle_Sales = [9, 10, 12, 14, 18]\n\nplt.figure(figsize=(10,8))\n\nplt.plot(Years, Board_Game_Sales, marker='o', markersize=5, color='#d36261', label='Board Games')\nplt.plot(Years, Action_Figure_Sales, marker='o', markersize=5, color='#569994', label='Action Figures')\nplt.plot(Years, Puzzle_Sales, marker='o', markersize=5, color='#b14f7f', label='Puzzles')\n\nplt.xlabel('Year')\nplt.ylabel('Sales in Millions')\nplt.title('Comparison of Sales Over Years for Different Toy Types')\nplt.legend()\n\nplt.savefig(filename)\n\nplt.show()\n```\nChoices:[2000, 2005, 2010, 2015, 2020]\nStudent's Response:2005\n",
    "Question Text:\nBased on the scatter plot, which platform had the highest number of users in billions in January 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Plot Data\nusers = [36, 31, 29, 26, 23, 22, 15, 14, 13, 12]\nplatforms = ['Facebook', 'YouTube', 'WhatsApp', 'Messenger', 'WeChat', 'Instagram', 'QQ', 'QZone', 'Douyin', 'Sina Weibo']\n\nplt.figure(figsize=(10, 5))\nplt.scatter(platforms, users, marker='o')\n\nplt.xlabel('Platforms')\nplt.ylabel('Users (in billions)')\nplt.title('Social Media Users in billions (Jan 2020)')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/523.png')\nplt.show()\n```\nChoices:['Facebook', 'YouTube', 'WhatsApp', 'Messenger', 'WeChat']\nStudent's Response:'Facebook'\n",
    "Question Text:\nDoes the line chart show an increase in CO2 Emissions over time?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Environmental data\nyears = [2000, 2005, 2010, 2015, 2020]\nCO2_emissions = [31, 32, 36, 38, 40]  # in Billion metric tons\nglobal_temperatures = [14.0, 14.4, 14.6, 14.8, 15.0]  # in degrees Celsius\ndeforestation_rates = [16.1, 13, 12.5, 11.0, 10.3]  # in Million hectares per year\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# plot data\nax.plot(years, CO2_emissions, color='#ad39e5', marker='o', label=\"CO2 Emissions (Billion metric tons)\")\nax.plot(years, global_temperatures, color='r', marker='*', label=\"Global Temperatures (Degrees Celsius)\")\nax.plot(years, deforestation_rates, color='g', marker='x', label=\"Deforestation Rates (Million hectares/year)\")\n\n# decorate plot\nax.set_title('Environmental Issues Over Time')\nax.set_xlabel('Years')\nax.set_ylabel('Value')\nax.legend()\n\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/524.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Medicine C have stable sale growth over the 10 days?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ndays = list(range(1, 11))\nmedicine_A_sales = [15, 17, 16, 18, 20, 22, 23, 24, 25, 26]\nmedicine_B_sales = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\nmedicine_C_sales = [20, 25, 30, 32, 34, 35, 36, 37, 39, 40]\nmedicine_D_sales = [5, 7, 9, 11, 13, 15, 17, 19, 21, 23]\n\n# Create line chart\nplt.figure(figsize=(10, 8))\nplt.plot(days, medicine_A_sales, marker='o', color='#3bf10c', label=\"Medicine A\")\nplt.plot(days, medicine_B_sales, marker='o', color='#cfb580', label=\"Medicine B\")\nplt.plot(days, medicine_C_sales, marker='o', color='r', label=\"Medicine C\")\nplt.plot(days, medicine_D_sales, marker='o', color='purple', label=\"Medicine D\")\n\n# Set labels and titles\nplt.xlabel('Days')\nplt.ylabel('Number of Sales')\nplt.title('Medicine Sales Over 10 days')\nplt.legend()\n\n# Save figure \nplt.savefig('line_charts/line_charts_visual_linguistic/train/525.png')\n\n# Show plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\n: Was the Fruit Production consistently lower than the Cereal Production from 2000 to 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2000, 2011))\ncereal_production = [100, 120, 150, 180, 200, 240, 260, 275, 290, 300, 320]\nfruit_production = [50, 60, 65, 75, 85, 95, 98, 105, 110, 120, 130]\nvegetable_production = [75, 90, 95, 100, 110, 125, 130, 135, 141, 150, 160]\n\n# Create figure and plot space\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Add x-axis and y-axis\nax.plot(years, cereal_production, color='#bb9cc4', marker='o', label='Cereal Production')\nax.plot(years, fruit_production, color='#14e23d', marker='o', label='Fruit Production')\nax.plot(years, vegetable_production, color='#27e0ef', marker='o', label='Vegetable Production')\n\n# Set title and labels for axes\nax.set(xlabel=\"Year\",\n       ylabel=\"Production in Tons\",\n       title=\"Annual Agriculture Production\")\n\n# Add Legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/526.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat was the cricket score of Player5?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Sports Data\ncricket_scores = [180, 200, 210, 220, 230, 240, 250, 260, 270, 280]\nfootball_scores = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# Players\nplayers = ['Player1', 'Player2', 'Player3', 'Player4', 'Player5',\n           'Player6', 'Player7', 'Player8', 'Player9', 'Player10']\n\n# Create a figure and a set of subplots.\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Cricket Scores Plot\nax.scatter(players, cricket_scores, color='#c16ed3', \n           marker='o', label='Cricket Scores')\n\n# Football Scores Plot\nax.scatter(players, football_scores, color='blue', \n           marker='x', label='Football Goals')\n\n# Set the title and labels\nax.set_title('Sports Performance')\nax.set_xlabel('Players')\nax.set_ylabel('Scores/Goals')\n\n# Show the legend\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/527.png')\n\nplt.show()\n```\nChoices:['180', '230', '3', '5']\nStudent's Response:'230'\n",
    "Question Text:\nBased on the line chart, which region had the highest percentage of internet usage in 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nyears = range(2010, 2025)\ninternet_usage_america = [0.77, 0.78, 0.79, 0.81, 0.83, 0.84, 0.85, 0.86, 0.88, 0.89, 0.90, 0.91, 0.93, 0.94, 0.95]\ninternet_usage_europe = [0.68, 0.69, 0.71, 0.73, 0.75, 0.76, 0.77, 0.78, 0.80, 0.81, 0.83, 0.85, 0.87, 0.88, 0.90]\ninternet_usage_asia = [0.31, 0.33, 0.35, 0.37, 0.39, 0.41, 0.43, 0.45, 0.48, 0.50, 0.52, 0.55, 0.57, 0.60, 0.62]\n\nplt.figure(figsize=(10, 6))\n\nplt.plot(years, internet_usage_america, color='#cefa57', label='America', marker='o')\nplt.plot(years, internet_usage_europe, color='#fd2b40', label='Europe', marker='o')\nplt.plot(years, internet_usage_asia, color='#142f28', label='Asia', marker='o')\n\nplt.title('Internet Usage by Region')\nplt.xlabel('Year')\nplt.ylabel('Internet Usage (%)')\nplt.legend(loc='best')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/528.png')\nplt.show()\n```\nChoices:['America', 'Europe', 'Asia']\nStudent's Response:America\n",
    "Question Text:\nWhich architecture style shows consistently increasing trend over the years in the chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\nx = list(range(1, 6))\ncontemporary = [15, 12, 13, 11, 9]\nvictorian = [10, 12, 13, 15, 18]\ngothic = [14, 16, 15, 13, 11]\nbaroque = [12, 11, 10, 9, 8]\nminimalist = [19, 20, 20, 22, 23]\n\nplt.figure(figsize=(10,7))\n\nplt.plot(x, contemporary, marker='o', color='#8a28f5', label='Contemporary')\nplt.plot(x, victorian, marker='o', color='#602067', label='Victorian')\nplt.plot(x, gothic, marker='o', color='#bcc47e', label='Gothic')\nplt.plot(x, baroque, marker='o', color='#fd656d', label='Baroque')\nplt.plot(x, minimalist, marker='o', color='#69d170', label='Minimalist')\n\nplt.title('Trends in Architecture Styles Over Years')\nplt.xlabel('Years')\nplt.ylabel('Number of Buildings (in thousands)')\nplt.legend()\n\nif not os.path.exists('line_charts/line_charts_visual_linguistic/train'):\n    os.makedirs('line_charts/line_charts_visual_linguistic/train')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/529.png')\nplt.show()\n```\nChoices:['Contemporary', 'Victorian', 'Gothic', 'Baroque', 'Minimalist']\nStudent's Response:Minimalist\n",
    "Question Text:\nDid the academic books sale numbers ever exceed the poetry books sales?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Variables to represent years\nyears = list(range(2000, 2021))\n\n# Variables to represent book sales in thousands for 4 different kinds of literature\nfiction_books = [45, 50, 58, 61, 66, 68, 70, 73, 77, 79, 81, 83, 84, 88, 90, 87, 88, 89, 91, 92, 97]\nnon_fiction_books = [40, 43, 47, 52, 55, 59, 63, 65, 67, 70, 72, 75, 73, 76, 78, 81, 84, 85, 87, 88, 90]\npoetry_books = [15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\nacademic_books = [20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n\nplt.figure(figsize=(10,6))\nplt.plot(years, fiction_books,'#d65b10',marker='o', label='Fiction books')\nplt.plot(years, non_fiction_books,'g',marker='o', label='Non-fiction books')\nplt.plot(years, poetry_books,'b',marker='o', label='Poetry books')\nplt.plot(years, academic_books,'r',marker='o', label='Academic books')\n\nplt.title(\"Book Sales Over time (2000 - 2021)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Book Sales (Thousands)\")\nplt.legend(loc=\"upper left\")\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/530.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhich company showed the highest value in New York?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\ncities = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Philadelphia']\n\ndata1 = [1, 14, 32, 25, 30]\ndata2 = [5, 29, 12, 16, 20]\ndata3 = [15, 2, 18, 27, 31]\ndata4 = [3, 19, 34, 14, 28]\ndata5 = [23, 31, 5, 11, 17]\n\nplt.figure(figsize=(10, 6))\n\nplt.scatter(cities, data1, marker='o', label='Company A')\nplt.scatter(cities, data2, marker='s', label='Company B')\nplt.scatter(cities, data3, marker='d', label='Company C')\nplt.scatter(cities, data4, marker='*', label='Company D')\nplt.scatter(cities, data5, marker='^', label='Company E')\n\nplt.ylabel('Values')\nplt.title('Cities Data')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/531.png')\nplt.show()\n```\nChoices:['Company A', 'Company B', 'Company C', 'Company D', 'Company E']\nStudent's Response:Company E\n",
    "Question Text:\nDid the bear population increase from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Lines data\nrabbit_pop = [10, 12, 18, 25, 24]\ndeer_pop = [5, 6, 7, 8, 7]\nlion_pop = [2, 2, 2, 2, 3]\nbear_pop = [1, 1, 2, 2, 1]\npenguin_pop = [30, 35, 40, 50, 60]\n\n# X axis data\nyears = [2016, 2017, 2018, 2019, 2020]\n\n# Creating line chart\nfig, ax = plt.subplots(figsize=(12, 8))\n\nax.plot(years, rabbit_pop, color='#6b0c08', marker='o', label='Rabbits')\nax.plot(years, deer_pop, color='#768ec2', marker='o', label='Deers')\nax.plot(years, lion_pop, color='#d7fb65', marker='o', label='Lions')\nax.plot(years, bear_pop, color='#066a84', marker='o', label='Bears')\nax.plot(years, penguin_pop, color='#c8d3c6', marker='o', label='Penguins')\n\n# Adding labels, title, and legend\nax.set_xlabel('Year')\nax.set_ylabel('Population')\nax.set_title('Animals Population Over Years')\nax.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/532.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nHas the trend index for Charter Schools been consistently increasing over the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# specify the figure size\nplt.figure(figsize=(10,6))\n\n# create five different series of data\nx1 = [1, 2, 3, 4, 5]\ny1 = [1, 2.5, 3.5, 5, 4.5]\nplt.scatter(x1, y1, c='#0303c3', marker='o', label='Public Schools')\n\nx2 = [1, 2, 3, 4, 5]\ny2 = [2, 2.7, 3.7, 4.8, 5.2]\nplt.scatter(x2, y2, c='#bb8f1e', marker='s', label='Private Schools')\n\nx3 = [1, 2, 3, 4, 5]\ny3 = [1.4, 2.3, 3.1, 3.8, 4.6]\nplt.scatter(x3, y3, c='green', marker='v', label='Charter Schools')\n\nx4 = [1, 2, 3, 4, 5]\ny4 = [2.5, 3.5, 4, 4.7, 5.1]\nplt.scatter(x4, y4, c='purple', marker='p', label='Homeschool')\n\nx5 = [1, 2, 3, 4, 5]\ny5 = [1.5, 2, 3, 3.5, 4]\nplt.scatter(x5, y5, c='red', marker='*', label='Online Schools')\n\n# create title, labels and legend\nplt.title('Education Trends Over The Years (1-5)')\nplt.xlabel('Year')\nplt.ylabel('Trend Index')\nplt.legend(loc='upper left')\n\n# save the figure to the specified path\nplt.savefig('line_charts/line_charts_visual_linguistic/train/533.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the number of 'Science Fiction' books continue to increase every year from 2017 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Setting up data\n# These could represent counts of different genres of books in a bookstore over the span of 5 years\nyears = ['2017', '2018', '2019', '2020', '2021']\nfantasy = [50, 75, 70, 85, 90]\nthrillers = [70, 80, 90, 75, 80]\nromance = [60, 70, 80, 85, 90]\nbiographies = [55, 65, 70, 75, 80]\nscience_fiction = [80, 85, 90, 95, 100]\n\n# Creating Figure\nfig = plt.figure(figsize = (10, 5))\n\n# Adding axes\nax = fig.add_axes([0, 0, 1, 1])\n\n# Impactful colors\ncolor = ['#df746f', '#A6A393', '#B99285', '#507FBF', '#695576']\n\n# Creating the plot\nax.plot(years, fantasy, color=color[0], marker='o', label='Fantasy')\nax.plot(years, thrillers, color=color[1], marker='s', label='Thrillers')\nax.plot(years, romance, color=color[2], marker='*', label='Romance')\nax.plot(years, biographies, color=color[3], marker='v', label='Biographies')\nax.plot(years, science_fiction, color=color[4], marker='D', label='Science Fiction')\n\n# Labels and title\nplt.xlabel('Years')\nplt.ylabel('Number of Books')\nplt.title('Number of Different Genre Books Over Years')\n\n# Reducing clutter\nplt.grid(True)\n\n# Adding a legend\nplt.legend()\n\n# Saving figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/534.png')\n\n# Showing plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat color represents the Land Area according to the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Example data\ncountries = ['USA', 'China', 'India']\ngdp = [20.49, 13.6, 2.7]  # in trillion US dollars\npopulation = [0.33, 1.39, 1.37]  # in billions\nland_area = [9.63, 9.6, 3.29]  # in million km^2\n\n# Choosing plot size to fit elements\nplt.figure(figsize=(10, 6))\n\n# Adding series to the plot\nplt.scatter(countries, gdp, color='#6bfe88', marker='o', label='GDP (in trillion $)')\nplt.scatter(countries, population, color='blue', marker='s', label='Population (in billions)')\nplt.scatter(countries, land_area, color='red', marker='v', label='Land Area (in million km^2)')\n\n# Adding labels and legend\nplt.title('Comparison of Country attributes')\nplt.xlabel('Country')\nplt.ylabel('Values in respective units')\nplt.legend(loc='upper left')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/535.png')\nplt.show()\n```\nChoices:['Red', 'Blue', '#6bfe88']\nStudent's Response:'Red'\n",
    "Question Text:\nIn which year was the donation to Health the highest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\neducation = [5000, 8000, 12000, 3000, 10000]\nhealth = [7000, 9000, 10000, 8000, 11000]\nenvironment = [4000, 6000, 9000, 5000, 7000]\narts = [3000, 5000, 7000, 4000, 5000]\nanimals = [2000, 4000, 5000, 3000, 4000]\n\n# X values \nyears = ['2017', '2018', '2019', '2020', '2021']\n\n# Creating the scatter plot\nplt.figure(figsize=(15,7))\nplt.scatter(years, education, color='#f73983', label='Education')\nplt.scatter(years, health, color='#9c5bae', label='Health')\nplt.scatter(years, environment, color='#55e71e', label='Environment')\nplt.scatter(years, arts, color='#16be1b', label='Arts')\nplt.scatter(years, animals, color='#f424cb', label='Animals')\n\n# Setting the title for the scatter plot\nplt.title('Donations to Various Charities Over the Years')\nplt.xlabel('Years')\nplt.ylabel('Donation Amount (in $)')\nplt.legend(loc='upper left')\n\n# Save the created scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/536.png')\nplt.show()\n```\nChoices:['2017', '2018', '2019', '2020', '2021']\nStudent's Response:'2021'\n",
    "Question Text:\nWhat was the increase in the number of tourists visiting City X from the year 2010 to the year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\ntourists = [100000, 120000, 140000, 160000, 180000, 200000, 225000, 250000, 275000, 300000, 320000]\n\n# Setup the plot\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create a line plot\nax.plot(years, tourists, color='#1bb29c', marker='o', label='Number of Tourists')\n\n# Labels and legends\nax.set_xlabel('Year')\nax.set_ylabel('Number of tourists')\nax.set_title('Number of tourists visiting City X over the years')\nax.legend(loc='upper left')\n\n# Display the plot\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/537.png')\nplt.show()\n```\nChoices:['100000', '120000', '220000', '320000']\nStudent's Response:220000\n",
    "Question Text:\nWhat animal had the maximum number in Year 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The data\ncats = [5, 3, 9, 25, 15]\ndogs = [12, 25, 15, 5, 20]\nbirds = [20, 15, 8, 5, 10]\nfish = [5, 20, 25, 15, 10]\nhamsters = [15, 5, 10, 20, 25]\n\n# Corresponding X axis values\nyears = [2016, 2017, 2018, 2019, 2020]\n\n# Creating scatter plot\nplt.figure(figsize=(15, 10))\nplt.scatter(years, cats, s=100, c=\"#0ee48d\", marker='o', label=\"Cats\")\nplt.scatter(years, dogs, s=100, c=\"#0ee45d\", marker='o', label=\"Dogs\")\nplt.scatter(years, birds, s=100, c=\"#0ed48e\", marker='o', label=\"Birds\")\nplt.scatter(years, fish, s=100, c=\"#0ee94d\", marker='o', label=\"Fish\")\nplt.scatter(years, hamsters, s=100, c=\"#0ee44d\", marker='o', label=\"Hamsters\")\n\nplt.title(\"Number of Pets per Year\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Pets\")\nplt.legend(loc=\"best\")\nplt.savefig('line_charts/line_charts_visual_linguistic/train/538.png')\nplt.show()\n```\nChoices:['Cats', 'Dogs', 'Birds', 'Fish', 'Hamsters']\nStudent's Response:Hamsters\n",
    "Question Text:\nIs Brazil's GDP less than China's GDP?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport os\n\n# Creating directories for saving the figure\nos.makedirs('line_charts/line_charts_visual_linguistic/train/', exist_ok=True)\n\n# Countries and their GDP\ncountries = ['United States', 'China', 'Japan', 'Germany', 'India', 'United Kingdom', 'France', 'Italy', 'Brazil', 'Canada']\nGDP = [21.44, 14.34, 5.08, 3.86, 2.87, 2.83, 2.71, 1.85, 1.84, 1.74]\n\nplt.figure(figsize=(15,8))\n\n# Creating line plot\nplt.plot(countries, GDP, marker='o')\nplt.title('GDP of Top 10 Countries')\nplt.xlabel('Country')\nplt.ylabel('GDP (in trillion USD)')\nplt.xticks(rotation=30)\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/540.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIs the number of Cars more than the number of Bikes?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nTransportation_modes = ['Bikes', 'Cars', 'Trains', 'Aeroplanes']\nCount = [50, 180, 90, 120]\n\n# Create a scatter plot\nplt.figure(figsize=(10,7))\nplt.scatter(Transportation_modes, Count, color='#f51d6c', label=\"Count\")\n\n# Add title and labels\nplt.title('Transportation')\nplt.xlabel('Modes of Transportation')\nplt.ylabel('Count')\n\n# Add legend\nplt.legend(loc='best')\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/542.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes 'Book3' have the highest number of pages among all the books?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#Dataset\nbooks = ['Book1', 'Book2', 'Book3', 'Book4', 'Book5', 'Book6']\npages = [450, 710, 300, 590, 390, 600]\n\n#Create the scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(books, pages, marker='o')\nplt.title(\"Number of Pages in Different Books\")\nplt.xlabel(\"Books\")\nplt.ylabel(\"Number of Pages\")\n\n#Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/543.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nIn 2021, did the popularity index of the Swift programming language increase or decrease compared to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# create data\nlanguages = ['Python', 'Java', 'C++', 'JavaScript', 'Swift']\npopularity_2020 = [68, 63.25, 50.45, 69.8, 50.1]\npopularity_2021 = [70, 62.12, 49.8, 68.15, 51.15]\n\nplt.figure(figsize=[10,8])\n\n# plot data\nplt.plot(languages, popularity_2020, color='#cf8535', marker='o', label='2020')\nplt.plot(languages, popularity_2021, color='blue', marker='o', label='2021')\n\nplt.xlabel('Languages')\nplt.ylabel('Popularity Index')\nplt.title('Popularity of Programming Languages')\nplt.legend()\n\n# save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/544.png')\n\nplt.show()\n```\nChoices:['Increase', 'Decrease', 'Stayed the same', 'Data not available']\nStudent's Response:Increase\n",
    "Question Text:\nWhich year had the most number of earthquakes?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyear = list(range(2000, 2011))\nearthquakes = [17, 22, 31, 30, 26, 23, 24, 28, 29, 26, 25]\n\n# Creating scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(year, earthquakes, marker='o', color='r', label='Earthquakes')\n\n# Labels & Titles\nplt.xlabel('Year')\nplt.ylabel('Number of Occurrences')\nplt.title('Number of Earthquakes Over the Years')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/545.png')\n\nplt.show()\n```\nChoices:[2000, 2001, 2002, 2009, 2010]\nStudent's Response:2002\n",
    "Question Text:\n: Did the sales increase from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the plot\nyears = ['2016', '2017', '2018', '2019', '2020']\nsales = [100, 150, 200, 250, 300]\n\n# Create line chart\nplt.figure(figsize=[10,8])\nplt.plot(years, sales, marker = 'o')\n\n# Labels and title\nplt.title('Retail Sales Over the Years')\nplt.xlabel('Years')\nplt.ylabel('Sales in $')\nplt.legend(['Sales'])\n\n# Save plot as image\nplt.savefig('line_charts/line_charts_visual_linguistic/train/546.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid Cubism and Abstract painting styles have the same number of paintings in year 1000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create data\nyears = range(1000,2020,100)\npainting_evolution = {\n    'Impressionism': [2, 3, 10, 40, 100, 200, 250, 350, 300, 300, 500],\n    'Cubism': [0, 0, 0, 0, 0, 20, 250, 350, 700, 800, 900],\n    'Abstract': [0, 0, 0, 0, 0, 0, 10, 30, 100, 150, 250],\n}\n\n# Plot on the same graph\nplt.figure(figsize=(10,5))\nplt.plot(years, painting_evolution['Impressionism'], marker='o', color='#0ae4de', label='Impressionism')\nplt.plot(years, painting_evolution['Cubism'], marker='o', color='#b11de4', label='Cubism')\nplt.plot(years, painting_evolution['Abstract'], marker='o', color='#e41185', label='Abstract')\n\n# Add title and labels\nplt.title('Evolution of different Painting Styles over years')\nplt.xlabel('Years')\nplt.ylabel('Number of Paintings')\nplt.legend()\n\n# Save the plot to a file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/548.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the Fluffy Cats scatter plot data have an increasing trend?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data.\ndata1 = [1, 2, 4, 5, 7]\ndata2 = [2, 3, 5, 1, 6]\ndata3 = [4, 1, 3, 2, 7]\ndata4 = [5, 2, 6, 1, 3]\ndata5 = [7, 3, 1, 6, 4]\n\n# Create the figure and the axes.\nfig, ax = plt.subplots(figsize=(10,10))\n\n# Plot data \nax.scatter(range(len(data1)), data1, c='#94078f', label='Fluffy Cats')\nax.scatter(range(len(data2)), data2, c='#b509ec', label='Siamese Cats')\nax.scatter(range(len(data3)), data3, c='g', label='Black Cats')\nax.scatter(range(len(data4)), data4, c='b', label='Cottonball Cats')\nax.scatter(range(len(data5)), data5, c='r', label='Persian Cats')\n\n# Set the chart title and labels.\nax.set_title('Cat Data Distribution', fontsize=20)\nax.set_xlabel('Index', fontsize=15)\nax.set_ylabel('Values', fontsize=15)\n\n# Show the legend\nax.legend(loc='best')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/549.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIs IoT Adoption % greater than E-commerce growth % in 2021?\nFigure Code:\n```\n# Required Libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Years 2012-2021\nyears = np.array([2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\n\n# Series of Data\nAI_usage = [20, 25, 28, 36, 45, 52, 58, 62, 68, 73]\nBlockchain_Interest = [1, 2, 3, 4, 6, 8, 11, 15, 22, 27]\nE_commerce_growth = [17, 18, 20, 23, 25, 28, 30, 34, 38, 42]\nIoT_Adoption = [2, 5, 9, 12, 14, 17, 23, 27, 31, 38]\n\n# Plotting\nplt.figure(figsize=(12, 8))\n\nplt.plot(years, AI_usage, marker='o' , color='#07e3a8', label='AI usage %')\nplt.plot(years, Blockchain_Interest, marker='s' , color='b', label='Blockchain Interest %')\nplt.plot(years, E_commerce_growth, marker='d' , color='r', label='E-commerce growth %')\nplt.plot(years, IoT_Adoption, marker='p' , color='g', label='IoT Adoption %')\n\nplt.title('Trends in Technology 2012-2021')\nplt.xlabel('Years')\nplt.ylabel('% Growth/Adoption')\nplt.legend();\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/550.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat is the trend of Box Office Collection for Thriller movies over the years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = list(range(2010, 2020))\nthriller = [15, 17, 19, 21, 24, 21, 24, 26, 26, 28]\ndrama = [19, 24, 29, 31, 33, 33, 36, 34, 31, 32]\ncomedy = [12, 15, 19, 22, 24, 24, 25, 26, 24, 23]\n\nplt.figure(figsize=(10,6))\n\nplt.scatter(years, thriller, color='#8a06c8', marker='o', label='Thriller')\nplt.scatter(years, drama, color='r', marker='*', label='Drama')\nplt.scatter(years, comedy, color='g', marker='x', label='Comedy')\n\nplt.title('Box Office Collection of Different Genres over the Years')\nplt.xlabel('Years')\nplt.ylabel('Box Office Collection (in $ billion)')\nplt.legend(loc='best')\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/551.png')\nplt.show()\n```\nChoices:['It remained constant', 'It decreased', 'It increased', 'It fluctuated without a clear trend']\nStudent's Response:It increased\n",
    "Question Text:\nWhich historical event happened in the year 2000?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nHistorical_Events = ['Event 1','Event 2','Event 3','Event 4','Event 5']\nYears = [2000, 1800, 1905, 1950, 1675]\n\nfig, ax = plt.subplots(figsize=(10, 5))\nplt.scatter(Years, Historical_Events, marker='o')\nplt.title('Scatter plot showing Historic Events')\nplt.xlabel('Year')\nplt.ylabel('Historical Events')\nplt.grid(True)\nplt.legend(['Historical Events'])\nplt.savefig('line_charts/line_charts_visual_linguistic/train/552.png')\nplt.show()\n```\nChoices:['Event 1', 'Event 2', 'Event 3', 'Event 4', 'Event 5']\nStudent's Response:'Event 1'\n",
    "Question Text:\nDid the cricket team score more runs than the football team every year from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# initialise Cricket runs\ncricket_runs = [50, 75, 120, 65, 90]\n\n# initialise Football goals\nfootball_goals = [2, 3, 1, 4, 2]\n\n# initialise Basketball points\nbasketball_points = [15, 27, 23, 30, 20]\n\n# initialise Baseball points\nbaseball_points = [5, 7, 8, 6, 9]\n\n# initialise Hockey goals\nhockey_goals = [1, 2, 3, 1, 2]\n\n# initialise sports names\nsports = ['2016', '2017', '2018', '2019', '2020']\n\n\n# creating the bar chart\nplt.figure(figsize=(10,6))\n\nplt.plot(sports, cricket_runs, '#d29643', marker='o', label='Cricket')\nplt.plot(sports, football_goals, '#400c4e', marker='o', label='Football')\nplt.plot(sports, basketball_points, 'g', marker='o', label='Basketball')\nplt.plot(sports, baseball_points, 'r', marker='o', label='Baseball')\nplt.plot(sports, hockey_goals, 'b', marker='o', label='Hockey')\n\n# adding labels and title\nplt.xlabel('Years')\nplt.ylabel('Scores/Runs/Points')\nplt.title('Comparison of Different Sports')\nplt.legend()\n\n# Display and save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/553.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nWhat is the CPU Performance (in GHz) in the third month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nx = [1, 2, 3, 4, 5]\ny = [2, 5, 1, 4, 3]\n\n# create the figure and axes\nfig, ax = plt.subplots(figsize=(10,5))\n\n# plot\nax.scatter(x, y, marker='o', color='blue', label='CPU Performance')\n\n# title and labels\nax.set_title('Computer CPU Performance over Time', fontsize=14)\nax.set_xlabel('Time (in months)', fontsize=12)\nax.set_ylabel('Performance (in GHz)', fontsize=12)\n\n# legend\nax.legend()\n\n# ensure sufficient space for labels\nplt.tight_layout()\n\n# save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/554.png')\nplt.show()\n```\nChoices:[2, 5, 1, 4, 3]\nStudent's Response:1\n",
    "Question Text:\nIs the average temperature in Dallas higher than in Chicago in July?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\ntemp_new_york = [32, 36, 45, 56, 66, 75, 80, 78, 71, 60, 50, 37]\ntemp_chicago = [31, 35, 46, 59, 70, 81, 86, 84, 77, 65, 54, 36]\ntemp_san_francisco = [57, 60, 62, 63, 64, 66, 67, 68, 70, 69, 63, 57]\ntemp_dallas = [55, 58, 65, 72, 80, 87, 93, 94, 89, 79, 66, 57]\n\n# Plot\nplt.figure(figsize=(10, 6))\nplt.plot(months, temp_new_york, marker='o', label='New York')\nplt.plot(months, temp_chicago, marker='o', label='Chicago')\nplt.plot(months, temp_san_francisco, marker='o', label='San Francisco')\nplt.plot(months, temp_dallas, marker='o', label='Dallas')\n\n# Labels\nplt.xlabel('Months')\nplt.ylabel('Temperature (\u00b0F)')\nplt.title('Average Monthly Temperature for 4 US Cities')\nplt.legend()\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/555.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year was the number of patients requiring Medicine 2 the smallest?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Number of patients who needed different types of medicine in four different years\nyear = [2016, 2017, 2018, 2019]\nmed_1 = [500, 600, 900, 1200]\nmed_2 = [700, 800, 950, 1150]\nmed_3 = [1000, 1100, 1300, 1600]\nmed_4 = [1500, 1700, 1900, 2200]\n\nplt.figure(figsize=(12, 9))\n\n# Ploting the data\nplt.plot(year, med_1, color='#377778', marker='o', label=\"Medicine 1\")\nplt.plot(year, med_2, color='#0d7517', marker='v', label=\"Medicine 2\")\nplt.plot(year, med_3, color='#f8b0bd', marker='s', label=\"Medicine 3\")\nplt.plot(year, med_4, color='#d2cd27', marker='d', label=\"Medicine 4\")\n\n# Setting the legend, labels and title\nplt.legend()\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Patients\")\nplt.title(\"Number of Patients requiring different types of Medicine from 2016-2019\")\n\n# Saving the image.\nplt.savefig('line_charts/line_charts_visual_linguistic/train/556.png')\nplt.show()\n```\nChoices:[2016, 2017, 2018, 2019]\nStudent's Response:2016\n",
    "Question Text:\nWhich city had the highest crime rate in the year 2019?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data \ncrime_rate_cities = {'Los Angeles': [756, 818, 828, 863, 903],\n                     'New York': [556, 587, 609, 648, 678],\n                     'Chicago': [987, 1012, 1044, 1075, 1102],\n                     'Houston': [853, 883, 917, 952, 990],\n                     'Philadelphia': [777, 805, 831, 865, 897]}\n\n# Create figure size\nplt.figure(figsize=(10, 7))\n\n# Creating scatter plot\nfor i, city in enumerate(crime_rate_cities):\n  plt.scatter(range(2015, 2020), crime_rate_cities[city], label = city,\n              color=['#ebf3ca', '#073855', '#37b456', '#445bf2', '#5bbdef'][i],\n              marker='o')\n  \nplt.title('Crime Rates in Various Cities from 2015 to 2019')\nplt.xlabel('Year')\nplt.ylabel('Crime Rate')\nplt.legend()\n\n# saving the scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/557.png')\nplt.show()\n```\nChoices:['Los Angeles', 'New York', 'Chicago', 'Houston', 'Philadelphia']\nStudent's Response:Chicago\n",
    "Question Text:\nWhich cat breed in the scatter plot has the highest popularity percentage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\ncats = ['American Shorthair', 'Persian', 'Maine Coon', 'Siamese', 'Russian Blue']\npopularity = [23, 51, 35, 45, 28]\n\n# Create bar chart\nplt.figure(figsize=[10,8])\nplt.scatter(cats, popularity, color='#47afcd', marker='o')\nplt.title('Popularity of Cat Breeds')\nplt.xlabel('Cat Breeds')\nplt.ylabel('Popularity (%)')\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/558.png')\nplt.show()\n```\nChoices:['American Shorthair', 'Persian', 'Maine Coon', 'Siamese', 'Russian Blue']\nStudent's Response:Persian\n",
    "Question Text:\nHas the number of University enrollments generally increased over the years from 2000 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = range(2000, 2021)\nenrollment = [15, 17, 18, 19, 19, 21, 23, 25, 27, 29, 32, 34, 35, 37, 39, 41, 42, 45, 46, 48, 49]\n\nplt.figure(figsize=[10,5])\nplt.plot(years, enrollment, marker='o')\nplt.title('Number of University Enrollments per Year')\nplt.xlabel('Years')\nplt.ylabel('Enrollments (in millions)')\nplt.legend(['Enrollment'])\nplt.savefig('line_charts/line_charts_visual_linguistic/train/559.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nDid the sales of Laptops surpass the sales of PCs in the year 2017?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\npc_sales = [363, 364, 349, 317, 314, 289, 269, 261, 259, 260, 275]\nlaptop_sales = [152, 157, 164, 177, 188, 196, 209, 225, 241, 260, 280]\n\nplt.figure(figsize=[10,8])\nplt.plot(years, pc_sales, marker='o', label='PC Sales')\nplt.plot(years, laptop_sales, marker='o', label='Laptop Sales')\nplt.title('PC vs Laptop Sales Over the Years')\nplt.xlabel('Year')\nplt.ylabel('Sales (in millions)')\nplt.legend(loc=\"upper left\")\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/561.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the total water usage increase from 2005 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n#sample data\nyear = [2005,2010,2015,2020]\ntotal_water_usage = [400,450,515,650]\n\nfig, ax = plt.subplots(figsize=(10,5))\n\n#plotting data\nax.plot(year, total_water_usage, color=\"#ded2a4\", marker=\"o\")\n\n# labels and title\nplt.xlabel(\"Year\", fontsize=12)\nplt.ylabel(\"Total Water Usage (in cubic meters)\", fontsize=12)\nplt.title(\"Total Water Usage Over Years\", fontsize=16)\n\n# legend \nplt.legend(['Total Water usage'],loc='upper left')\n\n# saving the char\nplt.savefig('line_charts/line_charts_visual_linguistic/train/562.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year was the amount of 'Funds Allocated for Conservation' equal to the 'Number of Endangered Species'?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data (In Thousands)\nyears = list(range(2000, 2021))\nprotected_areas = [100, 120, 160, 190, 220, 260, 300, 330, 370, 400, 500, 600, 700, 800, 900, 950, 1000, 1050, 1100, 1150, 1200]\nfunds_allocated = [20, 40, 60, 80, 100, 130, 230, 300, 400, 500, 600, 700, 860, 950, 1000, 1100, 1210, 1300, 1400, 1500, 1600] \nendangered_species = [850, 870, 900, 950, 1000, 1060, 1120, 1180, 1250, 1300, 1400, 1500, 1600, 1700, 1750, 1800, 1850, 1950, 2000, 2100, 2200]\nrecovered_species = [10, 20, 30, 35, 40, 45, 50, 60, 70, 75, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180]\n\n# Plotting\nplt.figure(figsize=(15, 10))\nplt.plot(years, protected_areas, color=\"#b29634\", marker='o', label='Number of Protected Areas')\nplt.plot(years, funds_allocated, color=\"#6731c0\", marker='o', label='Funds Allocated for Conservation')\nplt.plot(years, endangered_species, color=\"#335b87\", marker='o', label='Number of Endangered Species')\nplt.plot(years, recovered_species, color=\"#f13e3e\", marker='o', label='Number of Species Recovered')\n\n# Labels\nplt.xlabel('Years', fontsize=16)\nplt.ylabel('Counts (in Thousands)', fontsize=16)\nplt.title('Wildlife Conservation (2000 - 2020)', fontsize=20)\nplt.legend()\n\n# Save\nplt.savefig('line_charts/line_charts_visual_linguistic/train/563.png')\n\nplt.show()\n```\nChoices:['2000', '2005', '2010', '2015']\nStudent's Response:2010.\n",
    "Question Text:\nIn which year did the highest number of space exploration missions occur as per the given data?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [1957, 1969, 1971, 1981, 1990, 1998, 2008, 2020]\nmissions = [1, 2, 1, 2, 5, 1, 3, 2]\n\nfig, ax = plt.subplots(figsize=(15, 10))\n\nax.plot(years, missions, color='#3e8d3f', marker='o')\n\nax.set_xlabel('Year', fontsize=12)\nax.set_ylabel('Number of Missions', fontsize=12)\nax.set_title('Space Exploration Missions per Year', fontsize=15)\n\nplt.legend(['Number of Missions'], loc='upper left')\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/564.png')\nplt.show()\n```\nChoices:[1957, 1969, 1971, 1981, 1990, 1998, 2008, 2020]\nStudent's Response:1990\n",
    "Question Text:\nIn which year did China tourists visiting XYZ country surpass the UK tourists?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Series of data\nyears = np.arange(2015, 2020)\nus_tourists = [77, 76, 75, 79, 83]\nuk_tourists = [34, 36, 35, 38, 41]\nchina_tourists = [56, 59, 62, 64, 69]\nindia_tourists = [15, 18, 21, 23, 26]\n\nplt.figure(figsize=(10,7))\n\n# Plotting four different series of data\nplt.plot(years, us_tourists, color='#baa50f', marker='o', label='US')\nplt.plot(years, uk_tourists, color='#a1d5b4', marker='o', label='UK')\nplt.plot(years, china_tourists, color='#51f9cd', marker='o', label='China')\nplt.plot(years, india_tourists, color='r', marker='o', label='India')\n\nplt.title('Number of Tourists Visiting XYZ Country (in Millions)', fontsize=14)\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('No of Tourists (in Millions)', fontsize=12)\nplt.legend()\n\n# Saving the image to file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/565.png')\nplt.show()\n```\nChoices:[2015, 2016, 2017, 2018, 2019]\nStudent's Response:2015\n",
    "Question Text:\nDid the production House B produced more movies in 2020 than in 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Define the data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nmovies_a = [100, 110, 120, 125, 140, 145, 150, 160, 165, 170, 175]\nmovies_b = [90, 80, 85, 100, 105, 110, 120, 130, 135, 145, 150]\n\n# Create a new figure with a specific size\nplt.figure(figsize=(10, 6))\n\n# Plot the data\nplt.plot(years, movies_a, color='#e3b26d', marker='o', label='Production House A')\nplt.plot(years, movies_b, color='#2b1617', marker='x', label='Production House B')\n\n# Customize the chart\nplt.title('Number of Movies Produced by Two Production Houses (2010-2020)')\nplt.xlabel('Year')\nplt.ylabel('Number of Movies')\nplt.legend(loc='upper left')\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/566.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year does the Healthcare Expense reach 250 billion dollars?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for scatter plot\nyear = [2000, 2005, 2010, 2015, 2020]\nexpenses = [100, 150, 200, 250, 300]\n\nplt.figure(figsize=(10,5)) # sufficiently large figure size\nplt.scatter(year, expenses, marker='o')\nplt.title(\"Healthcare Expenditure Over the Years\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Healthcare Expenditure (in billions of dollars)\")\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/567.png')\nplt.show()\n```\nChoices:[2000, 2005, 2010, 2015, 2020]\nStudent's Response:2015\n",
    "Question Text:\nBy how much million has the viewership for Baseball increased from the year 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the plot\nyears = list(range(2010, 2021))\nbaseball_viewers = [50, 52, 55, 57, 58, 60, 62, 65, 70, 72, 75]\n\n# Create a new figure\nplt.figure(figsize=[10,5])\n\n# Plot the baseball data with the specified line style and color\nplt.plot(years, baseball_viewers, marker='o', color='#ef65a6', label='Baseball')\n\n# Add labels and title\nplt.xlabel('Years')\nplt.ylabel('Viewers (in millions)')\nplt.title('Sports Viewership Over Time')\n\n# Add a legend\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/568.png')\n\nplt.show()\n```\nChoices:[10, 15, 20, 25]\nStudent's Response:25\n",
    "Question Text:\nDid Sweaters sell the highest number of items consistently over the 20 years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = list(range(2001, 2021))\njeans = [30, 35, 42, 40, 39, 45, 48, 55, 60, 62, 65, 66, 70, 75, 80, 85, 90, 87, 88, 90]\nt_shirts = [45, 47, 50, 52, 55, 56, 60, 62, 67, 70, 72, 76, 78, 77, 82, 90, 92, 95, 96, 98]\njackets = [20, 25, 25, 27, 28, 29, 31, 35, 37, 40, 45, 50, 52, 55, 60, 65, 75, 80, 80, 80]\nskirts = [15, 17, 20, 25, 30, 35, 38, 40, 45, 48, 52, 55, 59, 60, 62, 65, 70, 75, 78, 80]\nsweaters = [50, 55, 58, 60, 62, 65, 67, 68, 70, 72, 74, 76, 78, 82, 85, 88, 92, 95, 98, 99]\n\nplt.figure(figsize=(15,10))\n\n# Plotting\nplt.plot(years, jeans, color='#2f3472', label='Jeans', marker='o')\nplt.plot(years, t_shirts, color='#b8f6c0', label='T-shirts', marker='o')\nplt.plot(years, jackets, color='#136e2a', label='Jackets', marker='o')\nplt.plot(years, skirts, color='#3f38a8', label='Skirts', marker='o')\nplt.plot(years, sweaters, color='#85eb75', label='Sweaters', marker='o')\n\n# Labels\nplt.xlabel('Years')\nplt.ylabel('Number of items sold (in thousands)')\nplt.title('Fashion Trend 2001-2020')\nplt.legend()\n\nplt.grid(True)\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/569.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhich genre has seen a consistent increase in average ratings over the years from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# This data could be anything, but let's just say it's average movie ratings, in three different \n# genres, over the last 5 years.\naction_ratings = [6.5, 7.3, 6.7, 7.1, 7.0]\nanimation_ratings = [7.0, 7.3, 7.6, 7.9, 7.8]\ndocumentary_ratings = [7.8, 8.1, 8.3, 8.2, 8.0]\n\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=[10,5])\n\n# Now we create the three scatter plot by using the plt.scatter function, setting the color of our choice\nplt.scatter(years, action_ratings, color='#3079a9', label='Action')\nplt.scatter(years, animation_ratings, color='#04e3b4', label='Animation')\nplt.scatter(years, documentary_ratings, color='#eb09e0', label='Documentary')\n\n# Adding labels and title as required\nplt.xlabel(\"Years\")\nplt.ylabel(\"Average Ratings\")\nplt.title(\"Movie Ratings Over Time By Genres\")\nplt.legend()\n\n# Saving the figure in the given directory\nplt.savefig('line_charts/line_charts_visual_linguistic/train/571.png')\n\nplt.show()\n```\nChoices:['Action', 'Animation', 'Documentary']\nStudent's Response:None of the genres show a consistent increase in ratings over the years from 2016 to 2020.\n",
    "Question Text:\n: Based on the scatter plot, which type of literary work has the highest annual sales correlation with their length?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\nnovel_length = [300, 350, 400, 200, 300, 450, 500, 300, 400, 350]\nshort_story_length = [50, 75, 100, 35, 50, 120, 150, 75, 100, 50]\npoem_length = [2, 5, 10, 1, 2, 10, 20, 5, 10, 2]\n\nnovels_sales = [20000, 25000, 30000, 15000, 20000, 35000, 40000, 20000, 30000, 25000]\nshort_stories_sales = [1000, 5000, 3000, 3000, 3000, 7000, 9000, 5000, 5000, 3000]\npoems_sales = [400, 200, 500, 300, 300, 700, 900, 200, 300, 400]\n\nplt.figure(figsize=(10, 6))\n\n# Create scatter plots for novels, short stories, and poems\nplt.scatter(novel_length, novels_sales, label='Novels')\nplt.scatter(short_story_length, short_stories_sales, label='Short Stories')\nplt.scatter(poem_length, poems_sales, label='Poems')\n\n# Create labels and title\nplt.xlabel('Length (pages)')\nplt.ylabel('Annual Sales')\nplt.title('Annual Sales by Literary Works Length')\n\n# Add a legend\nplt.legend()\n\n# Save the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/572.png')\nplt.show()\n```\nChoices:['Novels', 'Short Stories', 'Poems']\nStudent's Response:Novels\n",
    "Question Text:\nWhat is the income in 2003 for the year 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Given data\nincome_in_2000 = [50, 60, 75, 80, 100]\nincome_in_2010 = [55, 65, 80, 85, 110]\nincome_in_2020 = [60, 70, 85, 90, 120]\nyears = ['2000', '2001', '2002', '2003', '2004']\n\n# Initialize plot\nfig, ax = plt.subplots(figsize=(10,6))\n\n# Scatter plots\nax.scatter(years, income_in_2000, color='#7db09b', marker='o', label='Income in 2000')\nax.scatter(years, income_in_2010, color='#593534', marker='s', label='Income in 2010')\nax.scatter(years, income_in_2020, color='blue', marker='d', label='Income in 2020')\n\n# Labels and legends\nax.set_xlabel('Year')\nax.set_ylabel('Income ($K)')\nax.set_title('Income Over Years')\nax.legend(loc='best')\n\n# Save figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/573.png')\n\nplt.show()\n```\nChoices:['$75K', '$80K', '$85K', '$90K', '$70K']\nStudent's Response:'$85K'\n",
    "Question Text:\nDid the political approval rating ever reach or exceed 60% in any year presented in the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Prepare the data\nyears = list(range(2000, 2020))\napproval_ratings = [40, 41, 45, 47, 40, 39, 45, 46, 42, 45, 44, 47, 50, 55, 53, 50, 54, 52, 55, 56]\n\n# Create the scatter plot\nplt.figure(figsize=(10,5))\nplt.scatter(years, approval_ratings, color='#50b0b5', marker='o')\n\n# Add title and labels\nplt.title(\"Political Approval Rating Over Time\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Approval Rating (%)\")\n\n# Add grid\nplt.grid(True)\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/574.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nIn which year was the number of cattle in agriculture 515 thousand?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Dataset\nyears = ['2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010']\ncattle = [500, 505, 507, 510, 515, 518, 520, 525, 530, 550]\n\nplt.figure(figsize = (10,5))\n\n# Plotting\nplt.plot(years, cattle, color='#6b8a6d', label='Cattle', marker='o')\n\n# Labeling\nplt.title('Annual Growth of Cattle in Agriculture')\nplt.xlabel('Year')\nplt.ylabel('Number of Cattle (in thousands)')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/575.png')\nplt.show()\n```\nChoices:['2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010']\nStudent's Response:'2005'\n",
    "Question Text:\nIs the number of wild dogs more than pet dogs?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data sets\nanimals = ['Dogs', 'Cats', 'Rabbits', 'Birds', 'Fish']\nnumber_of_pets = [45, 30, 15, 10, 7]\nnumber_of_wild = [20, 80, 50, 70, 100]\n\n# Create the plot space\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Scatter plots\nax.scatter(animals, number_of_pets, color='#38b95b', label='Pets')\nax.scatter(animals, number_of_wild, color='#867f68', label='Wild')\n\n# Labels, legend and Title\nax.set_xlabel('Animal Type')\nax.set_ylabel('Number')\nax.set_title('Scatter Plot of Animals')\nax.legend()\n\n# Save file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/576.png')\n\n# Show the plot\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\n:\n\"Does the Womenswear sales exceed the Menswear sales in the year of 2020?\"\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\nsales_menswear = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nsales_womenswear = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n# Create figure and plot\nfig, ax = plt.subplots(figsize=(10,7))\n\nax.plot(years, sales_menswear, marker='o', color='#05b1a9', label='Menswear Sales')\nax.plot(years, sales_womenswear, marker='o', color='#1e28cb', label='Womenswear Sales')\nax.set_xlabel('Year')\nax.set_ylabel('Sales (in billions)')\nax.set_title('Sales of Menswear and Womenswear from 2010 to 2020')\nax.legend()\n\n# Save plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/578.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the chart, did the number of wildfire incidents exceed the number of floods in 2005?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for the chart\nyears = list(range(1995, 2022))\nearthquakes = [23, 45, 14, 35, 12, 26, 30, 16, 15, 11, 19, 27, 26, 29, 17, 24, 30, 37, 10, 14, 21, 18, 27, 31, 22, 25, 18]\nfloods = [80, 72, 101, 115, 124, 78, 83, 82, 96, 92, 89, 96, 104, 108, 101, 99, 92, 100, 85, 79, 88, 95, 100, 103, 97, 96, 94]\nwildfires = [69, 57, 73, 65, 59, 75, 64, 70, 76, 72, 68, 69, 73, 74, 77, 80, 82, 84, 82, 85, 86, 87, 88, 90, 91, 94, 94]\n\n# Chart details\nplt.figure(figsize=(16,7))  # Large size to avoid label overlap\nplt.plot(years, earthquakes, color='#3880ee', marker='o', label='Earthquakes')\nplt.plot(years, floods, color='green', marker='v', label='Floods')\nplt.plot(years, wildfires, color='red', marker='s', label='Wildfires')\n\n# Labeling \nplt.title('Natural Disasters from 1995 to 2021', fontsize=16)\nplt.xlabel('Years', fontsize=14)\nplt.ylabel('Number of incidents', fontsize=14)\nplt.legend(fontsize=12)\n\n# Save the chart\nplt.savefig('line_charts/line_charts_visual_linguistic/train/579.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nWhat was the percentage usage of Medicine A in the year 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nyear = np.array([2000, 2005, 2010, 2015, 2020])\nmedicine_A = np.array([50, 55, 70, 80, 90])\nmedicine_B = np.array([60, 65, 75, 85, 95])\nmedicine_C = np.array([30, 35, 40, 45, 50])\n\nplt.figure(figsize=(10, 5)) \n\n# Create a line chart\nplt.plot(year, medicine_A, marker='o', color='#617b6f', label='Medicine A')\nplt.plot(year, medicine_B, marker='o', color='blue', label='Medicine B')\nplt.plot(year, medicine_C, marker='o', color='red', label='Medicine C')\n\nplt.xlabel('Year')\nplt.ylabel('Usage of Medicine (%)')\nplt.title('Medicine Usage Over Years')\nplt.legend(loc=2)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/580.png')\n```\nChoices:['40%', '55%', '70%', '90%']\nStudent's Response:70%\n",
    "Question Text:\nDid the annual catch of all three fishes increase every year between 2000 and 2010?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = list(range(2000, 2011))\ntuna_catches = [30, 32, 33, 45, 50, 52, 53, 54, 56, 60, 62]\nsalmon_catches = [45, 48, 52, 53, 57, 60, 62, 64, 68, 70, 72]\nbass_catches = [15, 18, 20, 23, 25, 28, 30, 32, 35, 37, 40]\n\nplt.figure(figsize=(10, 6))\n\n# plot data\nplt.plot(years, tuna_catches, marker='o', color='#7f537c', label='Tuna')\nplt.plot(years, salmon_catches, marker='v', color='#0a859f', label='Salmon')\nplt.plot(years, bass_catches, marker='s', color='#bada55', label='Bass')\n\nplt.xticks(years)\nplt.xlabel('Year')\nplt.ylabel('Number of catches (in thousands)')\nplt.title('Fishes caught every year (2000-2010)')\nplt.legend()\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/581.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDoes the Festival A have the lowest Audience figures among the three types of festivals on all occasions?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# festival statistics\nfestivals_a = {'audience': [1000, 3000, 5000, 7000, 9000], 'rating': [8.1, 8.3, 8.5, 8.7, 8.9]}\nfestivals_b = {'audience': [1500, 3500, 5500, 7500, 9500], 'rating': [8.2, 8.4, 8.6, 8.8, 9.0]}\nfestivals_c = {'audience': [2000, 4000, 6000, 8000, 10000], 'rating': [8.3, 8.5, 8.7, 8.9, 9.1]}\n\nplt.figure(figsize=(10,6))\nplt.scatter(festivals_a['audience'], festivals_a['rating'], marker='o', label='Festivals A')\nplt.scatter(festivals_b['audience'], festivals_b['rating'], marker='s', label='Festivals B')\nplt.scatter(festivals_c['audience'], festivals_c['rating'], marker='^', label='Festivals C')\n\nplt.xlabel('Audience')\nplt.ylabel('Rating')\nplt.title('Audience vs Rating for different Festival types')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/582.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:yes.\n",
    "Question Text:\nHas the wildlife population increased from the year 2010 to year 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nyears = [2005, 2010, 2015, 2020]\nwildlife_population = [5000, 5500, 6100, 6700]\n\nplt.figure(figsize=(8,6))\nplt.plot(years, wildlife_population, marker='o', linestyle='-', color='b', label = 'Wildlife population')\n\nplt.xlabel('Years')\nplt.ylabel('Wildlife population')\nplt.title('Wildlife Conservation - Population Over the Years')\nplt.legend()\n\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/583.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the population of Region A exceed the population of Region D in any of the given years?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for four series, in thousands\nyears = list(range(2000, 2021))\npopulation_A = [28, 30, 32, 35, 36, 37, 40, 41, 43, 44, 46, 49, 51, 52, 54, 56, 59, 60, 63, 65, 68]\npopulation_B = [55, 57, 60, 63, 66, 69, 72, 75, 77, 81, 84, 86, 90, 93, 96, 99, 102, 106, 109, 112, 116]\npopulation_C = [82, 86, 89, 92, 96, 100, 102, 105, 110, 113, 117, 120, 125, 128, 133, 136, 140, 145, 148, 153, 157]\npopulation_D = [109, 112, 115, 120, 123, 128, 132, 135, 140, 145, 148, 153, 157, 162, 166, 171, 176, 181, 185, 191, 196]\n\nplt.figure(figsize=(14, 9))\n\n# Define scatter plot for each population series\nplt.scatter(years, population_A, color = '#bc63e1', label = 'Region A')\nplt.scatter(years, population_B, color = '#1f77b4', label = 'Region B')\nplt.scatter(years, population_C, color = '#ff7f0e', label = 'Region C')\nplt.scatter(years, population_D, color = '#2ca02c', label = 'Region D')\n\n# Title, labels, and legend\nplt.title('Population Growth', fontsize=16)\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('Population count in Thousands', fontsize=12)\nplt.legend(loc='upper left', fontsize=12)\n\n# Save Scatter plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/584.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDoes brand B's popularity exceed 6 million in year 5?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nbrand_A = [1, 2, 3, 4, 5]\nbrand_B = [2, 3, 4, 5, 6]\nbrand_C = [3, 4, 5, 6, 7]\nbrand_D = [4, 5, 6, 7, 8]\nbrand_E = [5, 6, 7, 8, 9]\n\ntime = [1, 2, 3, 4, 5]\n\n# Creating scatter plots\nplt.figure(figsize=(10,8))\nplt.scatter(time, brand_A, s=100, color='#148e24', label='Brand A')\nplt.scatter(time, brand_B, s=100, color='#e88f00', label='Brand B')\nplt.scatter(time, brand_C, s=100, color='#cce3f9', label='Brand C')\nplt.scatter(time, brand_D, s=100, color='#eef9cb', label='Brand D')\nplt.scatter(time, brand_E, s=100, color='#b435c3', label='Brand E')\n\n# Setting charts title and labels\nplt.title('Phone Brands popularity over time', fontsize=16)\nplt.xlabel('Time (Years)', fontsize=14)\nplt.ylabel('Popularity (Millions)', fontsize=14)\n\n# Adding legend\nplt.legend()\n\n# Saving the plot\nplt.savefig('line_charts/line_charts_visual_linguistic/train/585.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No.\n",
    "Question Text:\nDid Apple's market share in 2020 exceed 95%?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\napple = [65, 70, 75, 80, 90, 95, 100]\nsamsung = [70, 75, 65, 85, 90, 95, 98]\ngoogle = [60, 65, 70, 75, 80, 85, 95]\nhuawei = [70, 75, 78, 80, 85, 90, 92]\nyears = [2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\n# Create the scatter plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.scatter(years, apple, color='#5ba150', label='Apple')\nax.scatter(years, samsung, color='#27c649', label='Samsung')\nax.scatter(years, google, color='#1acdab', label='Google')\nax.scatter(years, huawei, color='#000000', label='Huawei')\n\n# Add details\nax.set_title('Phone Market Share')\nax.set_xlabel('Years')\nax.set_ylabel('Market Share (in %)')\nax.legend()\n\n#  Save the plot to a file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/586.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the Women Clothing sales surpass Men Clothing sales every year from 2016 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Five different series of data\nWomen_Clothing_Sales = [5, 6, 7, 8, 7]\nMen_Clothing_Sales = [3, 4, 3, 4, 5]\nKids_Clothing_Sales = [2, 3, 4, 3, 3]\nShoe_Sales = [8, 10, 11, 10, 12]\nBag_Sales = [3, 5, 6, 7, 8]\n\n# X-axis years from 2016 to 2020\nyears = [2016, 2017, 2018, 2019, 2020]\n\nplt.figure(figsize=(12, 6))  # defining figure size to avoid any word overlap\n\nplt.plot(years, Women_Clothing_Sales, marker='o', color='#6845a1', label='Women Clothing Sales')\nplt.plot(years, Men_Clothing_Sales, marker='o', color='#788f2b', label='Men Clothing Sales')\nplt.plot(years, Kids_Clothing_Sales, marker='o', color='#4774c7', label='Kids Clothing Sales')\nplt.plot(years, Shoe_Sales, marker='o', color='#fbe1d1', label='Shoe Sales')\nplt.plot(years, Bag_Sales, marker='o', color='#8c1a6a', label='Bag Sales')\n\nplt.xlabel('Years')\nplt.ylabel('Sales (in millions)')\nplt.title('Fashion Sales Over the Years')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/589.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nDid the sale of fashion items peak in the month of December?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data\nmonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nsales = [120, 150, 170, 200, 250, 230, 220, 210, 260, 280, 300, 310]\n\nplt.figure(figsize=(10,6))\n\n# Create a scatter plot\nplt.scatter(months, sales, color='#7d9303', marker='o')\n\n# Add labels, title and legend\nplt.xlabel('Months')\nplt.ylabel('Sales')\nplt.title('Fashion Sales Over A Year')\nplt.legend(['Sales'])\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/590.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nDid the usage of Python language increase over the years from 2018 to 2021 in the scatter plot?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\nlanguages = ['Python', 'Java', 'JavaScript', 'C++']\nx_series = [1, 2, 3, 4]\ny_series1 = [72, 68, 69, 52]\ny_series2 = [67, 66, 70, 55]\ny_series3 = [70, 67, 68, 55]\ny_series4 = [70, 65, 72, 58]\n\nplt.figure(figsize=(10,5))\n\nplt.scatter(x_series, y_series1, label='2018')\nplt.scatter(x_series, y_series2, label='2019')\nplt.scatter(x_series, y_series3, label='2020')\nplt.scatter(x_series, y_series4, label='2021')\n\nplt.xlabel('Languages')\nplt.ylabel('Use (%)')\nplt.title('Languages Usage Over Years')\nplt.xticks(x_series, languages)\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/591.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:No\n",
    "Question Text:\nBased on the line chart 'Number of Users by Language', which language has the least number of users?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data\nlanguages = ['English', 'Spanish', 'French', 'German', 'Italian']\nusers = [400, 320, 240, 180, 150]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot data\nax.plot(languages, users, marker='o', color='#942aec', label='Number of Users')\n\n# Set labels and title\nax.set_xlabel('Languages')\nax.set_ylabel('Number of Users (in millions)')\nax.set_title('Number of Users by Language')\n\n# Add legend\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/592.png')\nplt.show()\n```\nChoices:['English', 'Spanish', 'French', 'German', 'Italian']\nStudent's Response:'Italian'\n",
    "Question Text:\nDoes the scatter plot show that the population of Country A will be greater than the population of Country B in 2100?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# The two series of data\nyear = [1900, 1950, 2000, 2050, 2100]\npop_A = [1.6, 2.55, 6.12, 9.73, 10.85] # in billions\npop_B = [1.2, 1.9, 4.0, 8.1, 11.4] # in billions\n\nplt.figure(figsize=(10, 7)) # Set figure size to be sufficiently large\n\n# Plot the data\nplt.scatter(year, pop_A, marker='o', color='b', label='Country A')\nplt.scatter(year, pop_B, marker='x', color='r', label='Country B')\n\n# Set labels and legend\nplt.xlabel('Year')\nplt.ylabel('Population in Billions')\nplt.title('Population Growth')\nplt.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/593.png')\nplt.show()\n```\nChoices:['yes', 'no']\nStudent's Response:no\n",
    "Question Text:\nDoes the percentage of Urban Land increase over the years 2000-2010 in the provided chart?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Initialize data\nyears = list(range(2000, 2011))\narable_land = [0.38, 0.37, 0.37, 0.36, 0.35, 0.34, 0.33, 0.32, 0.30, 0.29, 0.28] # % of total land\nforest_land = [0.30, 0.31, 0.32, 0.33, 0.34, 0.35, 0.35, 0.35, 0.35, 0.36, 0.36]  # % of total land\nurban_land = [0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.04, 0.05, 0.06]    # % of total land\nother_land = [0.31, 0.31, 0.30, 0.30, 0.29, 0.29, 0.30, 0.30, 0.31, 0.30, 0.30]    # % of total land\n\n# Create plot\nplt.figure(figsize=(10,7))\n\nplt.plot(years, arable_land, marker='o', color='#42c6de', label='Arable Land')\nplt.plot(years, forest_land, marker='o', color='green', label='Forest Land')\nplt.plot(years, urban_land, marker='o', color='red', label='Urban Land')\nplt.plot(years, other_land, marker='o', color='orange', label='Other Land')\n\nplt.legend()\nplt.xlabel(\"Year\")\nplt.ylabel(\"Land Type (%)\")\nplt.title(\"Land Type over Years\")\n\nplt.grid(True)\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/594.png')\n\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn which year did Asia surpass North America in terms of internet usage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Series data\nyears = list(range(2000, 2011))\nnorth_america_usage = [61470, 72880, 82650, 101520, 121050, 142780, 156680, 175820, 191320, 179870, 212610]\nasia_usage = [57366, 81443, 90213, 114825, 184093, 364290, 437303, 556663, 778555, 857488, 825334]\nafrica_usage = [4623, 5539, 6795, 8308, 12540, 24742, 37218, 51280, 64913, 80826, 87320]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10,6))\n\nax.plot(years, north_america_usage, marker='o', color='#04c9a4', label='North America')\nax.plot(years, asia_usage, marker='o', color='#61098c', label='Asia')\nax.plot(years, africa_usage, marker='o', color='r', label='Africa')\n\n# Set Labels and Titles\nax.set_xlabel('Years')\nax.set_ylabel('Internet Users (in thousands)')\nax.set_title('Internet Usage Over the Years')\nax.legend()\n\n# Save the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/595.png')\nplt.show()\n```\nChoices:[2002, 2003, 2004, 2005, 2006]\nStudent's Response:2003\n",
    "Question Text:\nDid the number of festivals in the spring increase every year from 2017 to 2021?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Data for each series\nspring_festivals = [15, 18, 22, 26, 35]\nsummer_festivals = [40, 45, 50, 55, 60]\nautumn_festivals = [35, 30, 25, 20, 15]\nwinter_festivals = [10, 12, 14, 16, 18]\n\n# Years for data\nyears = [2017, 2018, 2019, 2020, 2021]\n\n# Creating the plot\nplt.figure(figsize=(10,5))\n\nplt.scatter(years, spring_festivals, c='#8a5250', label='Spring Festivals')\nplt.scatter(years, summer_festivals, c='#f995e8', label='Summer Festivals')\nplt.scatter(years, autumn_festivals, c='#edec9e', label='Autumn Festivals')\nplt.scatter(years, winter_festivals, c='#e9c6b2', label='Winter Festivals')\n\n# Adding labels, title, and legend\nplt.xlabel('Year')\nplt.ylabel('Number of Festivals')\nplt.title('Festivals Across The Years By Season')\nplt.legend()\n\n# Saving the figure\nplt.savefig('line_charts/line_charts_visual_linguistic/train/596.png')\nplt.show()\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes\n",
    "Question Text:\nIn the year 2010, which region had the highest forestry coverage?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Series of data\nyears = np.arange(2000, 2020, 1)\nforest_coverage_europe = np.array([38.1, 38.5, 38.6, 39.0, 39.1, 39.3, 39.5, 39.9, 40.2, 40.4, 40.7, 41.0, 41.3, 41.5, 41.7, 42.0, 42.2, 42.5, 42.7, 43.0])\nforest_coverage_asia = np.array([20.5, 20.7, 20.8, 20.9, 21.1, 21.3, 21.5, 21.7, 21.9, 22.0, 22.2, 22.4, 22.6, 22.8, 23.0, 23.1, 23.3, 23.5, 23.6, 23.8])\nforest_coverage_americas = np.array([53.2, 53.1, 52.9, 52.8, 52.7, 52.6, 52.4, 52.3, 52.2, 52.1, 51.9, 51.8, 51.7, 51.6, 51.5, 51.3, 51.2, 51.1, 51.0, 50.9])\n\n# Create a scatter plot\nplt.figure(figsize=(12,8))\nplt.scatter(years, forest_coverage_europe, label='Europe', color='#393fc4', marker='o')\nplt.scatter(years, forest_coverage_asia, label='Asia', color='#125bab', marker='^')\nplt.scatter(years, forest_coverage_americas, label='Americas', color='#64cfc4', marker='s')\n\n# Set the labels\nplt.title('Forestry coverage over the past two decades (% of land area)', fontsize=16)\nplt.xlabel('Year', fontsize=14)\nplt.ylabel('Forest coverage %', fontsize=14)\nplt.legend(fontsize=12)\n\n# Save the plot\nplt.tight_layout()\nplt.savefig('line_charts/line_charts_visual_linguistic/train/597.png')\nplt.show()\n```\nChoices:['Europe', 'Asia', 'Americas']\nStudent's Response:Americas\n",
    "Question Text:\nDid sales for action figures surpassed sales for trucks every month?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# Create a scatter plot\ndoll_sales = [25, 35, 30, 35, 27, 39, 42, 43, 38, 36]\ntruck_sales = [42, 50, 47, 53, 57, 59, 61, 64, 70, 72]\nfigure_sales = [67, 74, 79, 85, 92, 98, 104, 113, 120, 124]\n\nmonths = list(range(1, 11))\n\n# Set the figure size\nplt.figure(figsize=(15, 8))\n\nplt.scatter(months, doll_sales, color='r', marker='o', label=\"Doll Sales\")\nplt.scatter(months, truck_sales, color='g', marker='s', label=\"Truck Sales\")\nplt.scatter(months, figure_sales, color='b', marker='^', label=\"Action Figure Sales\")\n\n# Set labels and title\nplt.title(\"Toys Sales Each Month\")\nplt.xlabel(\"Month\")\nplt.ylabel(\"Sales\")\nplt.legend(loc=\"best\")\n\n# Save to file\nplt.savefig('line_charts/line_charts_visual_linguistic/train/598.png')\nplt.show()\n\n\nall_months_greater = all(i > j for i, j in zip(figure_sales, truck_sales))\nprint('All months greater:', all_months_greater)\n```\nChoices:['Yes', 'No']\nStudent's Response:Yes.\n",
    "Question Text:\nIn the year 2020, which artist had the highest number of paintings sold?\nFigure Code:\n```\nimport matplotlib.pyplot as plt \n\n# Data\nYears = range(1950, 2100, 10)\nSeries1 = [5, 3, 8, 12, 7, 9, 15, 9, 14, 10, 15, 12, 14, 15, 16]\nSeries2 = [9, 7, 15, 11, 9, 12, 14, 13, 10, 12, 14, 10, 13, 15, 14]\nSeries3 = [15, 12, 11, 13, 9, 8, 7, 10, 12, 14, 12, 11, 7, 9, 8]\nSeries4 = [3, 5, 7, 10, 15, 12, 9, 7, 5, 3, 5, 7, 10, 8, 5]\nSeries5 = [8, 9, 13, 14, 12, 10, 9, 8, 10, 15, 14, 13, 12, 10, 15]\n\n# Creating line chart\nplt.plot(Years, Series1, color='#a90f7d', marker='o', label='Van Gogh') \nplt.plot(Years, Series2, color='#4399ac', marker='s', label='Picasso') \nplt.plot(Years, Series3, color='#e2e4ec', marker='^', label='Da Vinci')\nplt.plot(Years, Series4, color='#e8bfe5', marker='v', label='Raphael')\nplt.plot(Years, Series5, color='#df3389', marker='*', label='Monet')\n\nplt.title('Number of Paintings Sold Over Time')\nplt.xlabel('Years')\nplt.ylabel('Number of Paintings Sold (in thousands)')\nplt.legend()\nplt.grid(True)\nplt.savefig('line_charts/line_charts_visual_linguistic/train/599.png')\nplt.show()\n```\nChoices:['Van Gogh', 'Picasso', 'Da Vinci', 'Raphael', 'Monet']\nStudent's Response:Monet\n",
    "Question Text:\nWhich entity's income increased by 30 (thousands of dollars) from 2010 to 2020?\nFigure Code:\n```\nimport matplotlib.pyplot as plt\n\n# data\nyears = range(2010, 2021)\npersonal_income = [30, 32, 35, 37, 40, 43, 47, 51, 55, 59, 63]\ncompany_income = [50, 52, 56, 60, 65, 70, 75, 80, 85, 90, 96]\ngovernment_income = [70, 72, 76, 78, 82, 87, 93, 100, 108, 115, 120]\nnon_profit_income = [10, 12, 15, 17, 20, 22, 26, 29, 33, 35, 38]\n\n# plot\nplt.figure(figsize=[10,5])\nplt.plot(years, personal_income, marker='o', color='#d0d15e', label='Personal')\nplt.plot(years, company_income, marker='o', color='r', label='Company')\nplt.plot(years, government_income, marker='o', color='b', label='Government')\nplt.plot(years, non_profit_income, marker='o', color='g', label='Non-profit')\n\nplt.xlabel('Years')\nplt.ylabel('Income (in $1000s)')\nplt.title('Income over the years')\nplt.legend()\n\nplt.savefig('line_charts/line_charts_visual_linguistic/train/600.png')\nplt.show()\n```\nChoices:['Personal', 'Company', 'Government', 'Non-profit']\nStudent's Response:\"Government\"\n"
]